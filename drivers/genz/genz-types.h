/*
 * Copyright (C) 2019 Hewlett Packard Enterprise Development LP.
 * All rights reserved.
 *
 * This software is available to you under a choice of one of two
 * licenses.  You may choose to be licensed under the terms of the GNU
 * General Public License (GPL) Version 2, available from the file
 * COPYING in the main directory of this source tree, or the
 * BSD license below:
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *
 *   * Redistributions in binary form must reproduce the above
 *     copyright notice, this list of conditions and the following
 *     disclaimer in the documentation and/or other materials provided
 *     with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * This file is automatically generated based of XML GenZ Specs:
 *     Version : 050242
 *     Date    : 2019-02-04 17:17:24
 *
 * Generator Script Meta:
 *     Version      : v0.2
 *     Generated On : 08, May 2019
 *
 *
 * **************************************************************
 *
 * Struct count  -----------------------------------  443
 * Enums count   -----------------------------------  203
 * Entries count (declared inside structs and enums)  2394
 */

#ifndef __GENZH__
#define __GENZH__
#ifndef __KERNEL__

#include <stdint.h>
#include <inttypes.h>

#define UUID_SIZE 16
typedef struct {
    unsigned char b[UUID_SIZE];
} uuid_t;

#else

#include <linux/uuid.h>

#endif


/* *************************************************************************** */

enum c_status_c_state {
    C_STATUS_C_STATE_C_DOWN = 0x0,
    C_STATUS_C_STATE_C_CFG = 0x1,
    C_STATUS_C_STATE_C_UP = 0x2,
    C_STATUS_C_STATE_C_LP = 0x3,
    C_STATUS_C_STATE_C_DLP = 0x4
};

enum c_status_component_thermal_status {
    C_STATUS_COMPONENT_THERMAL_STATUS_NOMINAL_THERMAL_CONDITIONS = 0x0, //FIXME: name too long.
    C_STATUS_COMPONENT_THERMAL_STATUS_CAUTION_T_HERMAL_L_IMIT = 0x1, //FIXME: name too long.
    C_STATUS_COMPONENT_THERMAL_STATUS_EXCEEDED_U_PPER_T_HERMAL_L_IMIT = 0x2, //FIXME: name too long.
    C_STATUS_COMPONENT_THERMAL_STATUS_THERMAL_SHUTDOWN_TRIGGERED = 0x3, //FIXME: name too long.
};

enum c_status_hwinit_valid {
    C_STATUS_HWINIT_VALID_IN_PROGRESS = 0x0,
    C_STATUS_HWINIT_VALID_VALID = 0x1
};

enum c_control_initiate_component_reset {
    C_CONTROL_INITIATE_COMPONENT_RESET_NO_IMPACT = 0x0,
    C_CONTROL_INITIATE_COMPONENT_RESET_FULL_COMPONENT_RESET = 0x1, //FIXME: name too long.
    C_CONTROL_INITIATE_COMPONENT_RESET_WARM_COMPONENT_RESET = 0x2, //FIXME: name too long.
    C_CONTROL_INITIATE_COMPONENT_RESET_WARM_NON_SWITCH_COMPONENT_RESET = 0x3, //FIXME: name too long.
    C_CONTROL_INITIATE_COMPONENT_RESET_CONTENT_COMPONENT_RESET = 0x4, //FIXME: name too long.
};

enum c_control_lpd_responder_zmmu_bypass_control {
    C_CONTROL_LPD_RESPONDER_ZMMU_BYPASS_CONTROL_DO_NOT_BYPASS_RESPONDER_ZMMU = 0x0, //FIXME: name too long.
    C_CONTROL_LPD_RESPONDER_ZMMU_BYPASS_CONTROL_BYPASS_RESPONDER_ZMMU = 0x1, //FIXME: name too long.
};

enum component_cap_1_address_field_interpretation {
    COMPONENT_CAP_1_ADDRESS_FIELD_INTERPRETATION_ZERO_BASED = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_ADDRESS_FIELD_INTERPRETATION_NON_ZERO_BASED = 0x1, //FIXME: name too long.
};

enum component_cap_1_addressable_resource_classification {
    COMPONENT_CAP_1_ADDRESSABLE_RESOURCE_CLASSIFICATION_NO_ADDRESSABLE_DATA_SPACE_RESOURCES = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_ADDRESSABLE_RESOURCE_CLASSIFICATION_BYTE_ADDRESSABLE_DATA_SPACE_MEDIA = 0x1, //FIXME: name too long.
    COMPONENT_CAP_1_ADDRESSABLE_RESOURCE_CLASSIFICATION_BLOCK_ADDRESSABLE_DATA_SPACE_MEDIA = 0x2, //FIXME: name too long.
    COMPONENT_CAP_1_ADDRESSABLE_RESOURCE_CLASSIFICATION_COMPONENT_MEDIA_STRUCTURE_SPECIFIES_M_EDIA = 0x3, //FIXME: name too long.
    COMPONENT_CAP_1_ADDRESSABLE_RESOURCE_CLASSIFICATION_NON_MEDIA_DATA_SPACE_RESOURCE = 0x4, //FIXME: name too long.
};

enum component_cap_1_cached_component_control_space_structure_support {
    COMPONENT_CAP_1_CACHED_COMPONENT_CONTROL_SPACE_STRUCTURE_SUPPORT_NON_CACHED = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_CACHED_COMPONENT_CONTROL_SPACE_STRUCTURE_SUPPORT_CACHED = 0x1, //FIXME: name too long.
};

enum component_cap_1_configuration_post_emergency_power_reduction {
    COMPONENT_CAP_1_CONFIGURATION_POST_EMERGENCY_POWER_REDUCTION_NO_SOFTWARE_IS_REQUIRED = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_CONFIGURATION_POST_EMERGENCY_POWER_REDUCTION_SOFTWARE_IS_REQUIRED = 0x1, //FIXME: name too long.
};

enum component_cap_1_c_state_power_control_support {
    COMPONENT_CAP_1_C_STATE_POWER_CONTROL_SUPPORT_NOTIFICATION_ONLY = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_C_STATE_POWER_CONTROL_SUPPORT_NOTIFICATION_AND_TRANSITION_REQUESTS = 0x1, //FIXME: name too long.
};

enum component_cap_1_power_s_cale_pwrs_is_used_to_calculate_the_various_component_maximum_non_auxiliary_power_consumption_values {
    COMPONENT_CAP_1_POWER_S_CALE_PWRS_IS_USED_TO_CALCULATE_THE_VARIOUS_COMPONENT_MAXIMUM_NON_AUXILIARY_POWER_CONSUMPTION_VALUES_1_0 = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_POWER_S_CALE_PWRS_IS_USED_TO_CALCULATE_THE_VARIOUS_COMPONENT_MAXIMUM_NON_AUXILIARY_POWER_CONSUMPTION_VALUES_0_1 = 0x1, //FIXME: name too long.
    COMPONENT_CAP_1_POWER_S_CALE_PWRS_IS_USED_TO_CALCULATE_THE_VARIOUS_COMPONENT_MAXIMUM_NON_AUXILIARY_POWER_CONSUMPTION_VALUES_0_01 = 0x2, //FIXME: name too long.
    COMPONENT_CAP_1_POWER_S_CALE_PWRS_IS_USED_TO_CALCULATE_THE_VARIOUS_COMPONENT_MAXIMUM_NON_AUXILIARY_POWER_CONSUMPTION_VALUES_0_001 = 0x3, //FIXME: name too long.
    COMPONENT_CAP_1_POWER_S_CALE_PWRS_IS_USED_TO_CALCULATE_THE_VARIOUS_COMPONENT_MAXIMUM_NON_AUXILIARY_POWER_CONSUMPTION_VALUES_0_0001 = 0x4, //FIXME: name too long.
    COMPONENT_CAP_1_POWER_S_CALE_PWRS_IS_USED_TO_CALCULATE_THE_VARIOUS_COMPONENT_MAXIMUM_NON_AUXILIARY_POWER_CONSUMPTION_VALUES_0_00001 = 0x5, //FIXME: name too long.
    COMPONENT_CAP_1_POWER_S_CALE_PWRS_IS_USED_TO_CALCULATE_THE_VARIOUS_COMPONENT_MAXIMUM_NON_AUXILIARY_POWER_CONSUMPTION_VALUES_0_000001 = 0x6, //FIXME: name too long.
    COMPONENT_CAP_1_POWER_S_CALE_PWRS_IS_USED_TO_CALCULATE_THE_VARIOUS_COMPONENT_MAXIMUM_NON_AUXILIARY_POWER_CONSUMPTION_VALUES_0_0000001 = 0x7, //FIXME: name too long.
};

enum component_cap_1_auxiliary_p_ower_s_cale_apwrs_is_used_to_calculate_the_maximum_power_consumption_a_component_is_capable_of_consuming_when_operating_on_auxiliary_power {
    COMPONENT_CAP_1_AUXILIARY_P_OWER_S_CALE_APWRS_IS_USED_TO_CALCULATE_THE_MAXIMUM_POWER_CONSUMPTION_A_COMPONENT_IS_CAPABLE_OF_CONSUMING_WHEN_OPERATING_ON_AUXILIARY_POWER_1_0 = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_AUXILIARY_P_OWER_S_CALE_APWRS_IS_USED_TO_CALCULATE_THE_MAXIMUM_POWER_CONSUMPTION_A_COMPONENT_IS_CAPABLE_OF_CONSUMING_WHEN_OPERATING_ON_AUXILIARY_POWER_0_1 = 0x1, //FIXME: name too long.
    COMPONENT_CAP_1_AUXILIARY_P_OWER_S_CALE_APWRS_IS_USED_TO_CALCULATE_THE_MAXIMUM_POWER_CONSUMPTION_A_COMPONENT_IS_CAPABLE_OF_CONSUMING_WHEN_OPERATING_ON_AUXILIARY_POWER_0_01 = 0x2, //FIXME: name too long.
    COMPONENT_CAP_1_AUXILIARY_P_OWER_S_CALE_APWRS_IS_USED_TO_CALCULATE_THE_MAXIMUM_POWER_CONSUMPTION_A_COMPONENT_IS_CAPABLE_OF_CONSUMING_WHEN_OPERATING_ON_AUXILIARY_POWER_0_001 = 0x3, //FIXME: name too long.
    COMPONENT_CAP_1_AUXILIARY_P_OWER_S_CALE_APWRS_IS_USED_TO_CALCULATE_THE_MAXIMUM_POWER_CONSUMPTION_A_COMPONENT_IS_CAPABLE_OF_CONSUMING_WHEN_OPERATING_ON_AUXILIARY_POWER_0_0001 = 0x4, //FIXME: name too long.
    COMPONENT_CAP_1_AUXILIARY_P_OWER_S_CALE_APWRS_IS_USED_TO_CALCULATE_THE_MAXIMUM_POWER_CONSUMPTION_A_COMPONENT_IS_CAPABLE_OF_CONSUMING_WHEN_OPERATING_ON_AUXILIARY_POWER_0_00001 = 0x5, //FIXME: name too long.
    COMPONENT_CAP_1_AUXILIARY_P_OWER_S_CALE_APWRS_IS_USED_TO_CALCULATE_THE_MAXIMUM_POWER_CONSUMPTION_A_COMPONENT_IS_CAPABLE_OF_CONSUMING_WHEN_OPERATING_ON_AUXILIARY_POWER_0_000001 = 0x6, //FIXME: name too long.
    COMPONENT_CAP_1_AUXILIARY_P_OWER_S_CALE_APWRS_IS_USED_TO_CALCULATE_THE_MAXIMUM_POWER_CONSUMPTION_A_COMPONENT_IS_CAPABLE_OF_CONSUMING_WHEN_OPERATING_ON_AUXILIARY_POWER_0_0000001 = 0x7, //FIXME: name too long.
};

enum component_cap_1_core_latency_scale {
    COMPONENT_CAP_1_CORE_LATENCY_SCALE_US = 0x0,
    COMPONENT_CAP_1_CORE_LATENCY_SCALE_NS = 0x1,
    COMPONENT_CAP_1_CORE_LATENCY_SCALE_PS = 0x2
};

enum component_cap_1_maximum_number_cid {
    COMPONENT_CAP_1_MAXIMUM_NUMBER_CID_CID_0 = 0x0,
    COMPONENT_CAP_1_MAXIMUM_NUMBER_CID_CID_0_CID_1 = 0x1,
    COMPONENT_CAP_1_MAXIMUM_NUMBER_CID_CID_0_CID_2 = 0x2,
    COMPONENT_CAP_1_MAXIMUM_NUMBER_CID_CID_0_CID_3 = 0x3
};

enum component_cap_1_retransmission_timer_support {
    COMPONENT_CAP_1_RETRANSMISSION_TIMER_SUPPORT_UNSUPPORTED_RESPONDER_ONLY_COMPONENT = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_RETRANSMISSION_TIMER_SUPPORT_MUTO = 0x1,
    COMPONENT_CAP_1_RETRANSMISSION_TIMER_SUPPORT_TO_K = 0x2,
    COMPONENT_CAP_1_RETRANSMISSION_TIMER_SUPPORT_TO_K_AND_LTO_K = 0x3, //FIXME: name too long.
};

enum component_cap_1_timer_unit {
    COMPONENT_CAP_1_TIMER_UNIT_NS_1 = 0x0,
    COMPONENT_CAP_1_TIMER_UNIT_NS_10 = 0x1,
    COMPONENT_CAP_1_TIMER_UNIT_NS_100 = 0x2,
    COMPONENT_CAP_1_TIMER_UNIT_US_1 = 0x3,
    COMPONENT_CAP_1_TIMER_UNIT_US_10 = 0x4,
    COMPONENT_CAP_1_TIMER_UNIT_US_100 = 0x5,
    COMPONENT_CAP_1_TIMER_UNIT_MS_1 = 0x6,
    COMPONENT_CAP_1_TIMER_UNIT_MS_10 = 0x7,
    COMPONENT_CAP_1_TIMER_UNIT_MS_100 = 0x8,
    COMPONENT_CAP_1_TIMER_UNIT_S_1 = 0x9
};

enum component_cap_1_control_no_snoop_control {
    COMPONENT_CAP_1_CONTROL_NO_SNOOP_CONTROL_ALWAYS_0 = 0x0,
    COMPONENT_CAP_1_CONTROL_NO_SNOOP_CONTROL_ALLOW_1 = 0x1
};

enum component_cap_1_control_built_in_self_test_bist_control {
    COMPONENT_CAP_1_CONTROL_BUILT_IN_SELF_TEST_BIST_CONTROL_HALT = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_CONTROL_BUILT_IN_SELF_TEST_BIST_CONTROL_INVOKE_BIST = 0x1, //FIXME: name too long.
};

enum component_cap_1_control_manager_type {
    COMPONENT_CAP_1_CONTROL_MANAGER_TYPE_PRIMARY_MANAGER = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_CONTROL_MANAGER_TYPE_FABRIC_M_ANAGER = 0x1, //FIXME: name too long.
};

enum component_cap_1_control_primary_manager_role {
    COMPONENT_CAP_1_CONTROL_PRIMARY_MANAGER_ROLE_NOT_CO_LOCATED = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_CONTROL_PRIMARY_MANAGER_ROLE_CO_LOCATED = 0x1, //FIXME: name too long.
};

enum component_cap_1_control_primary_fabric_manager_role {
    COMPONENT_CAP_1_CONTROL_PRIMARY_FABRIC_MANAGER_ROLE_NOT_CO_LOCATED = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_CONTROL_PRIMARY_FABRIC_MANAGER_ROLE_CO_LOCATED = 0x1, //FIXME: name too long.
};

enum component_cap_1_control_secondary_fabric_manager_role {
    COMPONENT_CAP_1_CONTROL_SECONDARY_FABRIC_MANAGER_ROLE_NOT_CO_LOCATED = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_CONTROL_SECONDARY_FABRIC_MANAGER_ROLE_CO_LOCATED = 0x1, //FIXME: name too long.
};

enum component_cap_1_control_power_manager_enable {
    COMPONENT_CAP_1_CONTROL_POWER_MANAGER_ENABLE_DISABLED = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_CONTROL_POWER_MANAGER_ENABLE_ENABLED_CID = 0x1, //FIXME: name too long.
    COMPONENT_CAP_1_CONTROL_POWER_MANAGER_ENABLE_ENABLED_CID_SID = 0x2, //FIXME: name too long.
};

enum component_cap_1_control_in_band_management_disable {
    COMPONENT_CAP_1_CONTROL_IN_BAND_MANAGEMENT_DISABLE_ENABLED_DEFAULT = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_CONTROL_IN_BAND_MANAGEMENT_DISABLE_DISABLED = 0x1, //FIXME: name too long.
};

enum component_cap_1_control_out_of_band_management_disable {
    COMPONENT_CAP_1_CONTROL_OUT_OF_BAND_MANAGEMENT_DISABLE_ENABLED_DEFAULT = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_CONTROL_OUT_OF_BAND_MANAGEMENT_DISABLE_DISABLED = 0x1, //FIXME: name too long.
};

enum component_cap_1_control_max_power_control {
    COMPONENT_CAP_1_CONTROL_MAX_POWER_CONTROL_LPWR = 0x0,
    COMPONENT_CAP_1_CONTROL_MAX_POWER_CONTROL_NPWR = 0x1,
    COMPONENT_CAP_1_CONTROL_MAX_POWER_CONTROL_HPWR = 0x2,
    COMPONENT_CAP_1_CONTROL_MAX_POWER_CONTROL_MAX_MECH = 0x3
};

enum component_cap_1_control_c_state_power_control_enable {
    COMPONENT_CAP_1_CONTROL_C_STATE_POWER_CONTROL_ENABLE_NOTIFICATION_ONLY = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_CONTROL_C_STATE_POWER_CONTROL_ENABLE_NOTIFICATION_AND_TRANSITION_REQUESTS = 0x1, //FIXME: name too long.
};

enum component_cap_1_control_lowest_automatic_c_state_level {
    COMPONENT_CAP_1_CONTROL_LOWEST_AUTOMATIC_C_STATE_LEVEL_C_UP = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_CONTROL_LOWEST_AUTOMATIC_C_STATE_LEVEL_C_LP = 0x1, //FIXME: name too long.
    COMPONENT_CAP_1_CONTROL_LOWEST_AUTOMATIC_C_STATE_LEVEL_C_DLP = 0x2, //FIXME: name too long.
};

enum component_cap_1_control_host_manager_mgr_uuid_enable {
    COMPONENT_CAP_1_CONTROL_HOST_MANAGER_MGR_UUID_ENABLE_ZERO = 0x0, //FIXME: name too long.
    COMPONENT_CAP_1_CONTROL_HOST_MANAGER_MGR_UUID_ENABLE_CORE = 0x1, //FIXME: name too long.
    COMPONENT_CAP_1_CONTROL_HOST_MANAGER_MGR_UUID_ENABLE_VENDOR_DEFINED = 0x2, //FIXME: name too long.
};

enum component_cap_2_r_key_support {
    COMPONENT_CAP_2_R_KEY_SUPPORT_UNSUPPORTED = 0x0,
    COMPONENT_CAP_2_R_KEY_SUPPORT_SUPPORTED_AS_A_REQUESTER = 0x1, //FIXME: name too long.
    COMPONENT_CAP_2_R_KEY_SUPPORT_SUPPORTED_AS_A_RESPONDER = 0x2, //FIXME: name too long.
    COMPONENT_CAP_2_R_KEY_SUPPORT_SUPPORTED_AS_A_REQUESTER_RESPONDER = 0x3, //FIXME: name too long.
};

enum component_cap_2_poison_granularity_support {
    COMPONENT_CAP_2_POISON_GRANULARITY_SUPPORT_UNSUPPORTED = 0x0, //FIXME: name too long.
    COMPONENT_CAP_2_POISON_GRANULARITY_SUPPORT_BYTES_16 = 0x1, //FIXME: name too long.
    COMPONENT_CAP_2_POISON_GRANULARITY_SUPPORT_BYTES_32 = 0x2, //FIXME: name too long.
    COMPONENT_CAP_2_POISON_GRANULARITY_SUPPORT_BYTES_64 = 0x3, //FIXME: name too long.
    COMPONENT_CAP_2_POISON_GRANULARITY_SUPPORT_BYTES_128 = 0x4, //FIXME: name too long.
    COMPONENT_CAP_2_POISON_GRANULARITY_SUPPORT_BYTES_256 = 0x5, //FIXME: name too long.
    COMPONENT_CAP_2_POISON_GRANULARITY_SUPPORT_BYTES_512 = 0x6, //FIXME: name too long.
    COMPONENT_CAP_2_POISON_GRANULARITY_SUPPORT_BYTES_1024 = 0x7, //FIXME: name too long.
    COMPONENT_CAP_2_POISON_GRANULARITY_SUPPORT_BYTES_2048 = 0x8, //FIXME: name too long.
    COMPONENT_CAP_2_POISON_GRANULARITY_SUPPORT_BYTES_4096 = 0x9, //FIXME: name too long.
};

enum component_cap_2_performance_marker_support {
    COMPONENT_CAP_2_PERFORMANCE_MARKER_SUPPORT_UNSUPPORTED = 0x0, //FIXME: name too long.
    COMPONENT_CAP_2_PERFORMANCE_MARKER_SUPPORT_TYPE_0 = 0x1,
    COMPONENT_CAP_2_PERFORMANCE_MARKER_SUPPORT_TYPE_1 = 0x2
};

enum component_cap_2_meta_read_write_support {
    COMPONENT_CAP_2_META_READ_WRITE_SUPPORT_UNSUPPORTED = 0x0, //FIXME: name too long.
    COMPONENT_CAP_2_META_READ_WRITE_SUPPORT_C_UUID = 0x1,
    COMPONENT_CAP_2_META_READ_WRITE_SUPPORT_VENDOR_DEFINED = 0x2, //FIXME: name too long.
    COMPONENT_CAP_2_META_READ_WRITE_SUPPORT_SERVICE_UUID = 0x3, //FIXME: name too long.
};

enum component_cap_2_control_di_pi_block_size {
    COMPONENT_CAP_2_CONTROL_DI_PI_BLOCK_SIZE_BYTES_512 = 0x0,
    COMPONENT_CAP_2_CONTROL_DI_PI_BLOCK_SIZE_BYTES_4096 = 0x1, //FIXME: name too long.
};

enum component_cap_3_lightweight_notification_support {
    COMPONENT_CAP_3_LIGHTWEIGHT_NOTIFICATION_SUPPORT_UNSUPPORTED = 0x0, //FIXME: name too long.
    COMPONENT_CAP_3_LIGHTWEIGHT_NOTIFICATION_SUPPORT_LN_REQUESTER = 0x1, //FIXME: name too long.
    COMPONENT_CAP_3_LIGHTWEIGHT_NOTIFICATION_SUPPORT_LN_RESPONDER = 0x2, //FIXME: name too long.
    COMPONENT_CAP_3_LIGHTWEIGHT_NOTIFICATION_SUPPORT_LN_REQUESTER_AND_LN_RESPONDER = 0x3, //FIXME: name too long.
};

enum component_cap_3_control_lnrsp_ln_block_size {
    COMPONENT_CAP_3_CONTROL_LNRSP_LN_BLOCK_SIZE_UNSUPPORTED_PER_PAGE_LN_BLOCK_SIZE = 0x0, //FIXME: name too long.
    COMPONENT_CAP_3_CONTROL_LNRSP_LN_BLOCK_SIZE_32_BYTE_LN_BLOCK_SIZE = 0x1, //FIXME: name too long.
    COMPONENT_CAP_3_CONTROL_LNRSP_LN_BLOCK_SIZE_64_BYTE_LN_BLOCK_SIZE = 0x2, //FIXME: name too long.
    COMPONENT_CAP_3_CONTROL_LNRSP_LN_BLOCK_SIZE_128_BYTE_LN_BLOCK_SIZE = 0x3, //FIXME: name too long.
    COMPONENT_CAP_3_CONTROL_LNRSP_LN_BLOCK_SIZE_256_BYTE_LN_BLOCK_SIZE = 0x4, //FIXME: name too long.
};

enum opcode_set_cap_1_control_enabled_cache_line_size {
    OPCODE_SET_CAP_1_CONTROL_ENABLED_CACHE_LINE_SIZE_DISABLED = 0x0, //FIXME: name too long.
    OPCODE_SET_CAP_1_CONTROL_ENABLED_CACHE_LINE_SIZE_BYTES_32 = 0x1, //FIXME: name too long.
    OPCODE_SET_CAP_1_CONTROL_ENABLED_CACHE_LINE_SIZE_BYTES_64 = 0x2, //FIXME: name too long.
    OPCODE_SET_CAP_1_CONTROL_ENABLED_CACHE_LINE_SIZE_BYTES_128 = 0x3, //FIXME: name too long.
    OPCODE_SET_CAP_1_CONTROL_ENABLED_CACHE_LINE_SIZE_BYTES_256 = 0x4, //FIXME: name too long.
};

enum opcode_set_cap_1_control_interface_uniform_opclass_selected {
    OPCODE_SET_CAP_1_CONTROL_INTERFACE_UNIFORM_OPCLASS_SELECTED_NOT_CONFIGURED = 0x0, //FIXME: name too long.
    OPCODE_SET_CAP_1_CONTROL_INTERFACE_UNIFORM_OPCLASS_SELECTED_EXPLICIT_OPCLASSES = 0x1, //FIXME: name too long.
    OPCODE_SET_CAP_1_CONTROL_INTERFACE_UNIFORM_OPCLASS_SELECTED_P2P_CORE_OPCLASS = 0x2, //FIXME: name too long.
    OPCODE_SET_CAP_1_CONTROL_INTERFACE_UNIFORM_OPCLASS_SELECTED_P2P_COHERENCY_OPCLASS = 0x3, //FIXME: name too long.
    OPCODE_SET_CAP_1_CONTROL_INTERFACE_UNIFORM_OPCLASS_SELECTED_P2P_VENDOR_DEFINED_OPCLASS = 0x4, //FIXME: name too long.
};

enum opcode_set_cap_1_atomic_data_endian_type {
    OPCODE_SET_CAP_1_ATOMIC_DATA_ENDIAN_TYPE_NONE = 0x0,
    OPCODE_SET_CAP_1_ATOMIC_DATA_ENDIAN_TYPE_LITTLE = 0x1,
    OPCODE_SET_CAP_1_ATOMIC_DATA_ENDIAN_TYPE_BIG = 0x2,
    OPCODE_SET_CAP_1_ATOMIC_DATA_ENDIAN_TYPE_BOTH = 0x3
};

enum opcode_set_cap_1_interrupt_role_if_interrupts_are_supported {
    OPCODE_SET_CAP_1_INTERRUPT_ROLE_IF_INTERRUPTS_ARE_SUPPORTED_UNSUPPORTED = 0x0, //FIXME: name too long.
    OPCODE_SET_CAP_1_INTERRUPT_ROLE_IF_INTERRUPTS_ARE_SUPPORTED_REQUESTER_ROLE = 0x1, //FIXME: name too long.
    OPCODE_SET_CAP_1_INTERRUPT_ROLE_IF_INTERRUPTS_ARE_SUPPORTED_RESPONDER_ROLE = 0x2, //FIXME: name too long.
    OPCODE_SET_CAP_1_INTERRUPT_ROLE_IF_INTERRUPTS_ARE_SUPPORTED_REQUESTER_RESPONDER_ROLE = 0x3, //FIXME: name too long.
};

enum opcode_set_cap_1_single_opcode_set_support {
    OPCODE_SET_CAP_1_SINGLE_OPCODE_SET_SUPPORT_SINGLE = 0x0,
    OPCODE_SET_CAP_1_SINGLE_OPCODE_SET_SUPPORT_MULTIPLE = 0x1, //FIXME: name too long.
};

enum opcode_set_cap_1_per_destination_opcode_set_support {
    OPCODE_SET_CAP_1_PER_DESTINATION_OPCODE_SET_SUPPORT_COMPONENT_DESTINATION_TABLE_SUPPORTED = 0x0, //FIXME: name too long.
    OPCODE_SET_CAP_1_PER_DESTINATION_OPCODE_SET_SUPPORT_VENDOR_DEFINED_METHOD_SUPPORTED = 0x1, //FIXME: name too long.
};

enum opcode_set_cap_1_uniform_opclass_support {
    OPCODE_SET_CAP_1_UNIFORM_OPCLASS_SUPPORT_NON_UNIFORM_OPCLASS_ALLOWED = 0x0, //FIXME: name too long.
    OPCODE_SET_CAP_1_UNIFORM_OPCLASS_SUPPORT_UNIFORM_OPCLASS_REQUIRED = 0x1, //FIXME: name too long.
};

enum i_status_interface_state {
    I_STATUS_INTERFACE_STATE_I_DOWN_UNINITIALIZED_STATE = 0x0, //FIXME: name too long.
    I_STATUS_INTERFACE_STATE_I_CFG_INTERFACE_INITIALIZATION_IN_PROGRESS = 0x1, //FIXME: name too long.
    I_STATUS_INTERFACE_STATE_I_UP_OPERATIONAL_STATE_PACKET_EXCHANGE_ENABLED = 0x2, //FIXME: name too long.
    I_STATUS_INTERFACE_STATE_I_LP_LOW_POWER_STATE_PACKET_EXCHANGE_DISABLED = 0x3, //FIXME: name too long.
};

enum i_status_link_ctl_completion_status {
    I_STATUS_LINK_CTL_COMPLETION_STATUS_NO_LINK_CTL_RESPONSE_RECEIVED = 0x0, //FIXME: name too long.
    I_STATUS_LINK_CTL_COMPLETION_STATUS_SUCCESS_LINK_ACK_LINK_CTL_RETURNED = 0x1, //FIXME: name too long.
    I_STATUS_LINK_CTL_COMPLETION_STATUS_ERROR_VALUE_INDICATES_THE_HIGHEST_PRECEDENCE_ERROR_DETECTED_SEE_LINK_NAK_LINK_CTL_FOR_THE_SPECIFIC_ERROR_VALUES_AN_ERROR_VALUE_MAY_BE_ONE_RETURNED_IN_A_LINK_NAK_LINK_CTL_PACKET_OR_SET_BY_THIS_INTERFACE_DUE_TO_A_LOCAL_ERROR_E_G_AN_UNAUTHORIZED_LINK_CTL_OPERATION, //FIXME: name too long.
};

enum i_status_link_level_reliability_llr_status {
    I_STATUS_LINK_LEVEL_RELIABILITY_LLR_STATUS_FAILED_UNSUPPORTED = 0x0, //FIXME: name too long.
    I_STATUS_LINK_LEVEL_RELIABILITY_LLR_STATUS_SUCCESS = 0x1
};

enum i_control_auto_stop {
    I_CONTROL_AUTO_STOP_DO_NOT_AUTO_STOP = 0x0,
    I_CONTROL_AUTO_STOP_AUTO_STOP = 0x1
};

enum i_control_initiate_l_lp_transition {
    I_CONTROL_INITIATE_L_LP_TRANSITION_NO_IMPACT = 0x0,
    I_CONTROL_INITIATE_L_LP_TRANSITION_INITIATE_ENTER_LINK_LP_LINK_CTL_WITH_R_EQUESTED_PHY_LP_1_4, //FIXME: name too long.
};

enum i_control_initiate_l_up_lp_transition {
    I_CONTROL_INITIATE_L_UP_LP_TRANSITION_NO_IMPACT = 0x0,
    I_CONTROL_INITIATE_L_UP_LP_TRANSITION_INITIATE_ENTER_LINK_UP_LP_LINK_CTL_WITH_R_EQUESTED_PHY_UP_LP_1_4, //FIXME: name too long.
};

enum i_control_ingress_dr_enable {
    I_CONTROL_INGRESS_DR_ENABLE_CONTROL_OPCLASS_REQUEST_PACKET_WITH_DR_1B_SHALL_BE_HANDLED_AS_A_UP = 0x0, //FIXME: name too long.
    I_CONTROL_INGRESS_DR_ENABLE_MAY_RECEIVE_A_CONTROL_OPCLASS_REQUEST_PACKET_WITH_DR_1B = 0x1, //FIXME: name too long.
};

enum i_cap_1_implicit_flow_control_support {
    I_CAP_1_IMPLICIT_FLOW_CONTROL_SUPPORT_UNSUPPORTED_INTERFACE_SHALL_SUPPORT_EXPLICIT_FLOW_CONTROL = 0x0, //FIXME: name too long.
    I_CAP_1_IMPLICIT_FLOW_CONTROL_SUPPORT_SUPPORTED_INTERFACE_SHALL_SUPPORT_THE_P2P_CORE_OPCLASS_OR_THE_P2P_VENDOR_DEFINED_OPCLASS = 0x1, //FIXME: name too long.
};

enum i_cap_1_explicit_flow_control_support {
    I_CAP_1_EXPLICIT_FLOW_CONTROL_SUPPORT_UNSUPPORTED_INTERFACE_SHALL_SUPPORT_IMPLICIT_FLOW_CONTROL = 0x0, //FIXME: name too long.
    I_CAP_1_EXPLICIT_FLOW_CONTROL_SUPPORT_SUPPORTED_INTERFACE_MAY_SUPPORT_ANY_OPCLASS = 0x1, //FIXME: name too long.
};

enum i_cap_1_packet_relay_access_key_field_provisioned {
    I_CAP_1_PACKET_RELAY_ACCESS_KEY_FIELD_PROVISIONED_NOT_PROVISIONED = 0x0, //FIXME: name too long.
    I_CAP_1_PACKET_RELAY_ACCESS_KEY_FIELD_PROVISIONED_PROVISIONED = 0x1, //FIXME: name too long.
};

enum i_cap_1_aggregated_interface_support {
    I_CAP_1_AGGREGATED_INTERFACE_SUPPORT_NON_AGGREGATED_INTERFACE = 0x0, //FIXME: name too long.
    I_CAP_1_AGGREGATED_INTERFACE_SUPPORT_NON_AGGREGATED_OR_AGGREGATED_INTERFACE = 0x1, //FIXME: name too long.
};

enum i_cap_1_aggregated_interface_role {
    I_CAP_1_AGGREGATED_INTERFACE_ROLE_ONLY_NAI = 0x0,
    I_CAP_1_AGGREGATED_INTERFACE_ROLE_SAI_OR_NAI = 0x1
};

enum i_cap_1_p2p_standalone_acknowledgment_required {
    I_CAP_1_P2P_STANDALONE_ACKNOWLEDGMENT_REQUIRED_CONFIGURABLE = 0x0, //FIXME: name too long.
    I_CAP_1_P2P_STANDALONE_ACKNOWLEDGMENT_REQUIRED_HARDWIRED = 0x1, //FIXME: name too long.
};

enum i_cap_1_requires_interface_group_single_opclass {
    I_CAP_1_REQUIRES_INTERFACE_GROUP_SINGLE_OPCLASS_NOT_REQUIRED = 0x0, //FIXME: name too long.
    I_CAP_1_REQUIRES_INTERFACE_GROUP_SINGLE_OPCLASS_REQUIRED = 0x1, //FIXME: name too long.
};

enum i_cap_1_control_interface_containment_control {
    I_CAP_1_CONTROL_INTERFACE_CONTAINMENT_CONTROL_EXIT_INTERFACE_CONTAINMENT_HAS_NO_IMPACT_IF_NOT_IN_INTERFACE_CONTAINMENT = 0x0, //FIXME: name too long.
    I_CAP_1_CONTROL_INTERFACE_CONTAINMENT_CONTROL_TRIGGER_INTERFACE_CONTAINMENT_I_NDEPENDENT_OF_THE_I_ERROR_TRIGGER_FIELD_SETTINGS_ONLY_VALID_IF_INTERFACE_CONTAINMENT_IS_SUPPORTED = 0x1, //FIXME: name too long.
};

enum i_cap_1_control_flow_control_type {
    I_CAP_1_CONTROL_FLOW_CONTROL_TYPE_EXPLICIT_FLOW_CONTROL = 0x0, //FIXME: name too long.
    I_CAP_1_CONTROL_FLOW_CONTROL_TYPE_IMPLICIT_FLOW_CONTROL = 0x1, //FIXME: name too long.
};

enum i_cap_1_control_opclass_select {
    I_CAP_1_CONTROL_OPCLASS_SELECT_NOT_CONFIGURED = 0x0,
    I_CAP_1_CONTROL_OPCLASS_SELECT_INTERFACE_SHALL_BE_USED_ONLY_TO_EXCHANGE_EXPLICIT_OPCLASS_PACKETS = 0x1, //FIXME: name too long.
};

enum i_cap_1_control_daisy_chain_peer_interface_configured {
    I_CAP_1_CONTROL_DAISY_CHAIN_PEER_INTERFACE_CONFIGURED_NOT_CONFIGURED = 0x0, //FIXME: name too long.
    I_CAP_1_CONTROL_DAISY_CHAIN_PEER_INTERFACE_CONFIGURED_CONFIGURED = 0x1, //FIXME: name too long.
};

enum i_cap_1_control_link_level_reliability_llr_crc_trigger {
    I_CAP_1_CONTROL_LINK_LEVEL_RELIABILITY_LLR_CRC_TRIGGER_PCRC_ERROR_OR_ECRC_ERROR = 0x0, //FIXME: name too long.
    I_CAP_1_CONTROL_LINK_LEVEL_RELIABILITY_LLR_CRC_TRIGGER_ONLY_PCRC_ERROR = 0x1, //FIXME: name too long.
};

enum i_cap_1_control_peer_cid_configured {
    I_CAP_1_CONTROL_PEER_CID_CONFIGURED_NOT_CONFIGURED = 0x0,
    I_CAP_1_CONTROL_PEER_CID_CONFIGURED_CONFIGURED = 0x1
};

enum i_cap_1_control_peer_sid_configured {
    I_CAP_1_CONTROL_PEER_SID_CONFIGURED_NOT_CONFIGURED = 0x0,
    I_CAP_1_CONTROL_PEER_SID_CONFIGURED_CONFIGURED = 0x1
};

enum i_cap_1_control_omit_p2p_standalone_acknowledgment {
    I_CAP_1_CONTROL_OMIT_P2P_STANDALONE_ACKNOWLEDGMENT_DO_NOT_OMIT = 0x0, //FIXME: name too long.
    I_CAP_1_CONTROL_OMIT_P2P_STANDALONE_ACKNOWLEDGMENT_OMIT = 0x1, //FIXME: name too long.
};

enum i_cap_1_control_aggregated_interface_control {
    I_CAP_1_CONTROL_AGGREGATED_INTERFACE_CONTROL_INDEPENDENT_N_ON_AGGREGATED_INTERFACE = 0x0, //FIXME: name too long.
    I_CAP_1_CONTROL_AGGREGATED_INTERFACE_CONTROL_NAI = 0x1,
    I_CAP_1_CONTROL_AGGREGATED_INTERFACE_CONTROL_S_AI = 0x2
};

enum i_cap_2_transient_error_history_size {
    I_CAP_2_TRANSIENT_ERROR_HISTORY_SIZE_256 = 0x0,
    I_CAP_2_TRANSIENT_ERROR_HISTORY_SIZE_512 = 0x1,
    I_CAP_2_TRANSIENT_ERROR_HISTORY_SIZE_1024 = 0x2
};

enum peer_state_peer_component_c_state {
    PEER_STATE_PEER_COMPONENT_C_STATE_UNKNOWN = 0x0,
    PEER_STATE_PEER_COMPONENT_C_STATE_C_DOWN = 0x1,
    PEER_STATE_PEER_COMPONENT_C_STATE_C_CFG = 0x2,
    PEER_STATE_PEER_COMPONENT_C_STATE_C_UP = 0x3,
    PEER_STATE_PEER_COMPONENT_C_STATE_C_LP = 0x4,
    PEER_STATE_PEER_COMPONENT_C_STATE_C_DLP = 0x5
};

enum peer_state_peer_component_manager_type {
    PEER_STATE_PEER_COMPONENT_MANAGER_TYPE_PRIMARY_MANAGER = 0x0, //FIXME: name too long.
    PEER_STATE_PEER_COMPONENT_MANAGER_TYPE_FABRIC_MANAGER = 0x1, //FIXME: name too long.
};

enum peer_state_peer_component_multiple_cid_configuration {
    PEER_STATE_PEER_COMPONENT_MULTIPLE_CID_CONFIGURATION_SINGLE_CID = 0x0, //FIXME: name too long.
    PEER_STATE_PEER_COMPONENT_MULTIPLE_CID_CONFIGURATION_MULTIPLE_CIDS = 0x1, //FIXME: name too long.
};

enum peer_state_peer_interface_flow_control_support {
    PEER_STATE_PEER_INTERFACE_FLOW_CONTROL_SUPPORT_IMPLICIT_FLOW_CONTROL_SUPPORT = 0x0, //FIXME: name too long.
    PEER_STATE_PEER_INTERFACE_FLOW_CONTROL_SUPPORT_EXPLICIT_FLOW_CONTROL_SUPPORT = 0x1, //FIXME: name too long.
    PEER_STATE_PEER_INTERFACE_FLOW_CONTROL_SUPPORT_IMPLICIT_FLOW_CONTROL_AND_EXPLICIT_FLOW_CONTROL_SUPPORT = 0x2, //FIXME: name too long.
};

enum link_ctl_control_transmit_peer_warm_interface_reset_disable {
    LINK_CTL_CONTROL_TRANSMIT_PEER_WARM_INTERFACE_RESET_DISABLE_ENABLED = 0x0, //FIXME: name too long.
    LINK_CTL_CONTROL_TRANSMIT_PEER_WARM_INTERFACE_RESET_DISABLE_DISABLED = 0x1, //FIXME: name too long.
};

enum link_ctl_control_receive_peer_warm_interface_reset_disable {
    LINK_CTL_CONTROL_RECEIVE_PEER_WARM_INTERFACE_RESET_DISABLE_ENABLED = 0x0, //FIXME: name too long.
    LINK_CTL_CONTROL_RECEIVE_PEER_WARM_INTERFACE_RESET_DISABLE_DISABLED = 0x1, //FIXME: name too long.
};

enum link_ctl_control_transmit_peer_set_attribute_disable {
    LINK_CTL_CONTROL_TRANSMIT_PEER_SET_ATTRIBUTE_DISABLE_ENABLED = 0x0, //FIXME: name too long.
    LINK_CTL_CONTROL_TRANSMIT_PEER_SET_ATTRIBUTE_DISABLE_DISABLED = 0x1, //FIXME: name too long.
};

enum link_ctl_control_receive_peer_set_attribute_disable {
    LINK_CTL_CONTROL_RECEIVE_PEER_SET_ATTRIBUTE_DISABLE_ENABLED = 0x0, //FIXME: name too long.
    LINK_CTL_CONTROL_RECEIVE_PEER_SET_ATTRIBUTE_DISABLE_DISABLED = 0x1, //FIXME: name too long.
};

enum phy_status_physical_layer_operational_status {
    PHY_STATUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_DOWN_UNINITIALIZED_STATE = 0x0, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_UP = 0x1, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_DOWN_RETRAIN = 0x2, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_UP_LOW_POWER_1 = 0x3, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_UP_LOW_POWER_2 = 0x4, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_UP_LOW_POWER_3 = 0x5, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_UP_LOW_POWER_4 = 0x6, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_LOW_POWER_1 = 0x7, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_LOW_POWER_2 = 0x8, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_LOW_POWER_3 = 0x9, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_LOW_POWER_4 = 0xA, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_0XF_RESERVED = 0xB, //FIXME: name too long.
};

enum phy_status_previous_physical_layer_operational_status {
    PHY_STATUS_PREVIOUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_DOWN_UNINITIALIZED_STATE = 0x0, //FIXME: name too long.
    PHY_STATUS_PREVIOUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_UP = 0x1, //FIXME: name too long.
    PHY_STATUS_PREVIOUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_DOWN_RETRAIN = 0x2, //FIXME: name too long.
    PHY_STATUS_PREVIOUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_UP_LOW_POWER_1 = 0x3, //FIXME: name too long.
    PHY_STATUS_PREVIOUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_UP_LOW_POWER_2 = 0x4, //FIXME: name too long.
    PHY_STATUS_PREVIOUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_UP_LOW_POWER_3 = 0x5, //FIXME: name too long.
    PHY_STATUS_PREVIOUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_UP_LOW_POWER_4 = 0x6, //FIXME: name too long.
    PHY_STATUS_PREVIOUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_LOW_POWER_1 = 0x7, //FIXME: name too long.
    PHY_STATUS_PREVIOUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_LOW_POWER_2 = 0x8, //FIXME: name too long.
    PHY_STATUS_PREVIOUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_LOW_POWER_3 = 0x9, //FIXME: name too long.
    PHY_STATUS_PREVIOUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_PHY_LOW_POWER_4 = 0xA, //FIXME: name too long.
    PHY_STATUS_PREVIOUS_PHYSICAL_LAYER_OPERATIONAL_STATUS_0XF_RESERVED = 0xB, //FIXME: name too long.
};

enum phy_status_physical_layer_training_status {
    PHY_STATUS_PHYSICAL_LAYER_TRAINING_STATUS_TRAINING_HAS_NOT_OCCURRED = 0x0, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_TRAINING_STATUS_TRAINING_SUCCEEDED = 0x1, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_TRAINING_STATUS_TRAINING_HAS_FAILED = 0x2, //FIXME: name too long.
};

enum phy_status_physical_layer_retraining_status {
    PHY_STATUS_PHYSICAL_LAYER_RETRAINING_STATUS_RETRAINING_HAS_NOT_OCCURRED = 0x0, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_RETRAINING_STATUS_RETRAINING_SUCCEEDED = 0x1, //FIXME: name too long.
    PHY_STATUS_PHYSICAL_LAYER_RETRAINING_STATUS_RETRAINING_FAILED = 0x2, //FIXME: name too long.
};

enum phy_status_phy_tx_link_width_reduced {
    PHY_STATUS_PHY_TX_LINK_WIDTH_REDUCED_NOMINAL_TX_LINK_WIDTH = 0x0, //FIXME: name too long.
    PHY_STATUS_PHY_TX_LINK_WIDTH_REDUCED_REDUCED_TX_LINK_WIDTH = 0x1, //FIXME: name too long.
};

enum phy_status_phy_rx_link_width_reduced {
    PHY_STATUS_PHY_RX_LINK_WIDTH_REDUCED_NOMINAL_RX_LINK_WIDTH = 0x0, //FIXME: name too long.
    PHY_STATUS_PHY_RX_LINK_WIDTH_REDUCED_REDUCED_RX_LINK_WIDTH = 0x1, //FIXME: name too long.
};

enum phy_status_phy_tx_error_detected {
    PHY_STATUS_PHY_TX_ERROR_DETECTED_NO_TX_ERRORS_DETECTED = 0x0, //FIXME: name too long.
    PHY_STATUS_PHY_TX_ERROR_DETECTED_TX_ERROR_DETECTED = 0x1
};

enum phy_status_phy_rx_error_detected {
    PHY_STATUS_PHY_RX_ERROR_DETECTED_NO_RX_ERRORS_DETECTED = 0x0, //FIXME: name too long.
    PHY_STATUS_PHY_RX_ERROR_DETECTED_RX_ERROR_DETECTED = 0x1
};

enum phy_control_physical_layer_retraining_level {
    PHY_CONTROL_PHYSICAL_LAYER_RETRAINING_LEVEL_PHY_FULL_RETRAINING_LEVEL_1_DEFAULT = 0x0, //FIXME: name too long.
    PHY_CONTROL_PHYSICAL_LAYER_RETRAINING_LEVEL_PHY_RETRAINING_LEVEL_2 = 0x1, //FIXME: name too long.
    PHY_CONTROL_PHYSICAL_LAYER_RETRAINING_LEVEL_PHY_RETRAINING_LEVEL_3 = 0x2, //FIXME: name too long.
    PHY_CONTROL_PHYSICAL_LAYER_RETRAINING_LEVEL_PHY_RETRAINING_LEVEL_4 = 0x3, //FIXME: name too long.
};

enum phy_cap_1_default_phy {
    PHY_CAP_1_DEFAULT_PHY_NON_DEFAULT = 0x0,
    PHY_CAP_1_DEFAULT_PHY_DEFAULT = 0x1
};

enum phy_cap_1_control_interface_aggregation_type {
    PHY_CAP_1_CONTROL_INTERFACE_AGGREGATION_TYPE_NON_OPERATIONAL_AGGREGATED_INTERFACE_NAI = 0x0, //FIXME: name too long.
    PHY_CAP_1_CONTROL_INTERFACE_AGGREGATION_TYPE_N_ON_AGGREGATED_INTERFACE_I_E_AN_INDEPENDENT_INTERFACE = 0x1, //FIXME: name too long.
    PHY_CAP_1_CONTROL_INTERFACE_AGGREGATION_TYPE_SINGLE_AGGREGATED_INTERFACE_SAI_COMPOSED_OF_2_INTERFACES = 0x2, //FIXME: name too long.
    PHY_CAP_1_CONTROL_INTERFACE_AGGREGATION_TYPE_SAI_COMPOSED_OF_4_INTERFACES = 0x3, //FIXME: name too long.
    PHY_CAP_1_CONTROL_INTERFACE_AGGREGATION_TYPE_SAI_COMPOSED_OF_8_INTERFACES = 0x4, //FIXME: name too long.
    PHY_CAP_1_CONTROL_INTERFACE_AGGREGATION_TYPE_SAI_COMPOSED_OF_16_INTERFACES = 0x5, //FIXME: name too long.
    PHY_CAP_1_CONTROL_INTERFACE_AGGREGATION_TYPE_SAI_COMPOSED_OF_32_INTERFACES = 0x6, //FIXME: name too long.
    PHY_CAP_1_CONTROL_INTERFACE_AGGREGATION_TYPE_SAI_COMPOSED_OF_64_INTERFACES = 0x7, //FIXME: name too long.
    PHY_CAP_1_CONTROL_INTERFACE_AGGREGATION_TYPE_SAI_COMPOSED_OF_128_INTERFACES = 0x8, //FIXME: name too long.
    PHY_CAP_1_CONTROL_INTERFACE_AGGREGATION_TYPE_SAI_COMPOSED_OF_256_INTERFACES = 0x9, //FIXME: name too long.
};

enum phy_lane_status_phy_tx_link_width_reduced {
    PHY_LANE_STATUS_PHY_TX_LINK_WIDTH_REDUCED_NOMINAL_TX_LINK_WIDTH = 0x0, //FIXME: name too long.
    PHY_LANE_STATUS_PHY_TX_LINK_WIDTH_REDUCED_REDUCED_TX_LINK_WIDTH = 0x1, //FIXME: name too long.
};

enum phy_lane_status_phy_rx_link_width_reduced {
    PHY_LANE_STATUS_PHY_RX_LINK_WIDTH_REDUCED_NOMINAL_RX_LINK_WIDTH = 0x0, //FIXME: name too long.
    PHY_LANE_STATUS_PHY_RX_LINK_WIDTH_REDUCED_REDUCED_RX_LINK_WIDTH = 0x1, //FIXME: name too long.
};

enum phy_lane_status_asymmetric_lane_status {
    PHY_LANE_STATUS_ASYMMETRIC_LANE_STATUS_SYMMETRIC = 0x0,
    PHY_LANE_STATUS_ASYMMETRIC_LANE_STATUS_ASYMMETRIC = 0x1
};

enum phy_lane_control_enable_lane_asymmetry {
    PHY_LANE_CONTROL_ENABLE_LANE_ASYMMETRY_SYMMETRIC_ENABLED_FIXED_NUMBER_OF_TRANSMIT_AND_RECEIVES_LANES = 0x0, //FIXME: name too long.
    PHY_LANE_CONTROL_ENABLE_LANE_ASYMMETRY_STATIC_ASYMMETRIC_ENABLED_REQUIRES_PHYSICAL_LAYER_RE_INITIALIZATION = 0x1, //FIXME: name too long.
    PHY_LANE_CONTROL_ENABLE_LANE_ASYMMETRY_DYNAMIC_ASYMMETRIC_ENABLED_PHYSICAL_LAYER_AUTOMATICALLY_REDUCE_S_THE_NUMBER_OF_TRANSMIT_OR_RECEIVE_LANES_BASED_ON_THE_SYSTEM_CONNECTIVITY_OR_LANE_FAULTS = 0x2, //FIXME: name too long.
};

enum phy_lane_control_enable_t_x_reversal_if_the_interface_does_not_support_lane_reversal_then_this_field_shall_be_hardwired_to_0x0 {
    PHY_LANE_CONTROL_ENABLE_T_X_REVERSAL_IF_THE_INTERFACE_DOES_NOT_SUPPORT_LANE_REVERSAL_THEN_THIS_FIELD_SHALL_BE_HARDWIRED_TO_0X0_T_X_REVERSAL_DISABLED = 0x0, //FIXME: name too long.
    PHY_LANE_CONTROL_ENABLE_T_X_REVERSAL_IF_THE_INTERFACE_DOES_NOT_SUPPORT_LANE_REVERSAL_THEN_THIS_FIELD_SHALL_BE_HARDWIRED_TO_0X0_DYNAMIC_T_X_REVERSAL_ENABLED = 0x1, //FIXME: name too long.
    PHY_LANE_CONTROL_ENABLE_T_X_REVERSAL_IF_THE_INTERFACE_DOES_NOT_SUPPORT_LANE_REVERSAL_THEN_THIS_FIELD_SHALL_BE_HARDWIRED_TO_0X0_STATIC_T_X_REVERSAL_ENABLED = 0x2, //FIXME: name too long.
};

enum phy_lane_control_enable_r_x_reversal_if_the_interface_does_not_support_lane_reversal_then_this_field_shall_be_hardwired_to_0x0 {
    PHY_LANE_CONTROL_ENABLE_R_X_REVERSAL_IF_THE_INTERFACE_DOES_NOT_SUPPORT_LANE_REVERSAL_THEN_THIS_FIELD_SHALL_BE_HARDWIRED_TO_0X0_R_X_REVERSAL_DISABLED = 0x0, //FIXME: name too long.
    PHY_LANE_CONTROL_ENABLE_R_X_REVERSAL_IF_THE_INTERFACE_DOES_NOT_SUPPORT_LANE_REVERSAL_THEN_THIS_FIELD_SHALL_BE_HARDWIRED_TO_0X0_DYNAMIC_R_X_REVERSAL_ENABLED = 0x1, //FIXME: name too long.
    PHY_LANE_CONTROL_ENABLE_R_X_REVERSAL_IF_THE_INTERFACE_DOES_NOT_SUPPORT_LANE_REVERSAL_THEN_THIS_FIELD_SHALL_BE_HARDWIRED_TO_0X0_STATIC_R_X_REVERSAL_ENABLED = 0x2, //FIXME: name too long.
};

enum phy_lane_cap_asymmetric_lane_support {
    PHY_LANE_CAP_ASYMMETRIC_LANE_SUPPORT_SYMMETRIC_FIXED_NUMBER_OF_TRANSMIT_AND_RECEIVES_LANES = 0x0, //FIXME: name too long.
    PHY_LANE_CAP_ASYMMETRIC_LANE_SUPPORT_STATIC_ASYMMETRIC_REQUIRES_PHYSICAL_LAYER_RE_INITIALIZATION = 0x1, //FIXME: name too long.
    PHY_LANE_CAP_ASYMMETRIC_LANE_SUPPORT_DYNAMIC_ASYMMETRIC_PHYSICAL_LAYER_AUTOMATICALLY_REDUCES_THE_NUMBER_OF_TRANSMIT_AND_RECEIVE_LANES_BASED_ON_SYSTEM_CONNECTIVITY_OR_LANE_FAULTS = 0x2, //FIXME: name too long.
    PHY_LANE_CAP_ASYMMETRIC_LANE_SUPPORT_STATIC_AND_DYNAMIC_ASYMMETRIC = 0x3, //FIXME: name too long.
};

enum phy_lane_cap_reversal_support {
    PHY_LANE_CAP_REVERSAL_SUPPORT_REVERSAL_NOT_SUPPORTED = 0x0, //FIXME: name too long.
    PHY_LANE_CAP_REVERSAL_SUPPORT_STATIC_UNIFORM_REVERSAL_SUPPORTED_BOTH_TRAN_SMIT_AND_RECEIVE_DIRECTIONS_SHALL_BE_REVERSED = 0x1, //FIXME: name too long.
    PHY_LANE_CAP_REVERSAL_SUPPORT_STATIC_NON_UNIFORM_REVERSAL_SUPPORTED_EITHER_TR_ANSMIT_OR_RECEIVE_DIRECTIONS_MAY_BE_REVERSED = 0x3, //FIXME: name too long.
    PHY_LANE_CAP_REVERSAL_SUPPORT_DYNAMIC_AND_STATIC_NON_UNIFORM_REVERSAL_SUPPORTED_EITHER_TR_ANSMIT_OR_RECEIVE_DIRECTIONS_MAY_BE_REVERSED = 0x4, //FIXME: name too long.
    PHY_LANE_CAP_REVERSAL_SUPPORT_STATIC_AND_DYNAMIC_ASYMMETRIC, //FIXME: name too long.
};

enum phy_remote_lane_cap_remote_asymmetric_lane_support {
    PHY_REMOTE_LANE_CAP_REMOTE_ASYMMETRIC_LANE_SUPPORT_SYMMETRIC_FIXED_NUMBER_OF_TRANSMIT_AND_RECEIVES_LANES = 0x0, //FIXME: name too long.
    PHY_REMOTE_LANE_CAP_REMOTE_ASYMMETRIC_LANE_SUPPORT_STATIC_ASYMMETRIC_REQUIRES_PHYSICAL_LAYER_RE_INITIALIZATION = 0x1, //FIXME: name too long.
    PHY_REMOTE_LANE_CAP_REMOTE_ASYMMETRIC_LANE_SUPPORT_DYNAMIC_ASYMMETRIC_PHYSICAL_LAYER_AUTOMATICALLY_REDUCES_THE_NUMBER_OF_TRANSMIT_AND_RECEIVE_LANES_BASED_ON_SYSTEM_CONNECTIVITY_OR_LANE_FAULTS = 0x2, //FIXME: name too long.
    PHY_REMOTE_LANE_CAP_REMOTE_ASYMMETRIC_LANE_SUPPORT_STATIC_AND_DYNAMIC_ASYMMETRIC = 0x3, //FIXME: name too long.
};

enum phy_remote_lane_cap_remote_reversal_support {
    PHY_REMOTE_LANE_CAP_REMOTE_REVERSAL_SUPPORT_REVERSAL_NOT_SUPPORTED = 0x0, //FIXME: name too long.
    PHY_REMOTE_LANE_CAP_REMOTE_REVERSAL_SUPPORT_STATIC_UNIFORM_REVERSAL_SUPPORTED_BOTH_TRAN_SMIT_AND_RECEIVE_DIRECTIONS_SHALL_BE_REVERSED = 0x1, //FIXME: name too long.
    PHY_REMOTE_LANE_CAP_REMOTE_REVERSAL_SUPPORT_STATIC_NON_UNIFORM_REVERSAL_SUPPORTED_EITHER_TR_ANSMIT_OR_RECEIVE_DIRECTIONS_MAY_BE_REVERSED = 0x3, //FIXME: name too long.
    PHY_REMOTE_LANE_CAP_REMOTE_REVERSAL_SUPPORT_DYNAMIC_AND_DYNAMIC_NON_UNIFORM_REVERSAL_SUPPORTED_EITHER_TR_ANSMIT_OR_RECEIVE_DIRECTIONS_MAY_BE_REVERSED = 0x4, //FIXME: name too long.
    PHY_REMOTE_LANE_CAP_REMOTE_REVERSAL_SUPPORT_STATIC_AND_DYNAMIC_ASYMMETRIC, //FIXME: name too long.
};

enum i_stat_cap_1_provisioned_statistics_fields {
    I_STAT_CAP_1_PROVISIONED_STATISTICS_FIELDS_COMMON_INTERFACE_FIELDS = 0x0, //FIXME: name too long.
    I_STAT_CAP_1_PROVISIONED_STATISTICS_FIELDS_COMMON_AND_REQUESTER_AND_RESPONDER_INTERFACE_STATISTICS_FIELDS = 0x1, //FIXME: name too long.
    I_STAT_CAP_1_PROVISIONED_STATISTICS_FIELDS_COMMON_AND_PACKET_RELAY_INTERFACE_STATISTICS_FIELDS = 0x2, //FIXME: name too long.
    I_STAT_CAP_1_PROVISIONED_STATISTICS_FIELDS_COMMON_REQUESTER_AND_RESPONDER_INTERFACE_STATISTICS_FIELDS_FOLLOWED_BY_PACKET_RELAY_INTERFACE_STATISTICS_FIELDS = 0x3, //FIXME: name too long.
};

enum i_stat_cap_1_maximum_snapshot_time {
    I_STAT_CAP_1_MAXIMUM_SNAPSHOT_TIME_MS_1 = 0x0,
    I_STAT_CAP_1_MAXIMUM_SNAPSHOT_TIME_MS_10 = 0x1,
    I_STAT_CAP_1_MAXIMUM_SNAPSHOT_TIME_MS_100 = 0x2,
    I_STAT_CAP_1_MAXIMUM_SNAPSHOT_TIME_SECOND_1 = 0x3
};

enum i_stat_status_interface_statistics_reset_status {
    I_STAT_STATUS_INTERFACE_STATISTICS_RESET_STATUS_NO_RESET_EVENT = 0x0, //FIXME: name too long.
    I_STAT_STATUS_INTERFACE_STATISTICS_RESET_STATUS_RESET_EVENT = 0x1, //FIXME: name too long.
};

enum i_stat_status_snapshot_status {
    I_STAT_STATUS_SNAPSHOT_STATUS_INCOMPLETE = 0x0,
    I_STAT_STATUS_SNAPSHOT_STATUS_COMPLETED = 0x1
};

enum e_control_error_enablement {
    E_CONTROL_ERROR_ENABLEMENT_DISABLE_ALL_ERROR_DETECTION_AND_HANDLING = 0x0, //FIXME: name too long.
    E_CONTROL_ERROR_ENABLEMENT_ENABLE_COMPONENT_LEVEL_ERROR_DETECTION_AND_HANDLING = 0x1, //FIXME: name too long.
    E_CONTROL_ERROR_ENABLEMENT_ENABLE_COMPONENT_AND_INTERFACE_LEVEL_ERROR_DETECTION_AND_HANDLING = 0x2, //FIXME: name too long.
};

enum e_control_error_logging_level {
    E_CONTROL_ERROR_LOGGING_LEVEL_LOG_ONLY_CRITICAL_ERRORS = 0x0, //FIXME: name too long.
    E_CONTROL_ERROR_LOGGING_LEVEL_LOG_CRITICAL_AND_CAUTION_ERRORS = 0x1, //FIXME: name too long.
    E_CONTROL_ERROR_LOGGING_LEVEL_LOG_CRITICAL_CAUTION_AND_NON_CRITICAL_ERRORS = 0x2, //FIXME: name too long.
};

enum e_control_error_uep_target {
    E_CONTROL_ERROR_UEP_TARGET_TARGET_PRIMARY_MANAGER_AS_INDICATED_IN_THE_CORE_STRUCTURE = 0x0, //FIXME: name too long.
    E_CONTROL_ERROR_UEP_TARGET_TARGET_CORE_STRUCTURE_PRIMARY_OR_SECONDARY_FABRIC_MANAGER = 0x1, //FIXME: name too long.
    E_CONTROL_ERROR_UEP_TARGET_TARGET_MANAGER_ERROR_MGR_CID_VALID_ERROR_MGR_SID_INVALID = 0x2, //FIXME: name too long.
    E_CONTROL_ERROR_UEP_TARGET_TARGET_MANAGER_ERROR_MGR_CID_VALID_ERROR_MGR_SID_VALID = 0x3, //FIXME: name too long.
};

enum e_control_event_uep_target {
    E_CONTROL_EVENT_UEP_TARGET_TARGET_PRIMARY_MANAGER_AS_INDICATED_IN_THE_CORE_STRUCTURE = 0x0, //FIXME: name too long.
    E_CONTROL_EVENT_UEP_TARGET_TARGET_CORE_STRUCTURE_PRIMARY_OR_SECONDARY_FABRIC_MANAGER = 0x1, //FIXME: name too long.
    E_CONTROL_EVENT_UEP_TARGET_TARGET_MANAGER_EVENT_MGR_CID_VALID_EVENT_MGR_SID_INVALID = 0x2, //FIXME: name too long.
    E_CONTROL_EVENT_UEP_TARGET_TARGET_MANAGER_EVENT_MGR_CID_VALID_EVENT_MGR_SID_VALID = 0x3, //FIXME: name too long.
};

enum e_control_mech_uep_target {
    E_CONTROL_MECH_UEP_TARGET_TARGET_PRIMARY_MANAGER_AS_INDICATED_IN_THE_CORE_STRUCTURE = 0x0, //FIXME: name too long.
    E_CONTROL_MECH_UEP_TARGET_TARGET_CORE_STRUCTURE_PRIMARY_OR_SECONDARY_FABRIC_MANAGER = 0x1, //FIXME: name too long.
    E_CONTROL_MECH_UEP_TARGET_TARGET_MANAGER_MECH_MGR_CID_VALID_MECH_MGR_SID_INVALID = 0x2, //FIXME: name too long.
    E_CONTROL_MECH_UEP_TARGET_TARGET_MANAGER_MECH_MGR_CID_VALID_MECH_MGR_SID_VALID = 0x3, //FIXME: name too long.
};

enum e_control_media_uep_target {
    E_CONTROL_MEDIA_UEP_TARGET_TARGET_PRIMARY_MANAGER_AS_INDICATED_IN_THE_CORE_STRUCTURE = 0x0, //FIXME: name too long.
    E_CONTROL_MEDIA_UEP_TARGET_TARGET_CORE_STRUCTURE_PRIMARY_OR_SECONDARY_FABRIC_MANAGER = 0x1, //FIXME: name too long.
    E_CONTROL_MEDIA_UEP_TARGET_TARGET_MANAGER_MEDIA_MGR_CID_VALID_MEDIA_MGR_SID_INVALID = 0x2, //FIXME: name too long.
    E_CONTROL_MEDIA_UEP_TARGET_TARGET_MANAGER_MEDIA_MGR_CID_VALID_MEDIA_MGR_SID_VALID = 0x3, //FIXME: name too long.
};

enum component_media_control_primary_media_maintenance_disable {
    COMPONENT_MEDIA_CONTROL_PRIMARY_MEDIA_MAINTENANCE_DISABLE_ENABLED = 0x0, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_PRIMARY_MEDIA_MAINTENANCE_DISABLE_DISABLED = 0x1, //FIXME: name too long.
};

enum component_media_control_secondary_media_maintenance_disable {
    COMPONENT_MEDIA_CONTROL_SECONDARY_MEDIA_MAINTENANCE_DISABLE_ENABLED = 0x0, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_SECONDARY_MEDIA_MAINTENANCE_DISABLE_DISABLED = 0x1, //FIXME: name too long.
};

enum component_media_control_primary_se_initialization {
    COMPONENT_MEDIA_CONTROL_PRIMARY_SE_INITIALIZATION_RESERVED_SHALL_NOT_BE_USED = 0x0, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_PRIMARY_SE_INITIALIZATION_SE_FAST_ZERO_MEDIA = 0x1, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_PRIMARY_SE_INITIALIZATION_SE_FAST_ZERO_MEDIA_RANGE = 0x2, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_PRIMARY_SE_INITIALIZATION_SE_ZERO_MEDIA = 0x3, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_PRIMARY_SE_INITIALIZATION_SE_CRYPTOGRAPHIC_KEY = 0x4, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_PRIMARY_SE_INITIALIZATION_SE_OVERWRITE_MEDIA_NO_INVERSION = 0x5, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_PRIMARY_SE_INITIALIZATION_SE_OVERWRITE_MEDIA_ALTERNATING_INVERSION = 0x6, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_PRIMARY_SE_INITIALIZATION_SE_VENDOR_DEFINED = 0x7, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_PRIMARY_SE_INITIALIZATION_SE_VENDOR_DEFINED_RANGE = 0x8, //FIXME: name too long.
};

enum component_media_control_secondary_se_initialization {
    COMPONENT_MEDIA_CONTROL_SECONDARY_SE_INITIALIZATION_RESERVED_SHALL_NOT_BE_USED = 0x0, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_SECONDARY_SE_INITIALIZATION_SE_FAST_ZERO_MEDIA = 0x1, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_SECONDARY_SE_INITIALIZATION_SE_FAST_ZERO_MEDIA_RANGE = 0x2, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_SECONDARY_SE_INITIALIZATION_SE_ZERO_MEDIA = 0x3, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_SECONDARY_SE_INITIALIZATION_SE_CRYPTOGRAPHIC_KEY = 0x4, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_SECONDARY_SE_INITIALIZATION_SE_OVERWRITE_MEDIA_NO_INVERSION = 0x5, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_SECONDARY_SE_INITIALIZATION_SE_OVERWRITE_MEDIA_ALTERNATING_INVERSION = 0x6, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_SECONDARY_SE_INITIALIZATION_SE_VENDOR_DEFINED = 0x7, //FIXME: name too long.
    COMPONENT_MEDIA_CONTROL_SECONDARY_SE_INITIALIZATION_SE_VENDOR_DEFINED_RANGE = 0x8, //FIXME: name too long.
};

enum primary_media_cap_1_63_0_primary_latency_scale_seconds {
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_LATENCY_SCALE_SECONDS_3_10 = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_LATENCY_SCALE_SECONDS_4_10 = 0x1, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_LATENCY_SCALE_SECONDS_5_10 = 0x2, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_LATENCY_SCALE_SECONDS_6_10 = 0x3, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_LATENCY_SCALE_SECONDS_7_10 = 0x4, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_LATENCY_SCALE_SECONDS_8_10 = 0x5, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_LATENCY_SCALE_SECONDS_9_10 = 0x6, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_LATENCY_SCALE_SECONDS_10_10 = 0x7, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_LATENCY_SCALE_SECONDS_11_10 = 0x8, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_LATENCY_SCALE_SECONDS_12_10 = 0x9, //FIXME: name too long.
};

enum primary_media_cap_1_63_0_primary_endurance_scale {
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_5_10 = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_6_10 = 0x1, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_7_10 = 0x2, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_8_10 = 0x3, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_9_10 = 0x4, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_10_10 = 0x5, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_11_10 = 0x6, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_12_10 = 0x7, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_13_10 = 0x8, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_14_10 = 0x9, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_15_10 = 0xA, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_16_10 = 0xB, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_17_10 = 0xC, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_18_10 = 0xD, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ENDURANCE_SCALE_RESERVE_D, //FIXME: name too long.
};

enum primary_media_cap_1_63_0_primary_media_power_scale_mpwrs {
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_MEDIA_POWER_SCALE_MPWRS_1_0 = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_MEDIA_POWER_SCALE_MPWRS_0_1 = 0x1, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_MEDIA_POWER_SCALE_MPWRS_0_01 = 0x2, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_MEDIA_POWER_SCALE_MPWRS_0_001 = 0x3, //FIXME: name too long.
};

enum primary_media_cap_1_63_0_primary_error_detection_range {
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ERROR_DETECTION_RANGE_UNSUPPORTED_0 = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ERROR_DETECTION_RANGE_8 = 0x1, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ERROR_DETECTION_RANGE_16 = 0x2, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ERROR_DETECTION_RANGE_32 = 0x3, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ERROR_DETECTION_RANGE_64 = 0x4, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ERROR_DETECTION_RANGE_128 = 0x5, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ERROR_DETECTION_RANGE_256 = 0x6, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ERROR_DETECTION_RANGE_512 = 0x7, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ERROR_DETECTION_RANGE_1024 = 0x8, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ERROR_DETECTION_RANGE_2048 = 0x9, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ERROR_DETECTION_RANGE_4096 = 0xA, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_ERROR_DETECTION_RANGE_8192 = 0xB, //FIXME: name too long.
};

enum primary_media_cap_1_63_0_primary_correctable_error_threshold {
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_CORRECTABLE_ERROR_THRESHOLD_10_2 = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_CORRECTABLE_ERROR_THRESHOLD_11_2 = 0x1, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_CORRECTABLE_ERROR_THRESHOLD_12_2 = 0x2, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_CORRECTABLE_ERROR_THRESHOLD_13_2 = 0x3, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_CORRECTABLE_ERROR_THRESHOLD_14_2 = 0x4, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_CORRECTABLE_ERROR_THRESHOLD_15_2 = 0x5, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_CORRECTABLE_ERROR_THRESHOLD_16_2 = 0x6, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_CORRECTABLE_ERROR_THRESHOLD_17_2 = 0x7, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_CORRECTABLE_ERROR_THRESHOLD_18_2 = 0x8, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_CORRECTABLE_ERROR_THRESHOLD_19_2 = 0x9, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_CORRECTABLE_ERROR_THRESHOLD_20_2 = 0xA, //FIXME: name too long.
};

enum primary_media_cap_1_63_0_primary_uncorrectable_error_threshold {
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_UNCORRECTABLE_ERROR_THRESHOLD_3_2 = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_UNCORRECTABLE_ERROR_THRESHOLD_4_2 = 0x1, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_UNCORRECTABLE_ERROR_THRESHOLD_5_2 = 0x2, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_UNCORRECTABLE_ERROR_THRESHOLD_6_2 = 0x3, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_UNCORRECTABLE_ERROR_THRESHOLD_7_2 = 0x4, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_UNCORRECTABLE_ERROR_THRESHOLD_8_2 = 0x5, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_UNCORRECTABLE_ERROR_THRESHOLD_9_2 = 0x6, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_UNCORRECTABLE_ERROR_THRESHOLD_10_2 = 0x7, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_UNCORRECTABLE_ERROR_THRESHOLD_11_2 = 0x8, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_UNCORRECTABLE_ERROR_THRESHOLD_12_2 = 0x9, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_UNCORRECTABLE_ERROR_THRESHOLD_13_2 = 0xA, //FIXME: name too long.
};

enum primary_media_cap_1_63_0_primary_byte_block_addressing {
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_BYTE_BLOCK_ADDRESSING_BYTE = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_63_0_PRIMARY_BYTE_BLOCK_ADDRESSING_BLOCK = 0x1, //FIXME: name too long.
};

enum primary_media_cap_1_127_64_primary_row_remapping_size {
    PRIMARY_MEDIA_CAP_1_127_64_PRIMARY_ROW_REMAPPING_SIZE_UNSUPPORTED_CAPABILITY = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_127_64_PRIMARY_ROW_REMAPPING_SIZE_ROW_1 = 0x1, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_127_64_PRIMARY_ROW_REMAPPING_SIZE_ROWS_2 = 0x2, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_127_64_PRIMARY_ROW_REMAPPING_SIZE_ROWS_4 = 0x3, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_127_64_PRIMARY_ROW_REMAPPING_SIZE_ROWS_8 = 0x4, //FIXME: name too long.
};

enum primary_media_cap_1_127_64_primary_media_volatility {
    PRIMARY_MEDIA_CAP_1_127_64_PRIMARY_MEDIA_VOLATILITY_VOLATILE_MEDIA = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_127_64_PRIMARY_MEDIA_VOLATILITY_NON_VOLATILE_MEDIA_USE_WRITE_PERSISTENT = 0x1, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_127_64_PRIMARY_MEDIA_VOLATILITY_NON_VOLATILE_MEDIA_USE_PERSISTENT_FLUSH = 0x2, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_127_64_PRIMARY_MEDIA_VOLATILITY_NON_VOLATILE_MEDIA_NO_ACTION_REQUIRED_TO_ENSURE_PERSISTENCY = 0x3, //FIXME: name too long.
};

enum secondary_media_cap_1_63_0_secondary_media_latency_scale_seconds {
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_MEDIA_LATENCY_SCALE_SECONDS_3_10 = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_MEDIA_LATENCY_SCALE_SECONDS_4_10 = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_MEDIA_LATENCY_SCALE_SECONDS_5_10 = 0x2, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_MEDIA_LATENCY_SCALE_SECONDS_6_10 = 0x3, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_MEDIA_LATENCY_SCALE_SECONDS_7_10 = 0x4, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_MEDIA_LATENCY_SCALE_SECONDS_8_10 = 0x5, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_MEDIA_LATENCY_SCALE_SECONDS_9_10 = 0x6, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_MEDIA_LATENCY_SCALE_SECONDS_10_10 = 0x7, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_MEDIA_LATENCY_SCALE_SECONDS_11_10 = 0x8, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_MEDIA_LATENCY_SCALE_SECONDS_12_10 = 0x9, //FIXME: name too long.
};

enum secondary_media_cap_1_63_0_secondary_endurance_scale {
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ENDURANCE_SCALE_5_10 = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ENDURANCE_SCALE_6_10 = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ENDURANCE_SCALE_7_10 = 0x2, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ENDURANCE_SCALE_8_10 = 0x3, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ENDURANCE_SCALE_9_10 = 0x4, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ENDURANCE_SCALE_10_10 = 0x5, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ENDURANCE_SCALE_11_10 = 0x6, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ENDURANCE_SCALE_12_10 = 0x7, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ENDURANCE_SCALE_13_10 = 0x8, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ENDURANCE_SCALE_14_10 = 0x9, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ENDURANCE_SCALE_15_10 = 0xA, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ENDURANCE_SCALE_16_10 = 0xB, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ENDURANCE_SCALE_17_10 = 0xC, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ENDURANCE_SCALE_18_10 = 0xD, //FIXME: name too long.
};

enum secondary_media_cap_1_63_0_secondary_media_power_scale_mpwrs {
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_MEDIA_POWER_SCALE_MPWRS_1_0 = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_MEDIA_POWER_SCALE_MPWRS_0_1 = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_MEDIA_POWER_SCALE_MPWRS_0_01 = 0x2, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_MEDIA_POWER_SCALE_MPWRS_0_001 = 0x3, //FIXME: name too long.
};

enum secondary_media_cap_1_63_0_secondary_error_detection_range {
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ERROR_DETECTION_RANGE_UNSUPPORTED_0 = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ERROR_DETECTION_RANGE_8 = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ERROR_DETECTION_RANGE_16 = 0x2, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ERROR_DETECTION_RANGE_32 = 0x3, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ERROR_DETECTION_RANGE_64 = 0x4, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ERROR_DETECTION_RANGE_128 = 0x5, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ERROR_DETECTION_RANGE_256 = 0x6, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ERROR_DETECTION_RANGE_512 = 0x7, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ERROR_DETECTION_RANGE_1024 = 0x8, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ERROR_DETECTION_RANGE_2048 = 0x9, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ERROR_DETECTION_RANGE_4096 = 0xA, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_ERROR_DETECTION_RANGE_8192 = 0xB, //FIXME: name too long.
};

enum secondary_media_cap_1_63_0_secondary_correctable_error_threshold {
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_CORRECTABLE_ERROR_THRESHOLD_10_2 = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_CORRECTABLE_ERROR_THRESHOLD_11_2 = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_CORRECTABLE_ERROR_THRESHOLD_12_2 = 0x2, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_CORRECTABLE_ERROR_THRESHOLD_13_2 = 0x3, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_CORRECTABLE_ERROR_THRESHOLD_14_2 = 0x4, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_CORRECTABLE_ERROR_THRESHOLD_15_2 = 0x5, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_CORRECTABLE_ERROR_THRESHOLD_16_2 = 0x6, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_CORRECTABLE_ERROR_THRESHOLD_17_2 = 0x7, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_CORRECTABLE_ERROR_THRESHOLD_18_2 = 0x8, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_CORRECTABLE_ERROR_THRESHOLD_19_2 = 0x9, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_CORRECTABLE_ERROR_THRESHOLD_20_2 = 0xA, //FIXME: name too long.
};

enum secondary_media_cap_1_63_0_secondary_uncorrectable_error_threshold {
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_UNCORRECTABLE_ERROR_THRESHOLD_3_2 = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_UNCORRECTABLE_ERROR_THRESHOLD_4_2 = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_UNCORRECTABLE_ERROR_THRESHOLD_5_2 = 0x2, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_UNCORRECTABLE_ERROR_THRESHOLD_6_2 = 0x3, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_UNCORRECTABLE_ERROR_THRESHOLD_7_2 = 0x4, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_UNCORRECTABLE_ERROR_THRESHOLD_8_2 = 0x5, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_UNCORRECTABLE_ERROR_THRESHOLD_9_2 = 0x6, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_UNCORRECTABLE_ERROR_THRESHOLD_10_2 = 0x7, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_UNCORRECTABLE_ERROR_THRESHOLD_11_2 = 0x8, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_UNCORRECTABLE_ERROR_THRESHOLD_12_2 = 0x9, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_63_0_SECONDARY_UNCORRECTABLE_ERROR_THRESHOLD_13_2 = 0xA, //FIXME: name too long.
};

enum secondary_media_cap_1_127_64_secondary_media_addressability {
    SECONDARY_MEDIA_CAP_1_127_64_SECONDARY_MEDIA_ADDRESSABILITY_NOT_ADDRESSABLE = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_127_64_SECONDARY_MEDIA_ADDRESSABILITY_BYTE = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_127_64_SECONDARY_MEDIA_ADDRESSABILITY_BLOCK = 0x2, //FIXME: name too long.
};

enum secondary_media_cap_1_127_64_secondary_row_remapping_size {
    SECONDARY_MEDIA_CAP_1_127_64_SECONDARY_ROW_REMAPPING_SIZE_ROWS_UNSUPPORTED_0 = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_127_64_SECONDARY_ROW_REMAPPING_SIZE_ROW_1 = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_127_64_SECONDARY_ROW_REMAPPING_SIZE_ROWS_2 = 0x2, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_127_64_SECONDARY_ROW_REMAPPING_SIZE_ROWS_4 = 0x3, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_127_64_SECONDARY_ROW_REMAPPING_SIZE_ROWS_8 = 0x4, //FIXME: name too long.
};

enum secondary_media_cap_1_127_64_secondary_media_volatility {
    SECONDARY_MEDIA_CAP_1_127_64_SECONDARY_MEDIA_VOLATILITY_VOLATILE_MEDIA = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_127_64_SECONDARY_MEDIA_VOLATILITY_NON_VOLATILE_MEDIA_USE_WRITE_PERSISTENT = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_127_64_SECONDARY_MEDIA_VOLATILITY_NON_VOLATILE_MEDIA_USE_PERSISTENT_FLUSH = 0x2, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_127_64_SECONDARY_MEDIA_VOLATILITY_NON_VOLATILE_MEDIA_NO_ACTION_REQUIRED_TO_ENSURE_PERSISTENCY = 0x3, //FIXME: name too long.
};

enum secondary_media_cap_1_127_64_secondary_media_location {
    SECONDARY_MEDIA_CAP_1_127_64_SECONDARY_MEDIA_LOCATION_CO_LOCATED = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_127_64_SECONDARY_MEDIA_LOCATION_DISCRETE = 0x1, //FIXME: name too long.
};

enum primary_media_cap_1_control_primary_patrol_scrubbing_frequency {
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_PATROL_SCRUBBING_FREQUENCY_HOURS_48 = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_PATROL_SCRUBBING_FREQUENCY_HOURS_36 = 0x1, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_PATROL_SCRUBBING_FREQUENCY_HOURS_24 = 0x2, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_PATROL_SCRUBBING_FREQUENCY_HOURS_12 = 0x3, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_PATROL_SCRUBBING_FREQUENCY_HOURS_8 = 0x4, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_PATROL_SCRUBBING_FREQUENCY_HOURS_4 = 0x5, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_PATROL_SCRUBBING_FREQUENCY_HOURS_2 = 0x6, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_PATROL_SCRUBBING_FREQUENCY_HOUR_1 = 0x7, //FIXME: name too long.
};

enum primary_media_cap_1_control_primary_error_and_event_notification {
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_ERROR_AND_EVENT_NOTIFICATION_RETURN_ERROR_REASONS_IN_RESPONSE_PACKETS = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_ERROR_AND_EVENT_NOTIFICATION_DO_NOT_RETURN_ERROR_REASONS_IN_RESPONSE_PACKETS_INDEPENDENTLY_INFORM_MANAGEMENT_OF_ALL_ERRORS_AND_EVENTS = 0x1, //FIXME: name too long.
};

enum primary_media_cap_1_control_primary_management_event_notification {
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_MANAGEMENT_EVENT_NOTIFICATION_DO_NOT_NOTIFY_MANAGEMENT = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_MANAGEMENT_EVENT_NOTIFICATION_NOTIFY_MANAGEMENT_OF_NEW_CRITICAL_EVENTS = 0x1, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_MANAGEMENT_EVENT_NOTIFICATION_NOTIFY_MANAGEMENT_OF_NEW_CRITICAL_AND_CAUTION_EVENTS = 0x2, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_MANAGEMENT_EVENT_NOTIFICATION_NOTIFY_MANAGEMENT_OF_NEW_CRITICAL_CAUTION_AND_N_ON_CRITICAL_EVENTS = 0x3, //FIXME: name too long.
};

enum primary_media_cap_1_control_primary_management_event_notification_method {
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_NO_SIGNAL_IS_GENERATED = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_COMPONENT_LOCAL_INTERRUPT_0 = 0x1, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_COMPONENT_LOCAL_INTERRUPT_1 = 0x2, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_COMPONENT_LOCAL_INTERRUPTS_0_AND_1 = 0x3, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_UNSOLICITED_EVENT_UE_PACKET = 0x4, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_COMPONENT_LOCAL_INTERRUPT_0_AND_AN_UNSOLICITED_EVENT_UE_PACKET = 0x5, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_COMPONENT_LOCAL_INTERRUPT_1_AND_AN_UNSOLICITED_EVENT_UE_PACKET = 0x6, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_COMPONENT_LOCAL_INTERRUPTS_0_AND_1_AND_AN_UNSOLICITED_EVENT_UE_PACKET = 0x7, //FIXME: name too long.
};

enum primary_media_cap_1_control_primary_event_logging_level {
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_EVENT_LOGGING_LEVEL_DO_NOT_LOG_EVENTS = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_EVENT_LOGGING_LEVEL_LOG_ONLY_CRITICAL_E_VENTS = 0x1, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_EVENT_LOGGING_LEVEL_LOG_CRITICAL_AND_CAUTION_E_VENTS = 0x2, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_EVENT_LOGGING_LEVEL_LOG_CRITICAL_CAUTION_AND_INFORM_EVENTS = 0x3, //FIXME: name too long.
};

enum primary_media_cap_1_control_initiate_primary_sanitize_and_erase {
    PRIMARY_MEDIA_CAP_1_CONTROL_INITIATE_PRIMARY_SANITIZE_AND_ERASE_RESERVED_SHALL_NOT_BE_USED = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_INITIATE_PRIMARY_SANITIZE_AND_ERASE_SE_FAST_ZERO_MEDIA = 0x1, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_INITIATE_PRIMARY_SANITIZE_AND_ERASE_SE_FAST_ZERO_MEDIA_RANGE = 0x2, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_INITIATE_PRIMARY_SANITIZE_AND_ERASE_SE_ZERO_MEDIA = 0x3, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_INITIATE_PRIMARY_SANITIZE_AND_ERASE_SE_CRYPTOGRAPHIC_KEY = 0x4, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_INITIATE_PRIMARY_SANITIZE_AND_ERASE_SE_OVERWRITE_MEDIA_NO_INVERSION = 0x5, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_INITIATE_PRIMARY_SANITIZE_AND_ERASE_SE_OVERWRITE_MEDIA_ALTERNATING_INVERSION = 0x6, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_INITIATE_PRIMARY_SANITIZE_AND_ERASE_SE_VENDOR_DEFINED = 0x7, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_INITIATE_PRIMARY_SANITIZE_AND_ERASE_SE_VENDOR_DEFINED_RANGE = 0x8, //FIXME: name too long.
};

enum primary_media_cap_1_control_primary_se_overwrite_media_count {
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_SE_OVERWRITE_MEDIA_COUNT_1 = 0x0, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_SE_OVERWRITE_MEDIA_COUNT_8 = 0x1, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_SE_OVERWRITE_MEDIA_COUNT_16 = 0x2, //FIXME: name too long.
    PRIMARY_MEDIA_CAP_1_CONTROL_PRIMARY_SE_OVERWRITE_MEDIA_COUNT_32 = 0x3, //FIXME: name too long.
};

enum secondary_media_cap_1_control_secondary_patrol_scrubbing_frequency {
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_PATROL_SCRUBBING_FREQUENCY_HOURS_48 = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_PATROL_SCRUBBING_FREQUENCY_HOURS_36 = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_PATROL_SCRUBBING_FREQUENCY_HOURS_24 = 0x2, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_PATROL_SCRUBBING_FREQUENCY_HOURS_12 = 0x3, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_PATROL_SCRUBBING_FREQUENCY_HOURS_8 = 0x4, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_PATROL_SCRUBBING_FREQUENCY_HOURS_4 = 0x5, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_PATROL_SCRUBBING_FREQUENCY_HOURS_2 = 0x6, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_PATROL_SCRUBBING_FREQUENCY_HOUR_1 = 0x7, //FIXME: name too long.
};

enum secondary_media_cap_1_control_secondary_error_and_event_notification {
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_ERROR_AND_EVENT_NOTIFICATION_RETURN_ERROR_REASONS_IN_RESPONSE_PACKETS = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_ERROR_AND_EVENT_NOTIFICATION_DO_NOT_RETURN_ERROR_REASONS_IN_RESPONSE_PACKETS_INDEPENDENTLY_INFORM_MANAGEMENT_OF_ALL_ERRORS_AND_EVENTS = 0x1, //FIXME: name too long.
};

enum secondary_media_cap_1_control_secondary_management_event_notification {
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_MANAGEMENT_EVENT_NOTIFICATION_DO_NOT_NOTIFY_MANAGEMENT = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_MANAGEMENT_EVENT_NOTIFICATION_NOTIFY_MANAGEMENT_OF_NEW_CRITICAL_EVENTS = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_MANAGEMENT_EVENT_NOTIFICATION_NOTIFY_MANAGEMENT_OF_NEW_CRITICAL_AND_CAUTION_EVENTS = 0x2, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_MANAGEMENT_EVENT_NOTIFICATION_NOTIFY_MANAGEMENT_OF_NEW_CRITICAL_CAUTION_AND_NON_CRITICAL_EVENTS = 0x3, //FIXME: name too long.
};

enum secondary_media_cap_1_control_secondary_management_event_notification_method {
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_NO_SIGNAL_IS_GENERATED = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_COMPONENT_LOCAL_INTERRUPT_0 = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_COMPONENT_LOCAL_INTERRUPT_1 = 0x2, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_COMPONENT_LOCAL_INTERRUPTS_0_AND_1 = 0x3, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_UNSOLICITED_EVENT_UE_PACKET = 0x4, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_COMPONENT_LOCAL_INTERRUPT_0_AND_AN_UNSOLICITED_EVENT_UE_PACKET = 0x5, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_COMPONENT_LOCAL_INTERRUPT_1_AND_AN_UNSOLICITED_EVENT_UE_PACKET = 0x6, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_MANAGEMENT_EVENT_NOTIFICATION_METHOD_COMPONENT_LOCAL_INTERRUPTS_0_AND_1_AND_AN_UNSOLICITED_EVENT_UE_PACKET = 0x7, //FIXME: name too long.
};

enum secondary_media_cap_1_control_secondary_event_logging_level {
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_EVENT_LOGGING_LEVEL_DO_NOT_LOG_EVENTS = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_EVENT_LOGGING_LEVEL_LOG_ONLY_CRITICAL_E_VENTS = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_EVENT_LOGGING_LEVEL_LOG_CRITICAL_AND_CAUTION_E_VENTS = 0x2, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_EVENT_LOGGING_LEVEL_LOG_CRITICAL_CAUTION_AND_INFORM_EVENTS = 0x3, //FIXME: name too long.
};

enum secondary_media_cap_1_control_initiate_secondary_s_anitize_and_erase {
    SECONDARY_MEDIA_CAP_1_CONTROL_INITIATE_SECONDARY_S_ANITIZE_AND_ERASE_RESERVED_SHALL_NOT_BE_USED = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_INITIATE_SECONDARY_S_ANITIZE_AND_ERASE_SE_FAST_ZERO_MEDIA = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_INITIATE_SECONDARY_S_ANITIZE_AND_ERASE_SE_FAST_ZERO_MEDIA_RANGE = 0x2, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_INITIATE_SECONDARY_S_ANITIZE_AND_ERASE_SE_ZERO_MEDIA = 0x3, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_INITIATE_SECONDARY_S_ANITIZE_AND_ERASE_SE_CRYPTOGRAPHIC_KEY = 0x4, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_INITIATE_SECONDARY_S_ANITIZE_AND_ERASE_SE_OVERWRITE_MEDIA_NO_INVERSION = 0x5, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_INITIATE_SECONDARY_S_ANITIZE_AND_ERASE_SE_OVERWRITE_MEDIA_ALTERNATING_INVERSION = 0x6, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_INITIATE_SECONDARY_S_ANITIZE_AND_ERASE_SE_VENDOR_DEFINED = 0x7, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_INITIATE_SECONDARY_S_ANITIZE_AND_ERASE_SE_VENDOR_DEFINED_RANGE = 0x8, //FIXME: name too long.
};

enum secondary_media_cap_1_control_secondary_se_overwrite_media_count {
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_SE_OVERWRITE_MEDIA_COUNT_1 = 0x0, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_SE_OVERWRITE_MEDIA_COUNT_8 = 0x1, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_SE_OVERWRITE_MEDIA_COUNT_16 = 0x2, //FIXME: name too long.
    SECONDARY_MEDIA_CAP_1_CONTROL_SECONDARY_SE_OVERWRITE_MEDIA_COUNT_32 = 0x3, //FIXME: name too long.
};

enum switch_cap_1_ulat_scale {
    SWITCH_CAP_1_ULAT_SCALE_NS = 0x0,
    SWITCH_CAP_1_ULAT_SCALE_PS = 0x1
};

enum switch_cap_1_mlat_scale {
    SWITCH_CAP_1_MLAT_SCALE_NS = 0x0,
    SWITCH_CAP_1_MLAT_SCALE_PS = 0x1
};

enum cstat_status_statistics_reset {
    CSTAT_STATUS_STATISTICS_RESET_INCOMPLETE_NOT_INITIATED = 0x0, //FIXME: name too long.
    CSTAT_STATUS_STATISTICS_RESET_RESET_COMPLETED = 0x1
};

enum cstat_status_snapshot_status {
    CSTAT_STATUS_SNAPSHOT_STATUS_INCOMPLETE_UNSUPPORTED = 0x0, //FIXME: name too long.
    CSTAT_STATUS_SNAPSHOT_STATUS_COMPLETED = 0x1
};

enum mcast_cap_1_provisioned_egress_mask_bits {
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_2 = 0x0,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_4 = 0x1,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_8 = 0x2,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_12 = 0x3,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_16 = 0x4,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_20 = 0x5,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_24 = 0x6,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_32 = 0x7,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_48 = 0x8,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_64 = 0x9,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_128 = 0xA,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_256 = 0xB,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_512 = 0xC,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_1024 = 0xD,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_2048 = 0xE,
    MCAST_CAP_1_PROVISIONED_EGRESS_MASK_BITS_4096 = 0xF
};

enum mcast_cap_1_reliable_multicast_role_support {
    MCAST_CAP_1_RELIABLE_MULTICAST_ROLE_SUPPORT_REQUESTER = 0x0, //FIXME: name too long.
    MCAST_CAP_1_RELIABLE_MULTICAST_ROLE_SUPPORT_RESPONDER = 0x1, //FIXME: name too long.
    MCAST_CAP_1_RELIABLE_MULTICAST_ROLE_SUPPORT_REQUESTER_RESPONDER = 0x2, //FIXME: name too long.
};

enum mcast_cap_1_control_if_reliable_multicast_is_supported_then_this_bit_determines_if_each_entry_in_the_responder_tracking_table_consists_of_a_responder_cid_or_a_responder_cid_plus_sid {
    MCAST_CAP_1_CONTROL_IF_RELIABLE_MULTICAST_IS_SUPPORTED_THEN_THIS_BIT_DETERMINES_IF_EACH_ENTRY_IN_THE_RESPONDER_TRACKING_TABLE_CONSISTS_OF_A_RESPONDER_CID_OR_A_RESPONDER_CID_PLUS_SID_RESPONDER_CID = 0x0, //FIXME: name too long.
    MCAST_CAP_1_CONTROL_IF_RELIABLE_MULTICAST_IS_SUPPORTED_THEN_THIS_BIT_DETERMINES_IF_EACH_ENTRY_IN_THE_RESPONDER_TRACKING_TABLE_CONSISTS_OF_A_RESPONDER_CID_OR_A_RESPONDER_CID_PLUS_SID_RESPONDER_CID_PLUS_SID = 0x1, //FIXME: name too long.
};

enum image_cap_1_read_only_image_location {
    IMAGE_CAP_1_READ_ONLY_IMAGE_LOCATION_IMAGE_LOCATION_HAS_READ_WRITE_ACCESS = 0x0, //FIXME: name too long.
    IMAGE_CAP_1_READ_ONLY_IMAGE_LOCATION_IMAGE_LOCATION_IS_READ_ONLY_ACCESS = 0x1, //FIXME: name too long.
};

enum pt_cap_1_component_precision_time_granularity_unit {
    PT_CAP_1_COMPONENT_PRECISION_TIME_GRANULARITY_UNIT_NS_DEFAULT = 0x0, //FIXME: name too long.
    PT_CAP_1_COMPONENT_PRECISION_TIME_GRANULARITY_UNIT_PS = 0x1, //FIXME: name too long.
};

enum pt_ctl_precision_time_requester_enable {
    PT_CTL_PRECISION_TIME_REQUESTER_ENABLE_COMPONENT_SHALL_NOT_TRANSMIT_PTREQ = 0x0, //FIXME: name too long.
    PT_CTL_PRECISION_TIME_REQUESTER_ENABLE_COMPONENT_MAY_TRANSMIT_PTREQ_PACKETS = 0x1, //FIXME: name too long.
};

enum pt_ctl_precision_time_responder_enable {
    PT_CTL_PRECISION_TIME_RESPONDER_ENABLE_COMPONENT_SHALL_NOT_TRANSMIT_PTRSP = 0x0, //FIXME: name too long.
    PT_CTL_PRECISION_TIME_RESPONDER_ENABLE_COMPONENT_MAY_TRANSMIT_PTRSP_PACKETS = 0x1, //FIXME: name too long.
};

enum pt_ctl_precision_time_gtc_enable {
    PT_CTL_PRECISION_TIME_GTC_ENABLE_NON_GTC_COMPONENT = 0x0,
    PT_CTL_PRECISION_TIME_GTC_ENABLE_GTC_COMPONENT = 0x1
};

enum pt_ctl_ptd_granularity_unit {
    PT_CTL_PTD_GRANULARITY_UNIT_NS_DEFAULT = 0x0,
    PT_CTL_PTD_GRANULARITY_UNIT_PS = 0x1
};

enum pt_ctl_gtc_cid_location {
    PT_CTL_GTC_CID_LOCATION_CO_LOCATED_USE_GTC_CID = 0x0,
    PT_CTL_GTC_CID_LOCATION_NOT_CO_LOCATED_USE_GTC_CID_GTC_SID = 0x1, //FIXME: name too long.
};

enum mechanical_status_attention_button_pressed {
    MECHANICAL_STATUS_ATTENTION_BUTTON_PRESSED_NOT_P_RESSED = 0x0, //FIXME: name too long.
    MECHANICAL_STATUS_ATTENTION_BUTTON_PRESSED_PRESSED = 0x1
};

enum mechanical_status_power_fault_detected {
    MECHANICAL_STATUS_POWER_FAULT_DETECTED_NOT_D_ETECTED = 0x0, //FIXME: name too long.
    MECHANICAL_STATUS_POWER_FAULT_DETECTED_DETECTED = 0x1
};

enum mechanical_status_mrl_sensor_state_change {
    MECHANICAL_STATUS_MRL_SENSOR_STATE_CHANGE_NO_CHANGE = 0x0, //FIXME: name too long.
    MECHANICAL_STATUS_MRL_SENSOR_STATE_CHANGE_C_HANGE = 0x1
};

enum mechanical_status_mrl_sensor_state {
    MECHANICAL_STATUS_MRL_SENSOR_STATE_MRL_CLOSED = 0x0,
    MECHANICAL_STATUS_MRL_SENSOR_STATE_MRL_OPEN = 0x1
};

enum mechanical_status_dynamic_insertion_removal_change {
    MECHANICAL_STATUS_DYNAMIC_INSERTION_REMOVAL_CHANGE_NO_C_HANGE = 0x0, //FIXME: name too long.
    MECHANICAL_STATUS_DYNAMIC_INSERTION_REMOVAL_CHANGE_C_HANGE = 0x1, //FIXME: name too long.
};

enum mechanical_status_mechanical_component_presence {
    MECHANICAL_STATUS_MECHANICAL_COMPONENT_PRESENCE_NOT_PRESENT = 0x0, //FIXME: name too long.
    MECHANICAL_STATUS_MECHANICAL_COMPONENT_PRESENCE_PRESENT = 0x1, //FIXME: name too long.
};

enum mechanical_status_electromechanical_interlock_status {
    MECHANICAL_STATUS_ELECTROMECHANICAL_INTERLOCK_STATUS_DISENGAGED = 0x0, //FIXME: name too long.
    MECHANICAL_STATUS_ELECTROMECHANICAL_INTERLOCK_STATUS_ENGAGED = 0x1, //FIXME: name too long.
};

enum mechanical_status_controller_cmd_completion {
    MECHANICAL_STATUS_CONTROLLER_CMD_COMPLETION_COMPLETION_PENDING_NO_IN_FLIGHT_COMMAND = 0x0, //FIXME: name too long.
    MECHANICAL_STATUS_CONTROLLER_CMD_COMPLETION_COMPLETED = 0x1, //FIXME: name too long.
};

enum mechanical_cap_1_mechanical_insertion_removal_support {
    MECHANICAL_CAP_1_MECHANICAL_INSERTION_REMOVAL_SUPPORT_UNSUPPORTED = 0x0, //FIXME: name too long.
    MECHANICAL_CAP_1_MECHANICAL_INSERTION_REMOVAL_SUPPORT_MANAGED_INSERTION_AND_REMOVAL = 0x1, //FIXME: name too long.
    MECHANICAL_CAP_1_MECHANICAL_INSERTION_REMOVAL_SUPPORT_ASYNCHRONOUS_INSERTION_AND_REMOVAL = 0x2, //FIXME: name too long.
    MECHANICAL_CAP_1_MECHANICAL_INSERTION_REMOVAL_SUPPORT_MANAGED_AND_ASYNCHRONOUS_INSERTION_AND_REMOVAL = 0x3, //FIXME: name too long.
};

enum mechanical_cap_1_mech_power_scale {
    MECHANICAL_CAP_1_MECH_POWER_SCALE_1_0 = 0x0,
    MECHANICAL_CAP_1_MECH_POWER_SCALE_0_1 = 0x1,
    MECHANICAL_CAP_1_MECH_POWER_SCALE_0_01 = 0x2,
    MECHANICAL_CAP_1_MECH_POWER_SCALE_0_001 = 0x3,
    MECHANICAL_CAP_1_MECH_POWER_SCALE_0_0001 = 0x4,
    MECHANICAL_CAP_1_MECH_POWER_SCALE_0_00001 = 0x5,
    MECHANICAL_CAP_1_MECH_POWER_SCALE_0_000001 = 0x6,
    MECHANICAL_CAP_1_MECH_POWER_SCALE_0_0000001 = 0x7
};

enum mechanical_cap_1_module_indicator_interpretation {
    MECHANICAL_CAP_1_MODULE_INDICATOR_INTERPRETATION_COMPONENTS_BASE_CLASS = 0x0, //FIXME: name too long.
    MECHANICAL_CAP_1_MODULE_INDICATOR_INTERPRETATION_COMPONENTS_C_UUID = 0x1, //FIXME: name too long.
    MECHANICAL_CAP_1_MODULE_INDICATOR_INTERPRETATION_VENDOR_DEFINED_STRUCTURE_SEE_MECH_VENDOR_DEF_PTR = 0x2, //FIXME: name too long.
};

enum mechanical_control_attention_indicator_control {
    MECHANICAL_CONTROL_ATTENTION_INDICATOR_CONTROL_ON = 0x1,
    MECHANICAL_CONTROL_ATTENTION_INDICATOR_CONTROL_BLINK = 0x2, //FIXME: name too long.
    MECHANICAL_CONTROL_ATTENTION_INDICATOR_CONTROL_OFF = 0x3
};

enum mechanical_control_main_power_controller_disable {
    MECHANICAL_CONTROL_MAIN_POWER_CONTROLLER_DISABLE_ENABLE_MAIN_POWER_TO_THE_COMPONENTS_MECHANICAL_MODULE_DEFAULT = 0x0, //FIXME: name too long.
    MECHANICAL_CONTROL_MAIN_POWER_CONTROLLER_DISABLE_DISABLE_MAIN_POWER_TO_THE_COMPONENTS_MECHANICAL_MODULE = 0x1, //FIXME: name too long.
};

enum mechanical_control_power_indicator_control {
    MECHANICAL_CONTROL_POWER_INDICATOR_CONTROL_ON = 0x1,
    MECHANICAL_CONTROL_POWER_INDICATOR_CONTROL_BLINK = 0x2,
    MECHANICAL_CONTROL_POWER_INDICATOR_CONTROL_OFF = 0x3
};

enum mechanical_control_activity_indicator_control {
    MECHANICAL_CONTROL_ACTIVITY_INDICATOR_CONTROL_MODULE_PRESENT = 0x0, //FIXME: name too long.
    MECHANICAL_CONTROL_ACTIVITY_INDICATOR_CONTROL_LOCATE = 0x1, //FIXME: name too long.
    MECHANICAL_CONTROL_ACTIVITY_INDICATOR_CONTROL_MODULE_FAILURE = 0x2, //FIXME: name too long.
    MECHANICAL_CONTROL_ACTIVITY_INDICATOR_CONTROL_MODULE_INDICATOR_NOTIFICATION_1 = 0x3, //FIXME: name too long.
    MECHANICAL_CONTROL_ACTIVITY_INDICATOR_CONTROL_MODULE_INDICATOR_NOTIFICATION_2 = 0x4, //FIXME: name too long.
    MECHANICAL_CONTROL_ACTIVITY_INDICATOR_CONTROL_MODULE_INDICATOR_NOTIFICATION_3 = 0x5, //FIXME: name too long.
    MECHANICAL_CONTROL_ACTIVITY_INDICATOR_CONTROL_MODULE_INDICATOR_NOTIFICATION_4 = 0x6, //FIXME: name too long.
    MECHANICAL_CONTROL_ACTIVITY_INDICATOR_CONTROL_MODULE_INDICATOR_NOTIFICATION_5 = 0x7, //FIXME: name too long.
    MECHANICAL_CONTROL_ACTIVITY_INDICATOR_CONTROL_MODULE_INDICATOR_NOTIFICATION_6 = 0x8, //FIXME: name too long.
    MECHANICAL_CONTROL_ACTIVITY_INDICATOR_CONTROL_MODULE_INDICATOR_NOTIFICATION_7 = 0x9, //FIXME: name too long.
    MECHANICAL_CONTROL_ACTIVITY_INDICATOR_CONTROL_VENDOR_DEFINED_NOTIFICATION_1 = 0xA, //FIXME: name too long.
    MECHANICAL_CONTROL_ACTIVITY_INDICATOR_CONTROL_VENDOR_DEFINED_NOTIFICATION_2 = 0xB, //FIXME: name too long.
};

enum mechanical_control_auxiliary_power_disable {
    MECHANICAL_CONTROL_AUXILIARY_POWER_DISABLE_ENABLE_AUXILIARY_POWER_TO_THE_COMPONENTS_MECHANICAL_MODULE_DEFAULT = 0x0, //FIXME: name too long.
    MECHANICAL_CONTROL_AUXILIARY_POWER_DISABLE_DISABLE_AUXILIARY_POWER_TO_THE_COMPONENTS_MECHANICAL_MODULE = 0x1, //FIXME: name too long.
};

enum destination_table_control_rit_ssdt_enable {
    DESTINATION_TABLE_CONTROL_RIT_SSDT_ENABLE_DISABLED_USE_ONLY_RIT = 0x0, //FIXME: name too long.
    DESTINATION_TABLE_CONTROL_RIT_SSDT_ENABLE_ENABLED_USE_SSDT_MSDT_AND_RIT = 0x1, //FIXME: name too long.
};

enum req_bank_control_opclass_enable {
    REQ_BANK_CONTROL_OPCLASS_ENABLE_P2P_CORE = 0x0,
    REQ_BANK_CONTROL_OPCLASS_ENABLE_P2P_COHERENCY = 0x1,
    REQ_BANK_CONTROL_OPCLASS_ENABLE_P2P_VENDOR_DEFINED = 0x2
};

enum req_bank_control_primary_media_volatility {
    REQ_BANK_CONTROL_PRIMARY_MEDIA_VOLATILITY_VOLATILE_MEDIA = 0x0, //FIXME: name too long.
    REQ_BANK_CONTROL_PRIMARY_MEDIA_VOLATILITY_NON_VOLATILE_MEDIA_USE_WRITE_PERSISTENT = 0x1, //FIXME: name too long.
    REQ_BANK_CONTROL_PRIMARY_MEDIA_VOLATILITY_NON_VOLATILE_MEDIA_USE_PERSISTENT_FLUSH = 0x2, //FIXME: name too long.
    REQ_BANK_CONTROL_PRIMARY_MEDIA_VOLATILITY_MIX_OF_VOLATILE_AND_NON_VOLATILE_MEDIA_USE_WRITE_PERSISTENT = 0x3, //FIXME: name too long.
    REQ_BANK_CONTROL_PRIMARY_MEDIA_VOLATILITY_MIX_OF_VOLATILE_AND_NON_VOLATILE_MEDIA_USE_PERSISTENT_FLUSH = 0x4, //FIXME: name too long.
    REQ_BANK_CONTROL_PRIMARY_MEDIA_VOLATILITY_NON_VOLATILE_MEDIA_NO_ACTION_REQUIRED_TO_ENSURE_PERSISTENCY = 0x5, //FIXME: name too long.
};

enum req_bank_control_secondary_media_volatility {
    REQ_BANK_CONTROL_SECONDARY_MEDIA_VOLATILITY_VOLATILE_MEDIA = 0x0, //FIXME: name too long.
    REQ_BANK_CONTROL_SECONDARY_MEDIA_VOLATILITY_NON_VOLATILE_MEDIA_USE_WRITE_PERSISTENT = 0x1, //FIXME: name too long.
    REQ_BANK_CONTROL_SECONDARY_MEDIA_VOLATILITY_NON_VOLATILE_MEDIA_USE_PERSISTENT_FLUSH = 0x2, //FIXME: name too long.
    REQ_BANK_CONTROL_SECONDARY_MEDIA_VOLATILITY_MIX_OF_VOLATILE_AND_NON_VOLATILE_MEDIA_USE_WRITE_PERSISTENT = 0x3, //FIXME: name too long.
    REQ_BANK_CONTROL_SECONDARY_MEDIA_VOLATILITY_MIX_OF_VOLATILE_AND_NON_VOLATILE_MEDIA_USE_PERSISTENT_FLUSH = 0x4, //FIXME: name too long.
    REQ_BANK_CONTROL_SECONDARY_MEDIA_VOLATILITY_NON_VOLATILE_MEDIA_NO_ACTION_REQUIRED_TO_ENSURE_PERSISTENCY = 0x5, //FIXME: name too long.
};

enum pa_cap_1_pa_index_field_size {
    PA_CAP_1_PA_INDEX_FIELD_SIZE_BITS_0 = 0x0,
    PA_CAP_1_PA_INDEX_FIELD_SIZE_BITS_8 = 0x1,
    PA_CAP_1_PA_INDEX_FIELD_SIZE_BITS_16 = 0x2
};

enum pa_cap_1_sec_index_field_size {
    PA_CAP_1_SEC_INDEX_FIELD_SIZE_BITS_0 = 0x0,
    PA_CAP_1_SEC_INDEX_FIELD_SIZE_BIT_1 = 0x1,
    PA_CAP_1_SEC_INDEX_FIELD_SIZE_BITS_8 = 0x2,
    PA_CAP_1_SEC_INDEX_FIELD_SIZE_BITS_16 = 0x3
};

enum pa_cap_1_wildcard_akey_support {
    PA_CAP_1_WILDCARD_AKEY_SUPPORT_AKEY = 0x0,
    PA_CAP_1_WILDCARD_AKEY_SUPPORT_WILDCARD = 0x1
};

enum pa_cap_1_wildcard_peer_attr_support {
    PA_CAP_1_WILDCARD_PEER_ATTR_SUPPORT_PA_TABLE = 0x0,
    PA_CAP_1_WILDCARD_PEER_ATTR_SUPPORT_WILDCARD = 0x1
};

enum pa_cap_1_wildcard_sec_support {
    PA_CAP_1_WILDCARD_SEC_SUPPORT_SEC_TABLE = 0x0,
    PA_CAP_1_WILDCARD_SEC_SUPPORT_WILDCARD = 0x1
};

enum pa_cap_1_wildcard_acreq_support {
    PA_CAP_1_WILDCARD_ACREQ_SUPPORT_USE_ACREQ_FIELD_IN_THE_AP_TABLES = 0x0, //FIXME: name too long.
    PA_CAP_1_WILDCARD_ACREQ_SUPPORT_USE_W_ACREQ = 0x1
};

enum pa_cap_1_wildcard_acrsp_support {
    PA_CAP_1_WILDCARD_ACRSP_SUPPORT_USE_ACRSP_IN_THE_AP_TABLES = 0x0, //FIXME: name too long.
    PA_CAP_1_WILDCARD_ACRSP_SUPPORT_USE_W_ACRSP = 0x1
};

enum f_ctl0_interrupt_r_key_enable {
    F_CTL0_INTERRUPT_R_KEY_ENABLE_NO_R_KEY_PRESENT = 0x0,
    F_CTL0_INTERRUPT_R_KEY_ENABLE_R_KEY_PRESENT = 0x1
};

enum congestion_cap_1_control_congestion_management_control {
    CONGESTION_CAP_1_CONTROL_CONGESTION_MANAGEMENT_CONTROL_COMPONENT = 0x0, //FIXME: name too long.
    CONGESTION_CAP_1_CONTROL_CONGESTION_MANAGEMENT_CONTROL_RESOURCE = 0x1, //FIXME: name too long.
    CONGESTION_CAP_1_CONTROL_CONGESTION_MANAGEMENT_CONTROL_VENDOR_DEFINED = 0x2, //FIXME: name too long.
};

enum congestion_cap_1_control_strict_increment_mode_control {
    CONGESTION_CAP_1_CONTROL_STRICT_INCREMENT_MODE_CONTROL_VENDOR_DEFINED = 0x0, //FIXME: name too long.
    CONGESTION_CAP_1_CONTROL_STRICT_INCREMENT_MODE_CONTROL_STRICT_BY_1_ADJUSTMENT = 0x1, //FIXME: name too long.
};

enum pm_cap_1_performance_marker_support {
    PM_CAP_1_PERFORMANCE_MARKER_SUPPORT_UNSUPPORTED = 0x0,
    PM_CAP_1_PERFORMANCE_MARKER_SUPPORT_GENERATES_PERFORMANCE_LOG_RECORD_TYPE_0 = 0x1, //FIXME: name too long.
    PM_CAP_1_PERFORMANCE_MARKER_SUPPORT_GENERATES_PERFORMANCE_LOG_RECORD_TYPES_1 = 0x2, //FIXME: name too long.
};

enum atp_cap_1_pasid_support {
    ATP_CAP_1_PASID_SUPPORT_PASID_RESERVED = 0x0,
    ATP_CAP_1_PASID_SUPPORT_PASID_VALUE = 0x1
};

enum atp_cap_1_prg_rspn_pasid_required {
    ATP_CAP_1_PRG_RSPN_PASID_REQUIRED_PASID_IGNORED = 0x0,
    ATP_CAP_1_PRG_RSPN_PASID_REQUIRED_PASID_REQUIRED = 0x1
};

enum atp_cap_1_control_address_translation_cache_enable {
    ATP_CAP_1_CONTROL_ADDRESS_TRANSLATION_CACHE_ENABLE_SHALL_NOT_CACHE = 0x0, //FIXME: name too long.
    ATP_CAP_1_CONTROL_ADDRESS_TRANSLATION_CACHE_ENABLE_MAY_CACHE = 0x1, //FIXME: name too long.
};

enum atp_cap_1_control_max_context_id {
    ATP_CAP_1_CONTROL_MAX_CONTEXT_ID_2_16_1 = 0x0,
    ATP_CAP_1_CONTROL_MAX_CONTEXT_ID_2_24_1 = 0x1
};

enum lph_ctl_interrupt_r_key_enable {
    LPH_CTL_INTERRUPT_R_KEY_ENABLE_NO_R_KEY_PRESENT = 0x0,
    LPH_CTL_INTERRUPT_R_KEY_ENABLE_R_KEY_PRESENT = 0x1
};

enum pg_zmmu_cap_1_zmmu_type {
    PG_ZMMU_CAP_1_ZMMU_TYPE_REQUESTER_ZMMU = 0x0,
    PG_ZMMU_CAP_1_ZMMU_TYPE_RESPONDER_ZMMU = 0x1
};

enum pt_zmmu_cap_1_zmmu_type {
    PT_ZMMU_CAP_1_ZMMU_TYPE_REQUESTER_ZMMU = 0x0,
    PT_ZMMU_CAP_1_ZMMU_TYPE_RESPONDER_ZMMU = 0x1
};

enum component_backup_cap_1_max_backup_retry_support {
    COMPONENT_BACKUP_CAP_1_MAX_BACKUP_RETRY_SUPPORT_BACKUP_RETRY_UNSUPPORTED = 0x0, //FIXME: name too long.
    COMPONENT_BACKUP_CAP_1_MAX_BACKUP_RETRY_SUPPORT_ONE_RETRY = 0x1, //FIXME: name too long.
    COMPONENT_BACKUP_CAP_1_MAX_BACKUP_RETRY_SUPPORT_TWO_RETRIES = 0x2, //FIXME: name too long.
    COMPONENT_BACKUP_CAP_1_MAX_BACKUP_RETRY_SUPPORT_THREE_RETRIES = 0x3, //FIXME: name too long.
};

enum component_backup_cap_1_max_restore_retry_support {
    COMPONENT_BACKUP_CAP_1_MAX_RESTORE_RETRY_SUPPORT_RESTORE_RETRY_UNSUPPORTED = 0x0, //FIXME: name too long.
    COMPONENT_BACKUP_CAP_1_MAX_RESTORE_RETRY_SUPPORT_ONE_RETRY = 0x1, //FIXME: name too long.
    COMPONENT_BACKUP_CAP_1_MAX_RESTORE_RETRY_SUPPORT_TWO_RETRIES = 0x2, //FIXME: name too long.
    COMPONENT_BACKUP_CAP_1_MAX_RESTORE_RETRY_SUPPORT_THREE_RETRIES = 0x3, //FIXME: name too long.
};

enum component_backup_cap_1_max_erase_retry_support {
    COMPONENT_BACKUP_CAP_1_MAX_ERASE_RETRY_SUPPORT_ERASE_RETRY_UNSUPPORTED = 0x0, //FIXME: name too long.
    COMPONENT_BACKUP_CAP_1_MAX_ERASE_RETRY_SUPPORT_ONE_RETRY = 0x1, //FIXME: name too long.
    COMPONENT_BACKUP_CAP_1_MAX_ERASE_RETRY_SUPPORT_TWO_RETRIES = 0x2, //FIXME: name too long.
    COMPONENT_BACKUP_CAP_1_MAX_ERASE_RETRY_SUPPORT_THREE_RETRIES = 0x3, //FIXME: name too long.
};

enum component_backup_control_1_wait_for_backup_power {
    COMPONENT_BACKUP_CONTROL_1_WAIT_FOR_BACKUP_POWER_WAIT = 0x0, //FIXME: name too long.
    COMPONENT_BACKUP_CONTROL_1_WAIT_FOR_BACKUP_POWER_DO_NOT_WAIT = 0x1, //FIXME: name too long.
};

enum component_backup_control_1_lps_tps_enable {
    COMPONENT_BACKUP_CONTROL_1_LPS_TPS_ENABLE_TPS = 0x0,
    COMPONENT_BACKUP_CONTROL_1_LPS_TPS_ENABLE_LPS = 0x1
};

enum pm_backup_status0_arm_status {
    PM_BACKUP_STATUS0_ARM_STATUS_DISARMED = 0x0,
    PM_BACKUP_STATUS0_ARM_STATUS_ARMED = 0x1
};

enum pm_backup_control0_discrete_valid {
    PM_BACKUP_CONTROL0_DISCRETE_VALID_CO_LOCATED_PRIMARY_AND_SECONDARY_MEDIA = 0x0, //FIXME: name too long.
    PM_BACKUP_CONTROL0_DISCRETE_VALID_P2P_IFACE_CONFIGURED_FOR_USE = 0x1, //FIXME: name too long.
    PM_BACKUP_CONTROL0_DISCRETE_VALID_SM_CID_CONFIGURED_FOR_USE = 0x2, //FIXME: name too long.
    PM_BACKUP_CONTROL0_DISCRETE_VALID_SM_CID_AND_SM_SID_CONFIGURED_FOR_USE = 0x3, //FIXME: name too long.
};

enum sm_backup_control0_discrete_valid {
    SM_BACKUP_CONTROL0_DISCRETE_VALID_CO_LOCATED_PRIMARY_AND_SECONDARY_MEDIA = 0x0, //FIXME: name too long.
    SM_BACKUP_CONTROL0_DISCRETE_VALID_P2P_IFACE_CONFIGURED_FOR_USE = 0x1, //FIXME: name too long.
    SM_BACKUP_CONTROL0_DISCRETE_VALID_PM_CID_CONFIGURED_FOR_USE = 0x2, //FIXME: name too long.
    SM_BACKUP_CONTROL0_DISCRETE_VALID_PM_CID_AND_PM_SID_CONFIGURED_FOR_USE = 0x3, //FIXME: name too long.
};


union c_status {
    uint64_t val;
    struct {
        uint64_t c_status_c_state                          : 3;
        uint64_t unsolicited_event_packet_status           : 1;
        uint64_t non_fatal_internal_error_detected         : 1;
        uint64_t fatal_internal_error_detected             : 1;
        uint64_t non_transient_protocol_error_detected     : 1;
        uint64_t bist_failure_detected                     : 1;
        uint64_t c_status_component_thermal_status         : 2;
        uint64_t component_containment_detected            : 1;
        uint64_t emergency_power_reduction_detected        : 1;
        uint64_t power_off_transition_completed            : 1;
        uint64_t component_thermal_throttled               : 1;
        uint64_t component_thermal_throttled_restoration   : 1;
        uint64_t cannot_execute_persistent_flush           : 1;
        uint64_t c_status_hwinit_valid                     : 1;
        uint64_t refresh_component_configuration_completed : 1;
        uint64_t padding                                   : 46;
    };
};


union c_control {
    uint64_t val;
    struct {
        uint64_t component_enable                                                     : 1;
        uint64_t c_control_initiate_component_reset                                   : 3;
        uint64_t c_control_halt_uert_unsolicited_event_ue_packet_retransmission_timer : 1; //FIXME: name too long.
        uint64_t c_control_transition_c_up                                            : 1;
        uint64_t c_control_transition_c_lp                                            : 1;
        uint64_t c_control_transition_c_dlp                                           : 1;
        uint64_t c_control_trigger_emergency_power_reduction                          : 1;
        uint64_t c_control_exit_emergency_power_reduction                             : 1;
        uint64_t c_control_transition_component_power_off                             : 1;
        uint64_t upper_thermal_limit_performance_throttle_enable                      : 1;
        uint64_t caution_thermal_limit_performance_throttle_enable                    : 1;
        uint64_t c_control_lpd_responder_zmmu_bypass_control                          : 1;
        uint64_t c_control_refresh_component_configuration_control                    : 1;
        uint64_t padding                                                              : 49;
    };
};


union component_cap_1 {
    uint64_t val;
    struct {
        uint64_t component_cap_1_max_packet_payload                                                                                                                                     : 3;
        uint64_t no_snoop_s_upport                                                                                                                                                      : 1;
        uint64_t content_component_reset_support_see_component_reset                                                                                                                    : 1; //FIXME: name too long.
        uint64_t bu_ilt_in_self_test_bist_support                                                                                                                                       : 1;
        uint64_t component_containment_support                                                                                                                                          : 1;
        uint64_t component_cap_1_address_field_interpretation                                                                                                                           : 1;
        uint64_t next_header_support                                                                                                                                                    : 1;
        uint64_t next_header_control_opclass_support                                                                                                                                    : 1;
        uint64_t precision_time_support                                                                                                                                                 : 1;
        uint64_t component_cap_1_addressable_resource_classification                                                                                                                    : 3; //FIXME: name too long.
        uint64_t component_cap_1_cached_component_control_space_structure_support                                                                                                       : 1; //FIXME: name too long.
        uint64_t in_band_management_support                                                                                                                                             : 1;
        uint64_t out_of_band_management_support                                                                                                                                         : 1;
        uint64_t primary_manage_r_support                                                                                                                                               : 1;
        uint64_t fabric_manager_support                                                                                                                                                 : 1;
        uint64_t power_manager_supports                                                                                                                                                 : 1;
        uint64_t automatic_c_state_support                                                                                                                                              : 1;
        uint64_t vendor_defined_power_management_support                                                                                                                                : 1;
        uint64_t emergency_power_reduction_support                                                                                                                                      : 1;
        uint64_t component_cap_1_configuration_post_emergency_power_reduction                                                                                                           : 1; //FIXME: name too long.
        uint64_t emergency_power_reduction_relay_support                                                                                                                                : 1;
        uint64_t component_cap_1_c_state_power_control_support                                                                                                                          : 1;
        uint64_t power_disable_support                                                                                                                                                  : 1;
        uint64_t component_cap_1_power_s_cale_pwrs_is_used_to_calculate_the_various_component_maximum_non_auxiliary_power_consumption_values                                            : 3; //FIXME: name too long.
        uint64_t component_cap_1_auxiliary_p_ower_s_cale_apwrs_is_used_to_calculate_the_maximum_power_consumption_a_component_is_capable_of_consuming_when_operating_on_auxiliary_power : 3; //FIXME: name too long.
        uint64_t mctp_over_gen_z_support                                                                                                                                                : 1;
        uint64_t component_cap_1_core_latency_scale                                                                                                                                     : 2;
        uint64_t multi_subnet_support                                                                                                                                                   : 1;
        uint64_t component_cap_1_maximum_number_cid                                                                                                                                     : 2;
        uint64_t nirt_support                                                                                                                                                           : 1;
        uint64_t enirt_support                                                                                                                                                          : 1;
        uint64_t emergency_power_reduction_signal_support                                                                                                                               : 1;
        uint64_t component_cap_1_retransmission_timer_support                                                                                                                           : 2;
        uint64_t component_cap_1_timer_unit                                                                                                                                             : 4;
        uint64_t power_disable_signal_support                                                                                                                                           : 1;
        uint64_t emergency_backup_signal_support                                                                                                                                        : 1;
        uint64_t shared_emergency_signal_support                                                                                                                                        : 1;
        uint64_t management_directed_c_lp_support                                                                                                                                       : 1;
        uint64_t management_directed_c_dlp_support                                                                                                                                      : 1;
        uint64_t fps_support                                                                                                                                                            : 1;
        uint64_t pco_fps_support                                                                                                                                                        : 1;
        uint64_t component_authentication_support                                                                                                                                       : 1;
        uint64_t rsvdz                                                                                                                                                                  : 8;
//uint64_t padding                                                                                                                                                                : 0;
    };
};


union component_cap_1_control {
    uint64_t val;
    struct {
        uint64_t component_cap_1_control_max_packet_payload                         : 3;
        uint64_t component_cap_1_control_no_snoop_control                           : 1;
        uint64_t component_cap_1_control_built_in_self_test_bist_control            : 1; //FIXME: name too long.
        uint64_t component_cap_1_control_manager_type                               : 1;
        uint64_t component_cap_1_control_primary_manager_role                       : 1;
        uint64_t component_cap_1_control_primary_fabric_manager_role                : 1; //FIXME: name too long.
        uint64_t component_cap_1_control_secondary_fabric_manager_role              : 1; //FIXME: name too long.
        uint64_t component_cap_1_control_power_manager_enable                       : 2;
        uint64_t primary_manager_transition_enable                                  : 1;
        uint64_t fabric_manager_transition_enable                                   : 1;
        uint64_t next_header_enable                                                 : 1;
        uint64_t next_header_c_ontrol_opclass_enable                                : 1;
        uint64_t next_header_precision_time_enable                                  : 1;
        uint64_t component_cap_1_control_in_band_management_disable                 : 1;
        uint64_t component_cap_1_control_out_of_band_management_disable             : 1; //FIXME: name too long.
        uint64_t automatic_c_state_enable                                           : 1;
        uint64_t vendor_defined_power_management_enable                             : 1;
        uint64_t component_cap_1_control_max_power_control                          : 3;
        uint64_t emergency_power_reduction_enable                                   : 1;
        uint64_t notify_requester_on_power_event                                    : 1;
        uint64_t rsvdp                                                              : 1;
        uint64_t component_cap_1_control_c_state_power_control_enable               : 1; //FIXME: name too long.
        uint64_t component_cap_1_control_lowest_automatic_c_state_level             : 3; //FIXME: name too long.
        uint64_t component_cap_1_control_initiate_all_statistics_snapshot           : 1; //FIXME: name too long.
        uint64_t component_cap_1_control_initiate_all_interface_statistics_snapshot : 1; //FIXME: name too long.
        uint64_t mctp_over_gen_z_enable                                             : 1;
        uint64_t meta_read_write_header_enable                                      : 1;
        uint64_t component_cap_1_control_host_manager_mgr_uuid_enable               : 2; //FIXME: name too long.
        uuid_t mgr_uuid_enable;
        uint64_t software_defined_management_bit_0                                  : 1;
        uint64_t software_defined_management_bit_1                                  : 1;
        uint64_t software_defined_management_bit_2                                  : 1;
        uint64_t software_defined_management_bit_3                                  : 1;
        uint64_t software_defined_management_bit_4                                  : 1;
        uint64_t software_defined_management_bit_5                                  : 1;
        uint64_t software_defined_management_bit_6                                  : 1;
        uint64_t software_defined_management_bit_7                                  : 1;
        uint64_t padding                                                            : 19;
    };
};


union component_cap_2 {
    uint64_t val;
    struct {
        uint64_t component_cap_2_r_key_support              : 2;
        uint64_t responder_memory_interleave_support        : 1;
        uint64_t requester_memory_interleave_support        : 1;
        uint64_t sod_support                                : 1;
        uint64_t write_msg_embedded_read_support            : 1;
        uint64_t component_cap_2_poison_granularity_support : 4;
        uint64_t host_lpd_field_type_1_and_type_2_support   : 1;
        uint64_t host_lpd_field_type_0_support              : 1;
        uint64_t component_cap_2_performance_marker_support : 3;
        uint64_t max_perf_records                           : 5;
        uint64_t component_cap_2_meta_read_write_support    : 3;
        uint64_t host_lpd_field_type_3_support              : 1;
        uint64_t host_lpd_field_type_4_support              : 1;
        uint64_t t10_dif_support                            : 1;
        uint64_t t10_pi_su_pport                            : 1;
        uint64_t di_pi_block_size_support                   : 8;
        uint64_t bufreq_t10_dif_pi_support                  : 1;
        uint64_t rsvdp                                      : 28;
//uint64_t padding                                    : 0;
    };
};


union component_cap_2_control {
    uint64_t val;
    struct {
        uint64_t rsvdp                                                : 1;
        uint64_t pmcid_valid                                          : 1;
        uint64_t pfmcid_valid                                         : 1;
        uint64_t sfmcid_valid                                         : 1;
        uint64_t pfmsid_valid                                         : 1;
        uint64_t sfmsid_valid                                         : 1;
        uint64_t responder_memory_interleave_enable                   : 1;
        uint64_t performance_log_record_enable                        : 1;
        uint64_t component_cap_2_control_clear_performance_marker_log : 1; //FIXME: name too long.
        uint64_t host_lpd_field_type_1_and_type_2_enable              : 1;
        uint64_t host_lpd_field_type_3_enable                         : 1;
        uint64_t host_lpd_field_type_0_enable                         : 1;
        uint64_t host_lpd_field_type_4_enable                         : 1;
        uint64_t t10_dif_enable                                       : 1;
        uint64_t t10_pi_enable                                        : 1;
        uint64_t component_cap_2_control_di_pi_block_size             : 3;
        uint64_t bufreq_t10_dif_pi_enable                             : 1;
        uint64_t padding                                              : 45;
    };
};


union component_cap_3 {
    uint64_t val;
    struct {
        uint64_t component_cap_3_lightweight_notification_support : 2;
        uint64_t lnreq_registrations_supported                    : 5;
        uint64_t lnrsp_32_byte_ln_block_size_support              : 1;
        uint64_t lnrsp_64_byte_ln_block_size_support              : 1;
        uint64_t lnrsp_128_byte_ln_block_size_support             : 1;
        uint64_t lnrsp_256_byte_ln_block_size_support             : 1;
        uint64_t max_supported_home_agents                        : 4;
        uint64_t max_supported_caching_agents                     : 4;
        uint64_t reserved                                         : 45;
//uint64_t padding                                          : 0;
    };
};


union component_cap_3_control {
    uint64_t val;
    struct {
        uint64_t ln_enable                                   : 1;
        uint64_t component_cap_3_control_lnrsp_ln_block_size : 3;
        uint64_t home_agent_enable                           : 1;
        uint64_t caching_agent_enable                        : 1;
        uint64_t reserved                                    : 58;
//uint64_t padding                                     : 0;
    };
};


union component_cap_4 {
    uint64_t val;
    struct {
        uint64_t reserved : 64;
//uint64_t padding  : 0;
    };
};


union component_cap_4_control {
    uint64_t val;
    struct {
        uint64_t reserved : 64;
//uint64_t padding  : 0;
    };
};


union thermal_attributes {
    uint16_t val;
    struct {
        uint16_t afi_air_flow_impedance_level   : 4;
        uint16_t maxtherm_maximum_thermal_level : 4;
        uint16_t dtherm_degraded_thermal_level  : 4;
        uint16_t maxambient_max_ambient         : 4;
//uint64_t padding                        : 0;
    };
};


union opcode_set_cap_1_control {
    uint32_t val;
    struct {
        uint32_t opcode_set_cap_1_control_enabled_cache_line_size            : 3;
        uint32_t opcode_set_cap_1_control_interface_uniform_opclass_selected : 3; //FIXME: name too long.
        uint32_t rsvdp                                                       : 26;
//uint64_t padding                                                     : 0;
    };
};


union opcode_set_cap_1 {
    uint64_t val;
    struct {
        uint64_t p2p_vendor_defined_support                                        : 1;
        uint64_t vdo_opclass_1_support                                             : 1;
        uint64_t vdo_opclass_2_support                                             : 1;
        uint64_t vdo_opclass_3_support                                             : 1;
        uint64_t vdo_opclass_4_support                                             : 1;
        uint64_t vdo_opclass_5_support                                             : 1;
        uint64_t vdo_opclass_6_support                                             : 1;
        uint64_t vdo_opclass_7_support                                             : 1;
        uint64_t vdo_opclass_8_support                                             : 1;
        uint64_t opcode_set_cap_1_atomic_data_endian_type                          : 2;
        uint64_t opcode_set_cap_1_protocol_version_associated_with_this_opcode_set : 4; //FIXME: name too long.
        uint64_t opcode_set_cap_1_interrupt_role_if_interrupts_are_supported       : 2; //FIXME: name too long.
        uint64_t opcode_set_cap_1_single_opcode_set_support                        : 1;
        uint64_t opcode_set_cap_1_per_destination_opcode_set_support               : 1; //FIXME: name too long.
        uint64_t ldm_1_read_response_meta_support                                  : 1;
        uint64_t opcode_set_cap_1_uniform_opclass_support                          : 1;
        uint64_t reserved                                                          : 43;
//uint64_t padding                                                           : 0;
    };
};


union cache_sizes {
    uint8_t val;
    struct {
        uint8_t bytes_32  : 1;
        uint8_t bytes_64  : 1;
        uint8_t bytes_128 : 1;
        uint8_t bytes_256 : 1;
//uint64_t padding  : 0;
    };
};


union write_poison_sizes {
    uint8_t val;
    struct {
        uint8_t bytes_32   : 1;
        uint8_t bytes_64   : 1;
        uint8_t bytes_128  : 1;
        uint8_t bytes_256  : 1;
        uint8_t bytes_4096 : 1;
        uint8_t reserved   : 3;
//uint64_t padding   : 0;
    };
};


union i_status {
    uint32_t val;
    struct {
        uint32_t i_status_interface_state                   : 3;
        uint32_t full_interface_reset                       : 1;
        uint32_t warm_interface_reset                       : 1;
        uint32_t link_rfc_status                            : 1;
        uint32_t peer_link_rfc_ready                        : 1;
        uint32_t peer_link_rfc_ttc                          : 1;
        uint32_t exceeded_transient_error_threshold         : 1;
        uint32_t active_link_failure                        : 1;
        uint32_t link_ctl_completed                         : 1;
        uint32_t i_status_link_ctl_completion_status        : 5;
        uint32_t interface_containment_detected             : 1;
        uint32_t interface_component_containment_detected   : 1;
        uint32_t peer_interface_incompatibility_detected    : 1;
        uint32_t peer_nonce_detected                        : 1;
        uint32_t i_status_link_level_reliability_llr_status : 1;
        uint32_t rsvdz                                      : 11;
//uint64_t padding                                    : 0;
    };
};


union i_control {
    uint32_t val;
    struct {
        uint32_t interface_enable                                      : 1;
        uint32_t i_control_initiate_full_interface_reset               : 1;
        uint32_t i_control_initiate_warm_interface_reset               : 1;
        uint32_t link_rfc_packet_dis_able                              : 1;
        uint32_t i_control_initiate_peer_c_reset                       : 1;
        uint32_t i_control_initiate_peer_c_up_transition               : 1;
        uint32_t i_control_initiate_peer_attribute_request             : 1;
        uint32_t interface_access_key_validation_enable                : 1;
        uint32_t i_control_transition_i_lp                             : 1;
        uint32_t i_control_auto_stop                                   : 1;
        uint32_t i_control_initiate_path_time_request                  : 1;
        uint32_t i_control_force_physical_layer_abstraction_retraining : 1; //FIXME: name too long.
        uint32_t i_control_initiate_l_lp_transition                    : 3;
        uint32_t i_control_initiate_l_up_lp_transition                 : 3;
        uint32_t i_control_initiate_peer_set_attribute_request         : 1;
        uint32_t i_control_ingress_dr_enable                           : 1;
        uint32_t i_control_initiate_peer_initiate_phy_retraining       : 1;
        uint32_t i_control_initiate_peer_warm_interface_reset          : 1;
        uint32_t reserved                                              : 10;
//uint64_t padding                                               : 0;
    };
};


union i_cap_1 {
    uint32_t val;
    struct {
        uint32_t interface_containment_support                     : 1;
        uint32_t inte_rface_error_fields_support                   : 1;
        uint32_t in_terface_error_logging_support                  : 1;
        uint32_t tr_ansient_error_threshold_support                : 1;
        uint32_t i_error_fault_injection_support                   : 1;
        uint32_t lprt_wildcard_packet_relay_support                : 1;
        uint32_t mprt_wildcard_packet_relay_support                : 1;
        uint32_t interface_loopback_support                        : 1;
        uint32_t i_cap_1_implicit_flow_control_support             : 1;
        uint32_t i_cap_1_explicit_flow_control_support             : 1;
        uint32_t p2p_core_support                                  : 1;
        uint32_t p2p_coherency_support                             : 1;
        uint32_t p2p_vendor_defined_support                        : 1;
        uint32_t daisy_chain_support                               : 1;
        uint32_t explicit_opclass_support                          : 1;
        uint32_t rsvdz                                             : 1;
        uint32_t i_cap_1_packet_relay_access_key_field_provisioned : 1;
        uint32_t interface_access_key_validation_support           : 1;
        uint32_t link_level_reliability_llr_support                : 1;
        uint32_t tr_interface_support                              : 1;
        uint32_t source_cid_packet_validation_support              : 1;
        uint32_t source_sid_packet_validation_support              : 1;
        uint32_t adaptive_fc_credit_support                        : 1;
        uint32_t pco_communications_support                        : 1;
        uint32_t i_cap_1_aggregated_interface_support              : 1;
        uint32_t i_cap_1_aggregated_interface_role                 : 1;
        uint32_t peer_nonce_validation_support                     : 1;
        uint32_t i_cap_1_p2p_standalone_acknowledgment_required    : 1;
        uint32_t interface_group_support                           : 1;
        uint32_t i_cap_1_requires_interface_group_single_opclass   : 1;
        uint32_t point_to_point_backup_support                     : 1;
        uint64_t padding                                           : 1;
    };
};


union i_cap_1_control {
    uint32_t val;
    struct {
        uint32_t i_cap_1_control_interface_containment_control          : 1;
        uint32_t t_ransient_error_threshold_enable                      : 1;
        uint32_t i_error_fault_injection_enable                         : 1;
        uint32_t wildcard_packet_relay_enable                           : 1;
        uint32_t interface_loopback_enable                              : 1;
        uint32_t i_cap_1_control_flow_control_type                      : 1;
        uint32_t i_cap_1_control_opclass_select                         : 3;
        uint32_t control_opclass_packet_filtering_enable                : 1;
        uint32_t unreliable_control_write_msg_packet_filtering_enable   : 1; //FIXME: name too long.
        uint32_t lprt_enable                                            : 1;
        uint32_t mprt_enable                                            : 1;
        uint32_t i_cap_1_control_daisy_chain_peer_interface_configured  : 1; //FIXME: name too long.
        uint32_t i_cap_1_control_link_level_reliability_llr_crc_trigger : 1; //FIXME: name too long.
        uint32_t source_cid_packet_validation_enable                    : 1;
        uint32_t source_sid_packet_validation_enable                    : 1;
        uint32_t i_cap_1_control_peer_cid_configured                    : 1;
        uint32_t i_cap_1_control_peer_sid_configured                    : 1;
        uint32_t adaptive_fc_credit_enable                              : 1;
        uint32_t i_cap_1_control_omit_p2p_standalone_acknowledgment     : 1;
        uint32_t interface_component_containment_enable                 : 1;
        uint32_t peer_nonce_validation_enable                           : 1;
        uint32_t pcie_compatible_ordering_pco_communications_enable     : 1;
        uint32_t link_level_reliability_llr_enable                      : 1;
        uint32_t i_cap_1_control_aggregated_interface_control           : 2;
        uint32_t tr_cid_valid                                           : 1;
        uint32_t precision_time_enable                                  : 1;
        uint32_t reserved                                               : 3;
//uint64_t padding                                                : 0;
    };
};


union i_cap_2 {
    uint32_t val;
    struct {
        uint32_t i_cap_2_transient_error_history_size : 3;
        uint32_t reserved                             : 29;
//uint64_t padding                              : 0;
    };
};


union i_cap_2_control {
    uint32_t val;
    struct {
        uint32_t software_defined_i_bit_0 : 1;
        uint32_t software_defined_i_bit_1 : 1;
        uint32_t rsvdp                    : 30;
//uint64_t padding                  : 0;
    };
};


union i_error_status {
    uint16_t val;
    struct {
        uint16_t excessive_physical_layer_retraining_events_recorded : 1; //FIXME: name too long.
        uint16_t non_transient_link_error_recorded                   : 1;
        uint16_t interface_containment_recorded                      : 1;
        uint16_t interface_access_key_violation_recorded             : 1;
        uint16_t interface_fc_fwd_progress_violation_recorded        : 1;
        uint16_t unexpected_physical_layer_failure                   : 1;
        uint16_t unexpected_degraded_link_performance_recorded       : 1;
        uint16_t interface_ae_recorded                               : 1;
        uint16_t switch_packet_relay_failure_recorded                : 1;
        uint16_t rsvdz                                               : 7;
//uint64_t padding                                             : 0;
    };
};


union i_error_detect {
    uint16_t val;
    struct {
        uint16_t excessive_physical_layer_retraining_events_detect : 1;
        uint16_t non_transient_link_error_detect                   : 1;
        uint16_t interface_containment_detect                      : 1;
        uint16_t interface_access_key_violation_detect             : 1;
        uint16_t interface_fc_fwd_progress_violation_detect        : 1;
        uint16_t unexpected_physical_layer_failure                 : 1;
        uint16_t unexpected_degraded_link_performance_detect       : 1;
        uint16_t interface_ae_detect                               : 1;
        uint16_t switch_packet_relay_failure_detect                : 1;
        uint16_t rsvdp                                             : 7;
//uint64_t padding                                           : 0;
    };
};


union i_error_fault_injection {
    uint16_t val;
    struct {
        uint16_t test_excessive_physical_layer_retraining_events_error : 1; //FIXME: name too long.
        uint16_t test_non_transient_link_error                         : 1;
        uint16_t test_interface_containment                            : 1;
        uint16_t test_interface_access_key_violation_error             : 1;
        uint16_t test_interface_fc_fwd_progress_violation_error        : 1;
        uint16_t test_unexpected_physical_layer_failure                : 1;
        uint16_t test_unexpected_degraded_link_performance             : 1;
        uint16_t test_interface_ae                                     : 1;
        uint16_t test_switch_packet_relay_failure                      : 1;
        uint16_t rsvdp                                                 : 7;
//uint64_t padding                                               : 0;
    };
};


union i_error_trigger {
    uint16_t val;
    struct {
        uint16_t excessive_physical_layer_retraining_events_trigger : 1;
        uint16_t non_transient_link_error_trigger                   : 1;
        uint16_t interface_containment_trigger                      : 1;
        uint16_t interface_access_key_violation_trigger             : 1;
        uint16_t interface_fc_fwd_progress_violation_trigger        : 1;
        uint16_t unexpected_physical_layer_failure                  : 1;
        uint16_t unexpected_degraded_link_performance_trigger       : 1;
        uint16_t interface_ae_trigger                               : 1;
        uint16_t switch_packet_relay_failure_trigger                : 1;
        uint16_t rsvdp                                              : 7;
//uint64_t padding                                            : 0;
    };
};


union peer_state {
    uint32_t val;
    struct {
        uint32_t peer_state_peer_component_c_state                    : 3;
        uint32_t peer_state_peer_component_manager_type               : 1;
        uint32_t peer_cid_valid                                       : 1;
        uint32_t peer_sid_valid                                       : 1;
        uint32_t peer_interface_id_valid                              : 1;
        uint32_t peer_interface_p2p_core_opclass_support              : 1;
        uint32_t peer_interface_p2p_coherency_opclass_support         : 1;
        uint32_t peer_interface_p2p_vendor_defined_opclass_support    : 1;
        uint32_t peer_interface_explicit_opclass_support              : 1;
        uint32_t peer_state_peer_component_multiple_cid_configuration : 1; //FIXME: name too long.
        uint32_t peer_out_of_band_management_support                  : 1;
        uint32_t peer_component_home_agent_support                    : 1;
        uint32_t peer_component_caching_agent_support                 : 1;
        uint32_t peer_state_peer_interface_flow_control_support       : 2;
        uint32_t peer_base_c_class_valid                              : 1;
        uint32_t peer_in_band_management_support                      : 1;
        uint32_t peer_uniform_opclass_support                         : 1;
        uint32_t peer_link_level_reliability_llr_support              : 1;
        uint32_t rsvdp                                                : 11;
//uint64_t padding                                              : 0;
    };
};


union link_ctl_control {
    uint32_t val;
    struct {
        uint32_t transmit_peer_initiate_phy_retraining_enable                : 1;
        uint32_t receive_peer_initiate_phy_retraining_enable                 : 1;
        uint32_t transmit_peer_c_up_enable                                   : 1;
        uint32_t receive_peer_c_up_enable                                    : 1;
        uint32_t transmit_peer_c_reset_enable                                : 1;
        uint32_t receive_peer_c_reset_enable                                 : 1;
        uint32_t transmit_enter_link_up_lp_enable                            : 1;
        uint32_t receive_enter_link_up_lp_enable                             : 1;
        uint32_t transmit_enter_link_lp_enable                               : 1;
        uint32_t receive_enter_link_lp_enable                                : 1;
        uint32_t link_ctl_control_transmit_peer_warm_interface_reset_disable : 1; //FIXME: name too long.
        uint32_t link_ctl_control_receive_peer_warm_interface_reset_disable  : 1; //FIXME: name too long.
        uint32_t transmit_link_reset_event_enable                            : 1;
        uint32_t receive_link_reset_event_enable                             : 1;
        uint32_t link_ctl_control_transmit_peer_set_attribute_disable        : 1; //FIXME: name too long.
        uint32_t link_ctl_control_receive_peer_set_attribute_disable         : 1; //FIXME: name too long.
        uint32_t rsvdp                                                       : 16;
//uint64_t padding                                                     : 0;
    };
};


union phy_status {
    uint32_t val;
    struct {
        uint32_t phy_status_physical_layer_operational_status          : 4;
        uint32_t phy_status_previous_physical_layer_operational_status : 4; //FIXME: name too long.
        uint32_t phy_status_physical_layer_training_status             : 2;
        uint32_t phy_status_physical_layer_retraining_status           : 2;
        uint32_t phy_status_phy_tx_link_width_reduced                  : 1;
        uint32_t phy_status_phy_rx_link_width_reduced                  : 1;
        uint32_t phy_status_phy_tx_error_detected                      : 1;
        uint32_t phy_status_phy_rx_error_detected                      : 1;
        uint32_t rsvdz                                                 : 16;
//uint64_t padding                                               : 0;
    };
};


union phy_control {
    uint32_t val;
    struct {
        uint32_t phy_control_enable_physical_layer                                                                                                      : 1;
        uint32_t phy_control_disable_physical_layer                                                                                                     : 1;
        uint32_t phy_control_disable_physical_layer_auto_retraining_prevents_physical_layer_from_autonomously_retraining_based_on_physical_layer_errors : 1; //FIXME: name too long.
        uint32_t phy_control_exit_low_power_state                                                                                                       : 1;
        uint32_t phy_control_clear_phy_events                                                                                                           : 1;
        uint32_t phy_control_physical_layer_retraining_level                                                                                            : 2;
        uint32_t phy_control_force_physical_layer_retrain_i_ng                                                                                          : 1;
        uint32_t rsvdp                                                                                                                                  : 24;
//uint64_t padding                                                                                                                                : 0;
    };
};


union phy_cap_1 {
    uint32_t val;
    struct {
        uint32_t phy_cap_1_default_phy                                                                                                     : 1;
        uint32_t auto_train_support                                                                                                        : 1;
        uint32_t level_1_retrain_support                                                                                                   : 1;
        uint32_t level_2_retrain_support                                                                                                   : 1;
        uint32_t level_3_retrain_support                                                                                                   : 1;
        uint32_t level_4_retrain_support                                                                                                   : 1;
        uint32_t retrain_level_1_worst_case_maximum_time_to_execute_physical_layer_retraining_see_phy_worst_case_retraining_time_encodings : 4; //FIXME: name too long.
        uint32_t retrain_level_2_worst_case_maximum_time_to_execute_physical_layer_retraining_see_phy_worst_case_retraining_time_encodings : 4; //FIXME: name too long.
        uint32_t retrain_level_3_worst_case_maximum_time_to_execute_physical_layer_retraining_see_phy_worst_case_retraining_time_encodings : 4; //FIXME: name too long.
        uint32_t retrain_level_4_worst_case_maximum_time_to_execute_physical_layer_retraining_see_phy_worst_case_retraining_time_encodings : 4; //FIXME: name too long.
        uint32_t reserved                                                                                                                  : 10;
//uint64_t padding                                                                                                                   : 0;
    };
};


union phy_cap_1_control {
    uint32_t val;
    struct {
        uint32_t phy_cap_1_control_phit_encoding_enable       : 1;
        uint32_t extended_feature_enable                      : 1;
        uint32_t phy_cap_1_control_interface_aggregation_type : 4;
        uint32_t reserved                                     : 26;
//uint64_t padding                                      : 0;
    };
};


union phy_events {
    uint32_t val;
    struct {
        uint32_t phy_low_power_events  : 16;
        uint32_t phy_retraining_events : 16;
//uint64_t padding               : 0;
    };
};


union phy_lane_status {
    uint32_t val;
    struct {
        uint32_t phy_lane_status_phy_tx_link_width_reduced : 1;
        uint32_t phy_lane_status_phy_rx_link_width_reduced : 1;
        uint32_t phy_lane_status_asymmetric_lane_status    : 2;
        uint32_t t_x_reversal_status                       : 1;
        uint32_t r_x_reversal_status                       : 1;
        uint32_t reserved                                  : 2;
        uint32_t t_x_num_lanes                             : 12;
        uint32_t r_x_num_lanes                             : 12;
//uint64_t padding                                   : 0;
    };
};


union phy_lane_control {
    uint32_t val;
    struct {
        uint32_t phy_lane_control_enable_lane_asymmetry                                                                                         : 2;
        uint32_t phy_lane_control_enable_t_x_reversal_if_the_interface_does_not_support_lane_reversal_then_this_field_shall_be_hardwired_to_0x0 : 2; //FIXME: name too long.
        uint32_t phy_lane_control_enable_r_x_reversal_if_the_interface_does_not_support_lane_reversal_then_this_field_shall_be_hardwired_to_0x0 : 2; //FIXME: name too long.
        uint32_t rsvdp                                                                                                                          : 2;
        uint32_t tx_lane_enable                                                                                                                 : 12;
        uint32_t rx_lane_enable                                                                                                                 : 12;
//uint64_t padding                                                                                                                        : 0;
    };
};


union phy_lane_cap {
    uint32_t val;
    struct {
        uint32_t phy_lane_cap_asymmetric_lane_support   : 2;
        uint32_t phy_lane_cap_reversal_support          : 3;
        uint32_t asymmetric_lane_with_reversal_s_upport : 1;
        uint32_t reserved                               : 2;
        uint32_t t_x_lane_support                       : 12;
        uint32_t r_x_lane_support                       : 12;
//uint64_t padding                                : 0;
    };
};


union phy_remote_lane_cap {
    uint32_t val;
    struct {
        uint32_t phy_remote_lane_cap_remote_asymmetric_lane_support : 2;
        uint32_t phy_remote_lane_cap_remote_reversal_support        : 3;
        uint32_t remote_asymmetric_lane_with_reversal_support       : 1;
        uint32_t reserved                                           : 2;
        uint32_t remote_tx_lane_enable                              : 12;
        uint32_t remote_rx_lane_enable                              : 12;
//uint64_t padding                                            : 0;
    };
};


union phy_lp_control {
    uint32_t val;
    struct {
        uint32_t phy_lp_1_state_enable : 1;
        uint32_t phy_lp_2_state_enable : 1;
        uint32_t phy_lp_3_state_enable : 1;
        uint32_t phy_lp_4_state_enable : 1;
        uint32_t rsvdp                 : 28;
//uint64_t padding               : 0;
    };
};


union phy_lp_timing_cap {
    uint32_t val;
    struct {
        uint32_t entry_latency_from_phy_up_to_phy_lp1 : 4;
        uint32_t exit_latency_from_phy_lp1_to_phy_up  : 4;
        uint32_t entry_latency_from_phy_up_to_phy_lp2 : 4;
        uint32_t exit_latency_from_phy_lp2_to_phy_up  : 4;
        uint32_t entry_latency_from_phy_up_to_phy_lp3 : 4;
        uint32_t exit_latency_from_phy_lp3_to_phy_up  : 4;
        uint32_t entry_latency_from_phy_up_to_phy_lp4 : 4;
        uint32_t exit_latency_from_phy_lp4_to_phy_up  : 4;
//uint64_t padding                              : 0;
    };
};


union phy_lp_cap {
    uint32_t val;
    struct {
        uint32_t phy_lp_1_support  : 1;
        uint32_t phy_lp_2_support  : 1;
        uint32_t phy_lp_3_s_upport : 1;
        uint32_t phy_lp_4_support  : 1;
        uint32_t rsvdp             : 28;
//uint64_t padding           : 0;
    };
};


union phy_remote_lp_cap {
    uint32_t val;
    struct {
        uint32_t phy_lp_1_support : 1;
        uint32_t phy_lp_2_support : 1;
        uint32_t phy_lp_3_support : 1;
        uint32_t phy_lp_4_support : 1;
        uint32_t rsvdp            : 28;
//uint64_t padding          : 0;
    };
};


union phy_up_lp_control {
    uint32_t val;
    struct {
        uint32_t phy_up_lp_1_state_enable  : 1;
        uint32_t phy_up_lp_2_state_enable  : 1;
        uint32_t phy_up_lp_3_st_ate_enable : 1;
        uint32_t phy_up_lp_4_state_enable  : 1;
        uint32_t rsvdp                     : 28;
//uint64_t padding                   : 0;
    };
};


union phy_up_lp_timing_cap {
    uint32_t val;
    struct {
        uint32_t entry_latency_from_phy_up_to_phy_up_lp1 : 4;
        uint32_t exit_latency_from_phy_up_lp1_to_phy_up  : 4;
        uint32_t entry_latency_from_phy_up_to_phy_up_lp2 : 4;
        uint32_t exit_latency_from_phy_up_lp2_to_phy_up  : 4;
        uint32_t entry_latency_from_phy_up_to_phy_up_lp3 : 4;
        uint32_t exit_latency_from_phy_up_lp3_to_phy_up  : 4;
        uint32_t entry_latency_from_phy_up_to_phy_up_lp4 : 4;
        uint32_t exit_latency_from_phy_up_lp4_to_phy_up  : 4;
//uint64_t padding                                 : 0;
    };
};


union phy_up_lp_cap {
    uint32_t val;
    struct {
        uint32_t phy_up_lp_1_support : 1;
        uint32_t phy_up_lp_2_support : 1;
        uint32_t phy_up_lp_3_support : 1;
        uint32_t phy_up_lp_4_support : 1;
        uint32_t reserved            : 28;
//uint64_t padding             : 0;
    };
};


union phy_remote_up_lp_cap {
    uint32_t val;
    struct {
        uint32_t phy_up_lp_1_supp_ort : 1;
        uint32_t phy_up_lp_2_support  : 1;
        uint32_t phy_up_lp_3_support  : 1;
        uint32_t phy_up_lp_4_support  : 1;
        uint32_t reserved             : 28;
//uint64_t padding              : 0;
    };
};


union i_stat_cap_1 {
    uint16_t val;
    struct {
        uint16_t i_stat_cap_1_provisioned_statistics_fields : 2;
        uint16_t i_stat_cap_1_maximum_snapshot_time         : 2;
        uint16_t rsvdp                                      : 12;
//uint64_t padding                                    : 0;
    };
};


union i_stat_control {
    uint8_t val;
    struct {
        uint8_t s_tatistics_gathering_enable                          : 1;
        uint8_t i_stat_control_reset_all_statistics                   : 1;
        uint8_t i_stat_control_initiate_interface_statistics_snapshot : 1; //FIXME: name too long.
        uint8_t rsvdp                                                 : 5;
//uint64_t padding                                              : 0;
    };
};


union i_stat_status {
    uint8_t val;
    struct {
        uint8_t i_stat_status_interface_statistics_reset_status : 1;
        uint8_t i_stat_status_snapshot_status                   : 1;
        uint8_t rsvdz                                           : 6;
//uint64_t padding                                        : 0;
    };
};


union e_control {
    uint16_t val;
    struct {
        uint16_t e_control_error_enablement                       : 3;
        uint16_t trigger_component_containment                    : 1;
        uint16_t e_control_error_logging_level                    : 3;
        uint16_t e_control_error_uep_target                       : 2;
        uint16_t e_control_event_uep_target                       : 2;
        uint16_t e_control_mech_uep_target                        : 2;
        uint16_t e_control_media_uep_target                       : 2;
        uint16_t error_fault_injection_and_event_injection_enable : 1;
//uint64_t padding                                          : 0;
    };
};


union e_status {
    uint16_t val;
    struct {
        uint16_t logging_failed                : 1;
        uint16_t containment_log_entry_consume : 1;
        uint16_t rsvdz                         : 14;
//uint64_t padding                       : 0;
    };
};


union error_signal_cap_1 {
    uint16_t val;
    struct {
        uint16_t signal_interrupt_address_0_support : 1;
        uint16_t signal_interrupt_address_1_support : 1;
        uint16_t c_event_detect_support             : 1;
        uint16_t c_event_injection_support          : 1;
        uint16_t i_event_detect_support             : 1;
        uint16_t i_event_injection_support          : 1;
        uint16_t rsvdz                              : 10;
//uint64_t padding                            : 0;
    };
};


union error_signal_cap_1_control {
    uint16_t val;
    struct {
        uint16_t signal_interrupt_0_enable : 1;
        uint16_t signal_interrupt_1_enable : 1;
        uint16_t c_event_injection_enable  : 1;
        uint16_t i_event_injection_enable  : 1;
        uint16_t rsvdp                     : 12;
//uint64_t padding                   : 0;
    };
};


union c_error_status {
    uint64_t val;
    struct {
        uint64_t component_containment_recorded                                     : 1;
        uint64_t non_fatal_internal_component_error_recorded                        : 1;
        uint64_t fatal_internal_component_error_recorded                            : 1;
        uint64_t end_to_end_unicast_ur_recorded                                     : 1;
        uint64_t end_to_end_unicast_mp_recorded                                     : 1;
        uint64_t end_to_end_unicast_packet_execution_error_exe_non_fatal_recorded   : 1; //FIXME: name too long.
        uint64_t end_to_end_unicast_packet_execution_error_exe_fatal_recorded       : 1; //FIXME: name too long.
        uint64_t end_to_end_unicast_up_recorded                                     : 1;
        uint64_t ae_invalid_access_key_recorded                                     : 1;
        uint64_t ae_invalid_access_permission_recorded                              : 1;
        uint64_t switch_router_up_recorded                                          : 1;
        uint64_t end_to_end_packet_retry_error_recorded                             : 1;
        uint64_t fatal_media_error_containment_triggered_recorded                   : 1;
        uint64_t security_error_recorded                                            : 1;
        uint64_t end_to_end_multicast_ur_recorded                                   : 1;
        uint64_t end_to_end_multicast_mp_recorded                                   : 1;
        uint64_t end_to_end_multicast_packet_execution_error_exe_non_fatal_recorded : 1; //FIXME: name too long.
        uint64_t end_to_end_multicast_packet_execution_error_exe_fatal_recorded     : 1; //FIXME: name too long.
        uint64_t end_to_end_multicast_up_recorded                                   : 1;
        uint64_t sod_up_recorded                                                    : 1;
        uint64_t unexpected_component_power_loss_recorded                           : 1;
        uint64_t rsvdz                                                              : 39;
        uint64_t vendor_defined_error_status_bits                                   : 4;
//uint64_t padding                                                            : 0;
    };
};


union c_error_detect {
    uint64_t val;
    struct {
        uint64_t component_containment_detect                                     : 1;
        uint64_t non_fatal_internal_component_error_detect                        : 1;
        uint64_t fatal_internal_component_error_detect                            : 1;
        uint64_t end_to_end_unicast_ur_detect                                     : 1;
        uint64_t end_to_end_unicast_mp_detect                                     : 1;
        uint64_t end_to_end_unicast_packet_execution_error_exe_non_fatal_detect   : 1; //FIXME: name too long.
        uint64_t end_to_end_unicast_packet_execution_error_exe_fatal_detect       : 1; //FIXME: name too long.
        uint64_t end_to_end_unicast_up_detect                                     : 1;
        uint64_t ae_invalid_access_key_detect                                     : 1;
        uint64_t ae_invalid_access_permission_detect                              : 1;
        uint64_t switch_router_up_detect                                          : 1;
        uint64_t end_to_end_packet_retry_error_detect                             : 1;
        uint64_t fatal_media_error_containment_triggered_detect                   : 1;
        uint64_t security_error_detect                                            : 1;
        uint64_t end_to_end_multicast_ur_detect                                   : 1;
        uint64_t end_to_end_multicast_mp_detect                                   : 1;
        uint64_t end_to_end_multicast_packet_execution_error_exe_non_fatal_detect : 1; //FIXME: name too long.
        uint64_t end_to_end_multicast_packet_execution_error_exe_fatal_detect     : 1; //FIXME: name too long.
        uint64_t end_to_end_multicast_up_detect                                   : 1;
        uint64_t sod_up_detect                                                    : 1;
        uint64_t unexpected_component_power_loss_detect                           : 1;
        uint64_t rsvdz                                                            : 39;
        uint64_t vendor_defined_error_detect_bits                                 : 4;
//uint64_t padding                                                          : 0;
    };
};


union c_error_trigger {
    uint64_t val;
    struct {
        uint64_t component_containment_trigger                                     : 1;
        uint64_t non_fatal_internal_component_error_trigger                        : 1;
        uint64_t fatal_internal_component_error_trigger                            : 1;
        uint64_t end_to_end_unicast_ur_trigger                                     : 1;
        uint64_t end_to_end_unicast_mp_trigger                                     : 1;
        uint64_t end_to_end_unicast_packet_execution_error_exe_non_fatal_trigger   : 1; //FIXME: name too long.
        uint64_t end_to_end_unicast_packet_execution_error_exe_fatal_trigger       : 1; //FIXME: name too long.
        uint64_t end_to_end_unicast_up_trigger                                     : 1;
        uint64_t ae_invalid_access_key_trigger                                     : 1;
        uint64_t ae_invalid_access_permission_trigger                              : 1;
        uint64_t switch_router_unexpected_packet_up_trigger                        : 1;
        uint64_t end_to_end_packet_retry_error_trigger                             : 1;
        uint64_t fatal_media_error_containment_trigger                             : 1;
        uint64_t security_error_trigger                                            : 1;
        uint64_t end_to_end_multicast_ur_trigger                                   : 1;
        uint64_t end_to_end_multicast_mp_trigger                                   : 1;
        uint64_t end_to_end_multicast_packet_execution_error_exe_non_fatal_trigger : 1; //FIXME: name too long.
        uint64_t end_to_end_multicast_packet_execution_error_exe_fatal_trigger     : 1; //FIXME: name too long.
        uint64_t end_to_end_multicast_up_trigger                                   : 1;
        uint64_t sod_up_trigger                                                    : 1;
        uint64_t unexpected_component_power_loss_trigger                           : 1;
        uint64_t reserved                                                          : 39;
        uint64_t vendor_defined_error_trigger_bits                                 : 4;
//uint64_t padding                                                           : 0;
    };
};


union c_event_detect {
    uint64_t val;
    struct {
        uint64_t bist_failure_event_detect                                            : 1;
        uint64_t unable_to_c_ommunicate_with_an_a_uthorized_d_estination_event_detect : 1; //FIXME: name too long.
        uint64_t excessive_rnr_nak_r_esponses_event_detect                            : 1;
        uint64_t peer_component_c_dlp_exit_event_detect                               : 1;
        uint64_t component_thermal_shutdown_event_detect                              : 1;
        uint64_t possible_malicious_packet_event_detect                               : 1;
        uint64_t invalid_component_image_event_detect                                 : 1;
        uint64_t c_lp_entry_event_detect                                              : 1;
        uint64_t c_lp_exit_event_detect                                               : 1;
        uint64_t c_dlp_entry_event_detect_inform_management_prior_to_c_dlp_entry      : 1; //FIXME: name too long.
        uint64_t c_dlp_exit_event_detect                                              : 1;
        uint64_t peer_component_c_dlp_entry_event_detect                              : 1;
        uint64_t emergency_power_reduction_triggered_event_detect                     : 1;
        uint64_t fatal_media_error_containment_triggered_event_detect                 : 1; //FIXME: name too long.
        uint64_t component_power_off_transition_completed_event_detect                : 1; //FIXME: name too long.
        uint64_t component_power_restoration_event_detect                             : 1;
        uint64_t primary_media_maintenance_required_event_detect                      : 1;
        uint64_t primary_media_maintenance_override_event_detect                      : 1;
        uint64_t secondary_media_maintenance_required_event_detect                    : 1;
        uint64_t secondary_media_maintenance_override_event_detect                    : 1;
        uint64_t component_thermal_throttle_event_detect                              : 1;
        uint64_t component_thermal_throttle_restoration_event_detect                  : 1; //FIXME: name too long.
        uint64_t p2p_opclass_non_transient_operating_condition_detect                 : 1; //FIXME: name too long.
        uint64_t peer_component_c_lp_entry_event_detect                               : 1;
        uint64_t peer_component_c_lp_exit_event_detect                                : 1;
        uint64_t reserved                                                             : 35;
        uint64_t vendor_defined_event_detect                                          : 4;
//uint64_t padding                                                              : 0;
    };
};


union i_event_detect {
    uint64_t val;
    struct {
        uint64_t full_interface_reset_event                                                                               : 1;
        uint64_t warm_interface_reset_event                                                                               : 1;
        uint64_t new_peer_component_detected_event_link_rfc_packet_r_eceived_out_of_band_signal_or_event_notification_etc : 1; //FIXME: name too long.
        uint64_t exceeded_transient_error_threshold_event_see_interface_structure                                         : 1; //FIXME: name too long.
        uint64_t active_link_failure_event_see_interface_structure                                                        : 1;
        uint64_t interface_performance_degradation_event                                                                  : 1;
        uint64_t interface_service_performance_degradation_event                                                          : 1;
        uint64_t rsvdp                                                                                                    : 53;
        uint64_t vendor_defined_i_event                                                                                   : 4;
//uint64_t padding                                                                                                  : 0;
    };
};


union i_event_injection {
    uint64_t val;
    struct {
        uint64_t inject_full_interface_reset_event                          : 1;
        uint64_t inject_warm_interface_reset_event                          : 1;
        uint64_t inject_new_peer_component_detected_event                   : 1;
        uint64_t inject_exceeded_transient_error_threshold_event            : 1;
        uint64_t inject_active_link_failure_event                           : 1;
        uint64_t inject_interface_performance_degradation_event             : 1;
        uint64_t inject_interface_service_performance_degradation_event     : 1; //FIXME: name too long.
        uint64_t rsvdp                                                      : 1;
        uint64_t inject_vendor_defined_i_event                              : 1;
        uint64_t inject_the_vendor_defined_i_event_associated_with_this_bit : 1; //FIXME: name too long.
        uint64_t padding                                                    : 54;
    };
};


union component_media_control {
    uint32_t val;
    struct {
        uint32_t component_media_control_terminate_se_operation               : 1;
        uint32_t component_media_control_primary_media_maintenance_disable    : 1; //FIXME: name too long.
        uint32_t component_media_control_secondary_media_maintenance_disable  : 1; //FIXME: name too long.
        uint32_t component_media_control_initiate_primary_media_maintenance   : 1; //FIXME: name too long.
        uint32_t component_media_control_initiate_secondary_media_maintenance : 1; //FIXME: name too long.
        uint32_t media_fault_injection_enable                                 : 1;
        uint32_t component_media_control_primary_se_initialization            : 4;
        uint32_t component_media_control_secondary_se_initialization          : 4; //FIXME: name too long.
        uint32_t rsvdp                                                        : 17;
        uint64_t padding                                                      : 1;
    };
};


union primary_media_status {
    uint64_t val;
    struct {
        uint64_t primary_media_uninitialized                          : 1;
        uint64_t primary_media_initialization_in_progress             : 1;
        uint64_t primary_media_initialization_failed                  : 1;
        uint64_t primary_media_initialization_succeeded               : 1;
        uint64_t primary_fatal_media_error_containment                : 1;
        uint64_t primary_media_patrol_scrubbing_in_progress           : 1;
        uint64_t primary_media_patrol_scrubbing_completed             : 1;
        uint64_t primary_media_demand_scrubbing_in_progress           : 1;
        uint64_t primary_media_maintenance_in_progress                : 1;
        uint64_t primary_media_maintenance_completed                  : 1;
        uint64_t primary_media_maintenance_partial_completion         : 1;
        uint64_t primary_media_maintenance_required                   : 1;
        uint64_t primary_media_maintenance_override                   : 1;
        uint64_t primary_media_deallocate_primary_range_in_progress   : 1;
        uint64_t primary_media_deallocate_primary_range_succeeded     : 1;
        uint64_t primary_media_deallocate_primary_range_failed        : 1;
        uint64_t primary_media_logging_failed                         : 1;
        uint64_t primary_media_row_remapping_in_progress              : 1;
        uint64_t primary_media_row_remapping_succeeded                : 1;
        uint64_t primary_media_row_remapping_failed                   : 1;
        uint64_t primary_media_reached_90_spare_row_consumption       : 1;
        uint64_t primary_media_reached_100_spare_row_consumption      : 1;
        uint64_t primary_media_device_sparing_in_progress             : 1;
        uint64_t primary_media_device_sparing_succeeded               : 1;
        uint64_t primary_media_device_sparing_failed                  : 1;
        uint64_t primary_media_current_number_of_spare_memory_devices : 4; //FIXME: name too long.
        uint64_t primary_media_se_in_progress                         : 1;
        uint64_t primary_media_se_succeeded                           : 1;
        uint64_t primary_media_se_failed                              : 1;
        uint64_t primary_media_read_endurance_r_eached_10             : 1;
        uint64_t primary_media_read_endurance_r_eached_0              : 1;
        uint64_t primary_media_read_endurance_notification_event      : 1;
        uint64_t primary_media_write_endurance_r_eached_10            : 1;
        uint64_t primary_media_write_endurance_r_eached_0             : 1;
        uint64_t primary_media_write_endurance_notification_event     : 1;
        uint64_t factory_default_success                              : 1;
        uint64_t factory_default_error                                : 1;
        uint64_t factory_default_abort_success                        : 1;
        uint64_t factory_default_abort_error                          : 1;
        uint64_t factory_default_in_progress                          : 1;
        uint64_t media_controller_error                               : 1;
        uint64_t voltage_regulator_failed                             : 1;
        uint64_t rsvdz                                                : 16;
        uint64_t padding                                              : 3;
    };
};


union secondary_media_status {
    uint64_t val;
    struct {
        uint64_t secondary_media_uninitialized                          : 1;
        uint64_t secondary_media_initialization_in_progress             : 1;
        uint64_t secondary_media_initialization_failed                  : 1;
        uint64_t secondary_media_initialization_succeeded               : 1;
        uint64_t secondary_fatal_media_error_containment                : 1;
        uint64_t secondary_media_patrol_scrubbing_in_progress           : 1;
        uint64_t secondary_media_patrol_scrubbing_completed             : 1;
        uint64_t secondary_media_demand_scrubbing_in_progress           : 1;
        uint64_t secondary_media_maintenance_in_progress                : 1;
        uint64_t secondary_media_maintenance_completed                  : 1;
        uint64_t secondary_media_maintenance_partial_completion         : 1;
        uint64_t secondary_media_maintenance_required                   : 1;
        uint64_t secondary_media_maintenance_override                   : 1;
        uint64_t secondary_media_deallocate_secondary_range_in_progress : 1; //FIXME: name too long.
        uint64_t secondary_media_deallocate_secondary_range_succeeded   : 1; //FIXME: name too long.
        uint64_t secondary_media_deallocate_secondary_range_failed      : 1;
        uint64_t secondary_media_logging_failed                         : 1;
        uint64_t secondary_media_row_remapping_in_progress              : 1;
        uint64_t secondary_media_row_remapping_succeeded                : 1;
        uint64_t secondary_media_row_remapping_failed                   : 1;
        uint64_t secondary_media_reached_90_spare_row_consumption       : 1;
        uint64_t secondary_media_reached_100_spare_row_consumption      : 1;
        uint64_t secondary_media_device_sparing_in_progress             : 1;
        uint64_t secondary_media_device_sparing_succeeded               : 1;
        uint64_t secondary_media_device_sparing_failed                  : 1;
        uint64_t secondary_media_current_number_of_spare_memory_devices : 4; //FIXME: name too long.
        uint64_t secondary_media_se_in_progress                         : 1;
        uint64_t secondary_media_se_succeeded                           : 1;
        uint64_t secondary_media_se_failed                              : 1;
        uint64_t secondary_media_read_endurance_r_eached_10             : 1;
        uint64_t secondary_media_read_endurance_r_eached_0              : 1;
        uint64_t secondary_media_read_endurance_notification_event      : 1;
        uint64_t secondary_media_write_endurance_r_eached_10            : 1;
        uint64_t secondary_media_write_endurance_r_eached_0             : 1;
        uint64_t secondary_media_write_endurance_notification_event     : 1;
        uint64_t secondary_media_persistency_lost                       : 1;
        uint64_t media_controller_error                                 : 1;
        uint64_t secondary_media_specific_controller_error              : 1;
        uint64_t secondary_media_error                                  : 1;
        uint64_t rsvdz                                                  : 19;
        uint64_t padding                                                : 3;
    };
};


union primary_media_cap_1_63_0 {
    uint64_t val;
    struct {
        uint64_t primary_read_latency_base                                                           : 7;
        uint64_t primary_write_latency_base                                                          : 7;
        uint64_t primary_media_cap_1_63_0_primary_latency_scale_seconds                              : 4; //FIXME: name too long.
        uint64_t primary_read_endurance_base                                                         : 8;
        uint64_t primary_write_endurance_base                                                        : 8;
        uint64_t primary_media_cap_1_63_0_primary_endurance_scale                                    : 4;
        uint64_t primary_maximum_media_p_ower_l_evel_max_media_power_level_shall_be_a_non_zero_value : 10; //FIXME: name too long.
        uint64_t primary_media_cap_1_63_0_primary_media_power_scale_mpwrs                            : 3; //FIXME: name too long.
        uint64_t primary_media_cap_1_63_0_primary_error_detection_range                              : 4; //FIXME: name too long.
        uint64_t primary_media_cap_1_63_0_primary_correctable_error_threshold                        : 4; //FIXME: name too long.
        uint64_t primary_media_cap_1_63_0_primary_uncorrectable_error_threshold                      : 4; //FIXME: name too long.
        uint64_t primary_media_cap_1_63_0_primary_byte_block_addressing                              : 1; //FIXME: name too long.
//uint64_t padding                                                                             : 0;
    };
};


union primary_media_cap_1_127_64 {
    uint64_t val;
    struct {
        uint64_t primary_demand_scrubbing_support                      : 1;
        uint64_t primary_patrol_scrubbing_support                      : 1;
        uint64_t primary_poison_support                                : 1;
        uint64_t primary_max_error_detection_bits                      : 7;
        uint64_t primary_max_error_corrected_bits                      : 7;
        uint64_t primary_factory_default_support                       : 1;
        uint64_t rsvdz                                                 : 1;
        uint64_t primary_media_fault_injection_support                 : 1;
        uint64_t primary_se_zero_media_support                         : 1;
        uint64_t primary_se_zero_media_range_support                   : 1;
        uint64_t primary_se_cryptographic_key_support                  : 1;
        uint64_t primary_se_overwrite_media_support                    : 1;
        uint64_t primary_se_vendor_defined_support                     : 1;
        uint64_t primary_se_vendor_defined_range_support               : 1;
        uint64_t primary_fatal_media_error_containment_support         : 1;
        uint64_t primary_spare_media_devices                           : 4;
        uint64_t primary_media_cap_1_127_64_primary_row_remapping_size : 4; //FIXME: name too long.
        uint64_t primary_media_cap_1_127_64_primary_media_volatility   : 2; //FIXME: name too long.
        uint64_t padding                                               : 27;
    };
};


union secondary_media_cap_1_63_0 {
    uint64_t val;
    struct {
        uint64_t secondary_read_latency_base                                                                                                      : 7;
        uint64_t secondary_write_latency_base                                                                                                     : 7;
        uint64_t secondary_media_cap_1_63_0_secondary_media_latency_scale_seconds                                                                 : 4; //FIXME: name too long.
        uint64_t secondary_read_endurance_base                                                                                                    : 8;
        uint64_t secondary_write_endurance_base_an_unsigned_integer_used_to_calculate_the_maximum_write_endurance_associated_with_this_media_type : 8; //FIXME: name too long.
        uint64_t secondary_media_cap_1_63_0_secondary_endurance_scale                                                                             : 4; //FIXME: name too long.
        uint64_t secondary_maximum_media_p_ower_l_evel_max_media_power_level_shall_be_a_non_zero_value                                            : 10; //FIXME: name too long.
        uint64_t secondary_media_cap_1_63_0_secondary_media_power_scale_mpwrs                                                                     : 3; //FIXME: name too long.
        uint64_t secondary_media_cap_1_63_0_secondary_error_detection_range                                                                       : 4; //FIXME: name too long.
        uint64_t secondary_media_cap_1_63_0_secondary_correctable_error_threshold                                                                 : 4; //FIXME: name too long.
        uint64_t secondary_media_cap_1_63_0_secondary_uncorrectable_error_threshold                                                               : 4; //FIXME: name too long.
        uint64_t rsvdz                                                                                                                            : 1;
//uint64_t padding                                                                                                                          : 0;
    };
};


union secondary_media_cap_1_127_64 {
    uint64_t val;
    struct {
        uint64_t secondary_demand_scrubbing_support                          : 1;
        uint64_t secondary_patrol_scrubbing_support                          : 1;
        uint64_t secondary_poison_support                                    : 1;
        uint64_t secondary_max_error_detection_bits                          : 7;
        uint64_t secondary_max_error_corrected_bits                          : 7;
        uint64_t secondary_media_cap_1_127_64_secondary_media_addressability : 2; //FIXME: name too long.
        uint64_t secondary_media_fault_injection_support                     : 1;
        uint64_t secondary_se_zero_media_support                             : 1;
        uint64_t secondary_se_zero_media_range_support                       : 1;
        uint64_t secondary_se_cryptographic_key_support                      : 1;
        uint64_t secondary_se_overwrite_media_support                        : 1;
        uint64_t secondary_se_vendor_defined_support                         : 1;
        uint64_t secondary_fatal_media_error_containment_support             : 1;
        uint64_t primary_media_backup_operations_support                     : 1;
        uint64_t rsvdz                                                       : 1;
        uint64_t secondary_media_caching_support                             : 1;
        uint64_t secondary_spare_media_devices                               : 4;
        uint64_t secondary_media_cap_1_127_64_secondary_row_remapping_size   : 4; //FIXME: name too long.
        uint64_t secondary_media_cap_1_127_64_secondary_media_volatility     : 3; //FIXME: name too long.
        uint64_t secondary_media_cap_1_127_64_secondary_media_location       : 1; //FIXME: name too long.
        uint64_t reserved                                                    : 22;
        uint64_t padding                                                     : 1;
    };
};


union primary_media_cap_1_control {
    uint64_t val;
    struct {
        uint64_t primary_correctable_error_reporting_enable                               : 1;
        uint64_t primary_uncorrectable_error_reporting_enable                             : 1;
        uint64_t primary_demand_scrubbing_enable                                          : 1;
        uint64_t primary_patrol_scrubbing_enable                                          : 1;
        uint64_t primary_media_cap_1_control_primary_patrol_scrubbing_frequency           : 4; //FIXME: name too long.
        uint64_t primary_device_sparing_enable                                            : 1;
        uint64_t primary_poison_forwarding_enable                                         : 1;
        uint64_t primary_fault_injection_enable                                           : 1;
        uint64_t primary_media_cap_1_control_primary_error_and_event_notification         : 1; //FIXME: name too long.
        uint64_t primary_media_cap_1_control_primary_management_event_notification        : 2; //FIXME: name too long.
        uint64_t primary_media_cap_1_control_primary_management_event_notification_method : 3; //FIXME: name too long.
        uint64_t primary_initiate_factory_default                                         : 1;
        uint64_t primary_media_cap_1_control_primary_event_logging_level                  : 2; //FIXME: name too long.
        uint64_t primary_media_cap_1_control_initiate_primary_sanitize_and_erase          : 4; //FIXME: name too long.
        uint64_t primary_media_cap_1_control_primary_se_overwrite_media_count             : 3; //FIXME: name too long.
        uint64_t deallocate_primary_range                                                 : 1;
        uint64_t primary_abort_factory_default                                            : 1;
        uint64_t rsvdp                                                                    : 35;
//uint64_t padding                                                                  : 0;
    };
};


union secondary_media_cap_1_control {
    uint64_t val;
    struct {
        uint64_t secondary_correctable_error_reporting_enable                                 : 1;
        uint64_t secondary_uncorrectable_error_reporting_enable                               : 1;
        uint64_t secondary_demand_scrubbing_enable                                            : 1;
        uint64_t secondary_patrol_scrubbing_enable                                            : 1;
        uint64_t secondary_media_cap_1_control_secondary_patrol_scrubbing_frequency           : 4; //FIXME: name too long.
        uint64_t secondary_device_sparing_enable                                              : 1;
        uint64_t secondary_poison_forwarding_enable                                           : 1;
        uint64_t secondary_fault_injection_enable                                             : 1;
        uint64_t secondary_media_cap_1_control_secondary_error_and_event_notification         : 1; //FIXME: name too long.
        uint64_t secondary_media_cap_1_control_secondary_management_event_notification        : 2; //FIXME: name too long.
        uint64_t secondary_media_cap_1_control_secondary_management_event_notification_method : 3; //FIXME: name too long.
        uint64_t secondary_media_cap_1_control_secondary_event_logging_level                  : 2; //FIXME: name too long.
        uint64_t rsvdp                                                                        : 1;
        uint64_t secondary_media_caching_enable                                               : 1;
        uint64_t secondary_media_cap_1_control_initiate_secondary_s_anitize_and_erase         : 4; //FIXME: name too long.
        uint64_t secondary_media_cap_1_control_secondary_se_overwrite_media_count             : 3; //FIXME: name too long.
        uint64_t deallocate_secondary_range                                                   : 1;
        uint64_t padding                                                                      : 35;
    };
};


union primary_media_fault_injection {
    uint64_t val;
    struct {
        uint64_t primary_media_initialization_failed              : 1;
        uint64_t primary_media_initialization_succeeded           : 1;
        uint64_t primary_media_fatal_media_error_containment      : 1;
        uint64_t primary_media_patrol_scrubbing_completed         : 1;
        uint64_t primary_media_patrol_scrubbing_failed            : 1;
        uint64_t primary_media_maintenance_partial_completion     : 1;
        uint64_t primary_media_maintenance_required               : 1;
        uint64_t primary_media_maintenance_override               : 1;
        uint64_t primary_media_deallocate_range_succeeded         : 1;
        uint64_t primary_media_deallocate_range_failed            : 1;
        uint64_t primary_media_row_remapping_succeeded            : 1;
        uint64_t primary_media_row_remapping_failed               : 1;
        uint64_t primary_media_reached_90_spare_row_consumption   : 1;
        uint64_t primary_media_reached_100_spare_row_consumption  : 1;
        uint64_t primary_media_device_sparing_succeeded           : 1;
        uint64_t primary_media_device_sparing_failed              : 1;
        uint64_t primary_media_se_succeeded                       : 1;
        uint64_t primary_media_se_failed                          : 1;
        uint64_t primary_media_read_endurance_reached_10          : 1;
        uint64_t primary_media_read_endurance_reached_0           : 1;
        uint64_t primary_media_read_endurance_notification_event  : 1;
        uint64_t primary_media_write_endurance_reached_10         : 1;
        uint64_t primary_media_write_endurance_reached_0          : 1;
        uint64_t primary_media_write_endurance_notification_event : 1;
        uint64_t primary_media_unstable_insufficient_main_power   : 1;
        uint64_t primary_media_unexpected_main_power_loss         : 1;
        uint64_t primary_media_fatal_media_device_error           : 1;
        uint64_t primary_media_controller_internal_error          : 1;
        uint64_t primary_media_uncorrectable_error_detected       : 1;
        uint64_t primary_media_poison_event                       : 1;
        uint64_t rsvdz                                            : 27;
        uint64_t inject_vendor_defined_event                      : 4;
        uint64_t padding                                          : 3;
    };
};


union secondary_media_fault_injection {
    uint64_t val;
    struct {
        uint64_t secondary_media_initialization_failed              : 1;
        uint64_t secondary_media_initialization_succeeded           : 1;
        uint64_t secondary_media_fatal_media_error_containment      : 1;
        uint64_t secondary_media_patrol_scrubbing_completed         : 1;
        uint64_t secondary_media_patrol_scrubbing_failed            : 1;
        uint64_t secondary_media_maintenance_partial_completion     : 1;
        uint64_t secondary_media_maintenance_required               : 1;
        uint64_t secondary_media_maintenance_override               : 1;
        uint64_t secondary_media_deallocate_range_succeeded         : 1;
        uint64_t secondary_media_deallocate_range_failed            : 1;
        uint64_t secondary_media_row_remapping_succeeded            : 1;
        uint64_t secondary_media_row_remapping_failed               : 1;
        uint64_t secondary_media_reached_90_spare_row_consumption   : 1;
        uint64_t secondary_media_reached_100_spare_row_consumption  : 1;
        uint64_t secondary_media_device_sparing_succeeded           : 1;
        uint64_t secondary_media_device_sparing_failed              : 1;
        uint64_t secondary_media_se_succeeded                       : 1;
        uint64_t secondary_media_se_failed                          : 1;
        uint64_t secondary_media_read_endurance_reached_10          : 1;
        uint64_t secondary_media_read_endurance_reached_0           : 1;
        uint64_t secondary_media_read_endurance_notification_event  : 1;
        uint64_t secondary_media_write_endurance_reached_10         : 1;
        uint64_t secondary_media_write_endurance_reached_0          : 1;
        uint64_t secondary_media_write_endurance_notification_event : 1;
        uint64_t secondary_media_unstable_insufficient_main_power   : 1;
        uint64_t secondary_media_unexpected_main_power_loss         : 1;
        uint64_t secondary_media_fatal_media_device_error           : 1;
        uint64_t secondary_media_controller_internal_error          : 1;
        uint64_t secondary_media_uncorrectable_error_detected       : 1;
        uint64_t secondary_media_poison_event                       : 1;
        uint64_t rsvdz                                              : 27;
        uint64_t inject_vendor_defined_event                        : 4;
        uint64_t padding                                            : 3;
    };
};


union power_status {
    uint16_t val;
    struct {
        uint16_t module_power_good           : 1;
        uint16_t unstable_insufficient_power : 1;
        uint16_t unexpected_power_loss       : 1;
        uint16_t rsvdz                       : 13;
//uint64_t padding                     : 0;
    };
};


union switch_cap_1 {
    uint32_t val;
    struct {
        uint32_t control_opclass_packet_filtering_support              : 1;
        uint32_t switch_cap_1_ulat_scale                               : 1;
        uint32_t switch_cap_1_mlat_scale                               : 1;
        uint32_t pco_communications_support                            : 1;
        uint32_t unreliable_control_write_msg_packet_filtering_support : 1; //FIXME: name too long.
        uint32_t default_collective_packet_relay_support               : 1;
        uint32_t reserved                                              : 26;
//uint64_t padding                                               : 0;
    };
};


union switch_cap_1_control {
    uint32_t val;
    struct {
        uint32_t m_c_prt_enable                         : 1;
        uint32_t msm_c_prt_enable                       : 1;
        uint32_t default_multicast_packet_relay_enable  : 1;
        uint32_t default_collective_packet_relay_enable : 1;
        uint32_t reserved                               : 28;
//uint64_t padding                                : 0;
    };
};


union switch_status {
    uint16_t val;
    struct {
        uint16_t rsvdz   : 16;
//uint64_t padding : 0;
    };
};


union switch_op_ctl {
    uint16_t val;
    struct {
        uint16_t packet_relay_enable : 1;
        uint16_t rsvdp               : 15;
//uint64_t padding             : 0;
    };
};


union cstat_cap_1 {
    uint8_t val;
    struct {
        uint8_t component_statistics_snapshot_support : 1;
        uint8_t rsvdp                                 : 7;
//uint64_t padding                              : 0;
    };
};


union cstat_control {
    uint8_t val;
    struct {
        uint8_t statistics_gathering_enable                          : 1;
        uint8_t cstat_control_reset_all_statistics                   : 1;
        uint8_t cstat_control_initiate_component_statistics_snapshot : 1; //FIXME: name too long.
        uint8_t rsvdp                                                : 5;
//uint64_t padding                                             : 0;
    };
};


union cstat_status {
    uint8_t val;
    struct {
        uint8_t cstat_status_statistics_reset : 1;
        uint8_t cstat_status_snapshot_status  : 1;
        uint8_t rsvdz                         : 6;
//uint64_t padding                      : 0;
    };
};


union mcast_cap_1 {
    uint16_t val;
    struct {
        uint16_t reliable_multicast_support                  : 1;
        uint16_t mcast_cap_1_provisioned_egress_mask_bits    : 4;
        uint16_t mcast_cap_1_reliable_multicast_role_support : 2;
        uint16_t reserved                                    : 9;
//uint64_t padding                                     : 0;
    };
};


union mcast_cap_1_control {
    uint16_t val;
    struct {
        uint16_t unreliable_multicast_enable                                                                                                                                                           : 1;
        uint16_t reliable_multicast_enable                                                                                                                                                             : 1;
        uint16_t mcast_cap_1_control_if_reliable_multicast_is_supported_then_this_bit_determines_if_each_entry_in_the_responder_tracking_table_consists_of_a_responder_cid_or_a_responder_cid_plus_sid : 1; //FIXME: name too long.
        uint16_t rsvdp                                                                                                                                                                                 : 13;
//uint64_t padding                                                                                                                                                                               : 0;
    };
};


union security_supported_hash {
    uint32_t val;
    struct {
        uint32_t sha_224     : 1;
        uint32_t sha_256     : 1;
        uint32_t sha_384     : 1;
        uint32_t sha_512     : 1;
        uint32_t sha_512_224 : 1;
        uint32_t sha_512_256 : 1;
        uint32_t sha3_224    : 1;
        uint32_t sha3_256    : 1;
        uint32_t sha3_384    : 1;
        uint32_t sha3_512    : 1;
        uint32_t reserved    : 22;
//uint64_t padding     : 0;
    };
};


union security_cap_1 {
    uint32_t val;
    struct {
        uint32_t hmac_authentication_support : 1;
        uint32_t sequence_number_art_support : 1;
        uint32_t precision_time_art_support  : 1;
        uint32_t encryption_support          : 1;
        uint32_t data_authentication_support : 1;
        uint32_t rsvdz                       : 27;
//uint64_t padding                     : 0;
    };
};


union security_control {
    uint32_t val;
    struct {
        uint32_t security_enable                                                                                                                       : 1;
        uint32_t hmac_authentication_enable                                                                                                            : 1;
        uint32_t sequence_number_art_enable                                                                                                            : 1;
        uint32_t precision_time_art_enable                                                                                                             : 1;
        uint32_t null_art_enable                                                                                                                       : 1;
        uint32_t sequence_number_art_window_size_specifies_the_maximum_allowed_time_window_to_accept_out_of_order_request_packets                      : 8; //FIXME: name too long.
        uint32_t precision_time_art_time_window_specifies_the_maximum_difference_between_the_components_master_time_and_the_packets_precision_time_art : 8; //FIXME: name too long.
        uint32_t rsvdp                                                                                                                                 : 11;
//uint64_t padding                                                                                                                               : 0;
    };
};


union security_supported_encrypt {
    uint32_t val;
    struct {
        uint32_t aes_128  : 1;
        uint32_t aes_256  : 1;
        uint32_t reserved : 30;
//uint64_t padding  : 0;
    };
};


union tr_status {
    uint32_t val;
    struct {
        uint32_t request_packet_relay_failure  : 1;
        uint32_t response_packet_relay_failure : 1;
        uint32_t access_key_status             : 1;
        uint32_t rsvdz                         : 29;
//uint64_t padding                       : 0;
    };
};


union image_cap_1 {
    uint16_t val;
    struct {
        uint16_t image_cap_1_read_only_image_location : 1;
        uint16_t crc16_support                        : 1;
        uint16_t image_hash_digest_support            : 1;
        uint16_t image_encryption_support             : 1;
        uint16_t control_space_image_location_support : 1;
        uint16_t data_space_image_location_support    : 1;
        uint16_t image_fault_injection_support        : 1;
        uint16_t rsvdz                                : 9;
//uint64_t padding                              : 0;
    };
};


union image_cap_1_control {
    uint16_t val;
    struct {
        uint16_t image_fault_injection_enable : 1;
        uint16_t rsvdp                        : 15;
//uint64_t padding                      : 0;
    };
};


union image_table_control {
    uint16_t val;
    struct {
        uint16_t rsvdp   : 16;
//uint64_t padding : 0;
    };
};


union image_fault_injection {
    uint16_t val;
    struct {
        uint16_t image_checksum_failure       : 1;
        uint16_t image_authentication_failure : 1;
        uint16_t rsvdp                        : 13;
        uint64_t padding                      : 1;
    };
};


union image_detect {
    uint16_t val;
    struct {
        uint16_t image_checksum_failure_detect : 1;
        uint16_t image_authentication_failure  : 1;
        uint16_t rsvdp                         : 13;
        uint64_t padding                       : 1;
    };
};


union pt_cap_1 {
    uint16_t val;
    struct {
        uint16_t precision_time_requester_support                   : 1;
        uint16_t precision_time_responder_support                   : 1;
        uint16_t precision_time_gtc_support                         : 1;
        uint16_t pt_cap_1_component_precision_time_granularity_unit : 1;
        uint16_t reserved                                           : 12;
//uint64_t padding                                            : 0;
    };
};


union pt_ctl {
    uint16_t val;
    struct {
        uint16_t pt_ctl_precision_time_requester_enable : 1;
        uint16_t pt_ctl_precision_time_responder_enable : 1;
        uint16_t pt_ctl_precision_time_gtc_enable       : 1;
        uint16_t pt_ctl_migrate_pt_alt_responder        : 1;
        uint16_t pt_ctl_ptd_granularity_unit            : 1;
        uint16_t pt_ctl_gtc_cid_location                : 1;
        uint16_t rsvdp                                  : 10;
//uint64_t padding                                : 0;
    };
};


union mechanical_status {
    uint32_t val;
    struct {
        uint32_t mechanical_status_attention_button_pressed           : 1;
        uint32_t mechanical_status_power_fault_detected               : 1;
        uint32_t mechanical_status_mrl_sensor_state_change            : 1;
        uint32_t mechanical_status_mrl_sensor_state                   : 1;
        uint32_t mechanical_status_dynamic_insertion_removal_change   : 1;
        uint32_t mechanical_status_mechanical_component_presence      : 1;
        uint32_t mechanical_status_electromechanical_interlock_status : 1; //FIXME: name too long.
        uint32_t mechanical_status_controller_cmd_completion          : 1;
        uint32_t rsvdz                                                : 24;
//uint64_t padding                                              : 0;
    };
};


union mechanical_cap_1 {
    uint64_t val;
    struct {
        uint64_t attention_button_support                                                               : 1;
        uint64_t attention_indicator_support                                                            : 1;
        uint64_t power_controller_support                                                               : 1;
        uint64_t power_indicator_support                                                                : 1;
        uint64_t mrl_sensor_support                                                                     : 1;
        uint64_t electromechanical_interlock_support                                                    : 1;
        uint64_t mechanical_cap_1_mechanical_insertion_removal_support                                  : 2; //FIXME: name too long.
        uint64_t common_reference_clock_support                                                         : 1;
        uint64_t controller_cmd_completion_notification_support                                         : 1;
        uint64_t max_mech_power_lvl_is_used_to_calculate_the_maximum_power_a_mechanical_module_supports : 10; //FIXME: name too long.
        uint64_t mechanical_cap_1_mech_power_scale                                                      : 3;
        uint64_t main_power_voltage_support                                                             : 8;
        uint64_t module_indicator_present_notification_support                                          : 1;
        uint64_t module_indicator_locate_notification_support                                           : 1;
        uint64_t module_indicator_failure_notification_support                                          : 1;
        uint64_t module_indicator_notification_1_support                                                : 1;
        uint64_t module_indicator_notification_2_support                                                : 1;
        uint64_t module_indicator_notification_3_support                                                : 1;
        uint64_t module_indicator_notification_4_support                                                : 1;
        uint64_t module_indicator_notification_5_support                                                : 1;
        uint64_t module_indicator_notification_6_support                                                : 1;
        uint64_t module_indicator_notification_7_support                                                : 1;
        uint64_t module_indicator_vendor_defined_1_support                                              : 1;
        uint64_t module_indicator_vendor_defined_2_support                                              : 1;
        uint64_t mechanical_cap_1_module_indicator_interpretation                                       : 2;
        uint64_t mechanical_event_injection_support                                                     : 1;
        uint64_t reserved                                                                               : 18;
//uint64_t padding                                                                                : 0;
    };
};


union mechanical_control {
    uint64_t val;
    struct {
        uint64_t mechanical_control_attention_indicator_control         : 1;
        uint64_t mechanical_control_main_power_controller_disable       : 1;
        uint64_t mechanical_control_power_indicator_control             : 1;
        uint64_t mechanical_control_electromechanical_interlock_control : 1; //FIXME: name too long.
        uint64_t mechanical_control_activity_indicator_control          : 5;
        uint64_t mechanical_control_auxiliary_power_disable             : 1;
        uint64_t mechanical_event_injection_enable                      : 1;
        uint64_t rsvdp                                                  : 53;
//uint64_t padding                                                : 0;
    };
};


union mechanical_event_detect {
    uint32_t val;
    struct {
        uint32_t dynamic_module_insertion_detect               : 1;
        uint32_t dynamic_module_removal_detect                 : 1;
        uint32_t attention_button_pressed_detect               : 1;
        uint32_t attention_indicator_on_continuously_detect    : 1;
        uint32_t module_power_up_detect                        : 1;
        uint32_t module_power_off_detect                       : 1;
        uint32_t mrl_open_detect                               : 1;
        uint32_t mrl_close_detect                              : 1;
        uint32_t module_indicator_activated_detect             : 1;
        uint32_t controller_cmd_completion_notification_detect : 1;
        uint32_t power_fault_detect                            : 1;
        uint32_t auxiliary_power_up_detect                     : 1;
        uint32_t auxiliary_power_off_detect                    : 1;
        uint32_t rsvdp                                         : 19;
//uint64_t padding                                       : 0;
    };
};


union destination_table_cap_1 {
    uint32_t val;
    struct {
        uint32_t ei_support            : 1;
        uint32_t wildcard_ssdt_support : 1;
        uint32_t wildcard_msdt_support : 1;
        uint32_t rit_ssdt_support      : 1;
        uint32_t reserved              : 28;
//uint64_t padding               : 0;
    };
};


union destination_table_control {
    uint32_t val;
    struct {
        uint32_t peer_authorization_enable                 : 1;
        uint32_t destination_table_control_rit_ssdt_enable : 1;
        uint32_t rsvdp                                     : 30;
//uint64_t padding                                   : 0;
    };
};


union c_access_cap {
    uint8_t val;
    struct {
        uint8_t l_ac_validation_support   : 1;
        uint8_t p2p_ac_validation_support : 1;
        uint8_t rsvdz                     : 2;
//uint64_t padding                  : 0;
    };
};


union c_access_ctl {
    uint8_t val;
    struct {
        uint8_t c_access_r_key_validation_enable   : 1;
        uint8_t c_access_ctl_reset_c_access_tables : 1;
        uint8_t l_ac_validation_enable             : 1;
        uint8_t p2p_ac_validati_on_enable          : 1;
        uint8_t rsvdp                              : 4;
//uint64_t padding                           : 0;
    };
};


union rspb_cap_1 {
    uint8_t val;
    struct {
        uint8_t primary_media_encryption   : 1;
        uint8_t secondary_media_encryption : 1;
        uint8_t rsvdz                      : 2;
//uint64_t padding                   : 0;
    };
};


union rspb_cap_1_control {
    uint8_t val;
    struct {
        uint8_t primary_media_encryption_enable   : 1;
        uint8_t secondary_media_encryption_enable : 1;
        uint8_t rsvdp                             : 2;
//uint64_t padding                          : 0;
    };
};


union req_bank_cap_1 {
    uint8_t val;
    struct {
        uint8_t primary_media_encryption_support   : 1;
        uint8_t secondary_media_encryption_support : 1;
        uint8_t rsvdz                              : 6;
//uint64_t padding                           : 0;
    };
};


union req_bank_cap_1_control {
    uint8_t val;
    struct {
        uint8_t primary_media_encryption_enable   : 1;
        uint8_t secondary_media_encryption_enable : 1;
        uint8_t rsvdp                             : 6;
//uint64_t padding                          : 0;
    };
};


union req_bank_control {
    uint16_t val;
    struct {
        uint16_t req_bank_control_opclass_enable             : 2;
        uint16_t req_bank_control_primary_media_volatility   : 3;
        uint16_t req_bank_control_secondary_media_volatility : 3;
        uint16_t rsvdp                                       : 8;
//uint64_t padding                                     : 0;
    };
};


union pa_cap_1 {
    uint32_t val;
    struct {
        uint32_t pa_cap_1_pa_index_field_size        : 2;
        uint32_t pa_cap_1_pa_entry_size              : 2;
        uint32_t pa_cap_1_sec_index_field_size       : 2;
        uint32_t pa_cap_1_wildcard_akey_support      : 1;
        uint32_t pa_cap_1_wildcard_peer_attr_support : 1;
        uint32_t pa_cap_1_wildcard_sec_support       : 1;
        uint32_t pa_cap_1_wildcard_acreq_support     : 1;
        uint32_t pa_cap_1_wildcard_acrsp_support     : 1;
        uint32_t rsvdz                               : 21;
//uint64_t padding                             : 0;
    };
};


union pa_cap_1_control {
    uint32_t val;
    struct {
        uint32_t access_key_enable : 1;
        uint32_t rsvdp             : 31;
//uint64_t padding           : 0;
    };
};


union c_event_cap_1 {
    uint16_t val;
    struct {
        uint16_t c_event_cap_1_event_signal_size : 3;
        uint16_t c_event_interrupt_1_support     : 1;
        uint16_t c_event_interrupt_2_support     : 1;
        uint16_t reserved                        : 11;
//uint64_t padding                         : 0;
    };
};


union c_event_control {
    uint16_t val;
    struct {
        uint16_t interrupt_0_enable                                                                                                                                                             : 1;
        uint16_t interrupt_1_enable                                                                                                                                                             : 1;
        uint16_t interrupt_2_enable                                                                                                                                                             : 1;
        uint16_t management_writes_1b_to_this_bit_to_indicate_that_it_has_updated_the_last_event_record_0_and_that_the_interrupt_service_routine_associated_with_interrupt_address_0_has_exited : 1; //FIXME: name too long.
        uint16_t management_writes_1b_to_this_bit_to_indicate_that_it_has_updated_the_last_event_record_1_and_that_the_interrupt_service_routine_associated_with_interrupt_address_1_has_exited : 1; //FIXME: name too long.
        uint16_t management_writes_1b_to_this_bit_to_indicate_that_it_has_updated_the_last_event_record_2_and_that_the_interrupt_service_routine_associated_with_interrupt_address_2_has_exited : 1; //FIXME: name too long.
        uint16_t rsvdp                                                                                                                                                                          : 10;
//uint64_t padding                                                                                                                                                                        : 0;
    };
};


union lpd_cap_1 {
    uint32_t val;
    struct {
        uint32_t multi_subnet_support        : 1;
        uint32_t non_default_host_id_support : 1;
        uint32_t pco_support                 : 1;
        uint32_t device_number_support       : 1;
        uint32_t lpd_field_type_0_support    : 1;
        uint32_t lpd_field_type_3_support    : 1;
        uint32_t lpd_field_type_4_support    : 1;
        uint32_t rsvdz                       : 25;
//uint64_t padding                     : 0;
    };
};


union lpd_cap_1_control {
    uint32_t val;
    struct {
        uint32_t non_default_target_enable : 1;
        uint32_t lpd_reset                 : 1;
        uint32_t default_hsid_valid        : 1;
        uint32_t lpd_communications_enable : 1;
        uint32_t default_hcid_valid        : 1;
        uint32_t rsvdp                     : 27;
//uint64_t padding                   : 0;
    };
};


union f_ctl0 {
    uint16_t val;
    struct {
        uint16_t hwinit_write_enable           : 1;
        uint16_t request_traffic_class         : 4;
        uint16_t f_ctl0_interrupt_r_key_enable : 1;
        uint16_t r_key_non_interrupt_enable    : 1;
        uint16_t pco_enable                    : 1;
        uint16_t lpd_field_type_0_enable       : 1;
        uint16_t lpd_field_type_3_enable       : 1;
        uint16_t lpd_field_type_4_enable       : 1;
        uint16_t rsvdp                         : 5;
//uint64_t padding                       : 0;
    };
};


union sod_cap_1 {
    uint32_t val;
    struct {
        uint32_t multi_subnet_support        : 1;
        uint32_t interface_migration_support : 1;
        uint32_t reserved                    : 30;
//uint64_t padding                     : 0;
    };
};


union sod_cap_1_control {
    uint32_t val;
    struct {
        uint32_t sod_communications_enable : 1;
        uint32_t rsvdp                     : 31;
//uint64_t padding                   : 0;
    };
};


union congestion_cap_1 {
    uint16_t val;
    struct {
        uint16_t resource_congestion_management_support       : 1;
        uint16_t vendor_defined_congestion_management_support : 1;
        uint16_t rsvdz                                        : 14;
//uint64_t padding                                      : 0;
    };
};


union congestion_cap_1_control {
    uint16_t val;
    struct {
        uint16_t congestion_cap_1_control_congestion_management_control : 3; //FIXME: name too long.
        uint16_t congestion_cap_1_control_strict_increment_mode_control : 1; //FIXME: name too long.
        uint16_t reserved                                               : 12;
//uint64_t padding                                                : 0;
    };
};


union rkd_cap_1 {
    uint16_t val;
    struct {
        uint16_t rkd_mechanism_table_type : 3;
        uint16_t reserved                 : 13;
//uint64_t padding                  : 0;
    };
};


union rkd_control_1 {
    uint16_t val;
    struct {
        uint16_t rkd_validation_enable : 1;
        uint16_t trusted_thread_enable : 1;
        uint16_t rsvdp                 : 14;
//uint64_t padding               : 0;
    };
};


union pm_cap_1 {
    uint16_t val;
    struct {
        uint16_t pm_cap_1_performance_marker_support : 3;
        uint16_t max_perf_records                    : 5;
        uint16_t reserved                            : 8;
//uint64_t padding                             : 0;
    };
};


union pm_control {
    uint16_t val;
    struct {
        uint16_t performa_nce_log_record_enable          : 1;
        uint16_t pm_control_clear_performance_marker_log : 1;
        uint16_t rsvdp                                   : 14;
//uint64_t padding                                 : 0;
    };
};


union atp_cap_1 {
    uint32_t val;
    struct {
        uint32_t atp_cap_1_pasid_support              : 1;
        uint32_t atp_cap_1_prg_rspn_pasid_required    : 1;
        uint32_t address_translation_services_support : 1;
        uint32_t page_services_support                : 1;
        uint32_t context_management_support           : 1;
        uint32_t privileged_mode_support              : 1;
        uint32_t execution_permission_support         : 1;
        uint32_t global_mapping_support               : 1;
        uint32_t global_invalidate_support            : 1;
        uint32_t rsvdz                                : 23;
//uint64_t padding                              : 0;
    };
};


union atp_cap_1_control {
    uint32_t val;
    struct {
        uint32_t pasid_enable                                       : 1;
        uint32_t address_translation_services_enable                : 1;
        uint32_t page_services_enable                               : 1;
        uint32_t reset_pri                                          : 1;
        uint32_t context_management_override                        : 1;
        uint32_t privileged_mode_enable                             : 1;
        uint32_t execute_permission_enable                          : 1;
        uint32_t global_mapping_enable                              : 1;
        uint32_t global_invalidate_enable                           : 1;
        uint32_t atp_cap_1_control_address_translation_cache_enable : 1;
        uint32_t atp_cap_1_control_max_context_id                   : 1;
        uint32_t smallest_translation_unit_stu                      : 5;
        uint32_t rsvdp                                              : 16;
//uint64_t padding                                            : 0;
    };
};


union atp_status {
    uint32_t val;
    struct {
        uint32_t prg_response_notification_failure : 1;
        uint32_t unexpected_prg_index              : 1;
        uint32_t stopped                           : 1;
        uint32_t rsvdz                             : 29;
//uint64_t padding                           : 0;
    };
};


union re_table_cap_1 {
    uint16_t val;
    struct {
        uint16_t rsvdz   : 16;
//uint64_t padding : 0;
    };
};


union re_table_cap_1_control {
    uint16_t val;
    struct {
        uint16_t rsvdp   : 16;
//uint64_t padding : 0;
    };
};


union re_table_control {
    uint16_t val;
    struct {
        uint16_t re_table_enable : 1;
        uint16_t rsvdp           : 15;
//uint64_t padding         : 0;
    };
};


union lph_cap_1 {
    uint32_t val;
    struct {
        uint32_t multi_subnet_support        : 1;
        uint32_t non_default_host_id_support : 1;
        uint32_t pco_support                 : 1;
        uint32_t lpd_field_type_3_support    : 1;
        uint32_t lpd_field_type_4_support    : 1;
        uint32_t rsvdz                       : 27;
//uint64_t padding                     : 0;
    };
};


union lph_cap_1_control {
    uint32_t val;
    struct {
        uint32_t non_default_target_enable : 1;
        uint32_t lph_reset                 : 1;
        uint32_t default_hsid_valid        : 1;
        uint32_t lph_communications_enable : 1;
        uint32_t default_hcid_valid        : 1;
        uint32_t lpd_field_type_3_enable   : 1;
        uint32_t lpd_field_type_4_enable   : 1;
        uint32_t rsvdp                     : 25;
//uint64_t padding                   : 0;
    };
};


union lph_ctl {
    uint16_t val;
    struct {
        uint16_t request_traffic_class          : 4;
        uint16_t lph_ctl_interrupt_r_key_enable : 1;
        uint16_t r_key_non_interrupt_enable     : 1;
        uint16_t pco_enable                     : 1;
        uint16_t rsvdp                          : 9;
//uint64_t padding                        : 0;
    };
};


union pg_zmmu_cap_1 {
    uint32_t val;
    struct {
        uint32_t pg_zmmu_cap_1_zmmu_type                   : 1;
        uint32_t lpd_responder_zmmu_no_bypass_support      : 1;
        uint32_t lpd_responder_zmmu_bypass_support         : 1;
        uint32_t lpd_responder_zmmu_bypass_control_support : 1;
        uint32_t rsvdz                                     : 28;
//uint64_t padding                                   : 0;
    };
};


union pg_zmmu_cap_1_control {
    uint32_t val;
    struct {
        uint32_t rsvdp   : 32;
//uint64_t padding : 0;
    };
};


union pt_zmmu_cap_1 {
    uint32_t val;
    struct {
        uint32_t pt_zmmu_cap_1_zmmu_type                   : 1;
        uint32_t lpd_responder_zmmu_no_bypass_support      : 1;
        uint32_t lpd_responder_zmmu_bypass_support         : 1;
        uint32_t lpd_responder_zmmu_bypass_control_support : 1;
        uint32_t rsvdz                                     : 28;
//uint64_t padding                                   : 0;
    };
};


union pt_zmmu_cap_1_control {
    uint32_t val;
    struct {
        uint32_t rsvdp   : 32;
//uint64_t padding : 0;
    };
};


union fw_table_cap_1 {
    uint16_t val;
    struct {
        uint16_t mutable_fw_support           : 1;
        uint16_t crc16_support                : 1;
        uint16_t fw_image_hash_digest_support : 1;
        uint16_t rsvdz                        : 13;
//uint64_t padding                      : 0;
    };
};


union fw_table_control {
    uint16_t val;
    struct {
        uint16_t fw_fault_injection_enable : 1;
        uint16_t rsvdp                     : 15;
//uint64_t padding                   : 0;
    };
};


union fw_detect {
    uint16_t val;
    struct {
        uint16_t fw_update_error_failure    : 1;
        uint16_t fw_update_error            : 1;
        uint16_t fw_checksum_failure_detect : 1;
        uint16_t fw_authentication_failure  : 1;
        uint16_t rsvdp                      : 10;
        uint64_t padding                    : 2;
    };
};


union fw_fault_injection {
    uint16_t val;
    struct {
        uint16_t fw_update_error_failure   : 1;
        uint16_t fw_update_error           : 1;
        uint16_t fw_checksum_failure       : 1;
        uint16_t fw_authentication_failure : 1;
        uint16_t rsvdp                     : 10;
        uint64_t padding                   : 2;
    };
};


union swm_cap_1 {
    uint16_t val;
    struct {
        uint16_t swm_media_support : 1;
        uint16_t rsvdz             : 15;
//uint64_t padding           : 0;
    };
};


union swm_control_1 {
    uint16_t val;
    struct {
        uint16_t swm_media_support : 1;
        uint16_t rsvdz             : 15;
//uint64_t padding           : 0;
    };
};


union swm_status {
    uint16_t val;
    struct {
        uint16_t swm_op_completed     : 1;
        uint16_t swm_op_success       : 1;
        uint16_t swm_error            : 1;
        uint16_t swm_op_abort_ed      : 1;
        uint16_t swm_read             : 1;
        uint16_t swm_read_multi_block : 1;
        uint16_t swm_read_last_block  : 1;
        uint16_t swm_write_next_block : 1;
        uint16_t rsvdp                : 8;
//uint64_t padding              : 0;
    };
};


union fw_ctl0 {
    uint16_t val;
    struct {
        uint16_t fw_table_entry_valid        : 1;
        uint16_t fw_update_enable            : 1;
        uint16_t fw_update                   : 1;
        uint16_t fw_image_validate           : 1;
        uint16_t fw_image_authenticate       : 1;
        uint16_t fw_immutable_halt           : 1;
        uint16_t fw_mutable_halt             : 1;
        uint16_t activate_immutable_firmware : 1;
        uint16_t rsvdp                       : 7;
        uint64_t padding                     : 1;
    };
};


union fw_status0 {
    uint16_t val;
    struct {
        uint16_t fw_image_crc_valid                   : 1;
        uint16_t fw_image_hash_digest_valid           : 1;
        uint16_t fw_update_error                      : 1;
        uint16_t fw_update_in_progress                : 1;
        uint16_t immutable_firmware_image_active      : 1;
        uint16_t mutable_firmware_image_active        : 1;
        uint16_t fw_immutable_halted                  : 1;
        uint16_t fw_mutable_halted                    : 1;
        uint16_t fw_hash_digest_challenge_in_progress : 1;
        uint16_t fw_activation_in_progress            : 1;
        uint16_t fw_update_activation_completed       : 1;
        uint16_t rsvdp                                : 4;
        uint64_t padding                              : 1;
    };
};


union opcode_set_id_control_1 {
    uint16_t val;
    struct {
        uint16_t opcode_set_enable : 1;
        uint16_t rsvdp             : 15;
//uint64_t padding           : 0;
    };
};


union component_backup_cap_1 {
    uint64_t val;
    struct {
        uint64_t lps_support                                      : 1;
        uint64_t tps_support                                      : 1;
        uint64_t auto_op_check_lps_tps_support                    : 1;
        uint64_t lps_temp_support                                 : 1;
        uint64_t backup_fault_injection_support                   : 1;
        uint64_t point_to_point_topology_backup_support           : 1;
        uint64_t switch_topology_backup_support                   : 1;
        uint64_t component_backup_cap_1_max_backup_retry_support  : 2;
        uint64_t component_backup_cap_1_max_restore_retry_support : 2;
        uint64_t component_backup_cap_1_max_erase_retry_support   : 2;
        uint64_t rsvdz                                            : 51;
//uint64_t padding                                          : 0;
    };
};


union component_backup_cap_1_control {
    uint64_t val;
    struct {
        uint64_t backup_fault_injection_enable         : 1;
        uint64_t point_to_point_topology_backup_enable : 1;
        uint64_t switch_topology_backup_enable         : 1;
        uint64_t rsvdp                                 : 61;
//uint64_t padding                               : 0;
    };
};


union component_backup_status_1 {
    uint32_t val;
    struct {
        uint32_t arm_status                     : 1;
        uint32_t lps_present                    : 1;
        uint32_t lps_battery                    : 1;
        uint32_t lps_supercapacitor             : 1;
        uint32_t lps_hybrid_capacitor           : 1;
        uint32_t lps_failed                     : 1;
        uint32_t lps_wear_threshold_exceeded    : 1;
        uint32_t lps_lower_thermal_exceeded     : 1;
        uint32_t lps_low_thermal_restored       : 1;
        uint32_t lps_upper_thermal_exceeded     : 1;
        uint32_t lps_upper_thermal_restored     : 1;
        uint32_t lps_tps_assessment_status      : 1;
        uint32_t lps_tps_assessment_type        : 1;
        uint32_t lps_tps_assessment_in_progress : 1;
        uint32_t tps_present                    : 1;
        uint32_t tps_failed                     : 1;
        uint32_t lps_tps_assessment_error       : 1;
        uint32_t insufficient_lps_tps_power     : 1;
        uint32_t lps_tps_charged                : 1;
        uint32_t rsvdz                          : 13;
//uint64_t padding                        : 0;
    };
};


union component_backup_control_1 {
    uint32_t val;
    struct {
        uint32_t component_backup_control_1_wait_for_backup_power : 1;
        uint32_t arm_emergency_backup_signal_enable               : 1;
        uint32_t component_backup_control_1_lps_tps_enable        : 1;
        uint32_t initiate_lps_health_status                       : 1;
        uint32_t backup_fault_injection_enable                    : 1;
        uint32_t initiate_emergency_all_backup                    : 1;
        uint32_t emergency_backup                                 : 1;
        uint32_t rsvdp                                            : 20;
        uint64_t padding                                          : 5;
    };
};


union component_backup_fault_injection_1 {
    uint64_t val;
    struct {
        uint64_t backup_success                              : 1;
        uint64_t emergency_backup_main_power_problem         : 1;
        uint64_t emergency_backup_signal_received            : 1;
        uint64_t emergency_backup_c_down                     : 1;
        uint64_t emergency_backup_path_lost                  : 1;
        uint64_t emergency_backup_management_initiated       : 1;
        uint64_t planned_backup_initiated                    : 1;
        uint64_t backup_error                                : 1;
        uint64_t backup_rejected_not_armed                   : 1;
        uint64_t backup_abort_success                        : 1;
        uint64_t backup_abort_error                          : 1;
        uint64_t partial_backup_saved                        : 1;
        uint64_t restore_success                             : 1;
        uint64_t restore_error                               : 1;
        uint64_t restore_abort_success                       : 1;
        uint64_t restore_abort_error                         : 1;
        uint64_t restore_invalid_image                       : 1;
        uint64_t restore_volatile_invalidate_state           : 1;
        uint64_t abort_current_op_failed                     : 1;
        uint64_t backup_permanent_hw_failure                 : 1;
        uint64_t invalid_pm_backup_table_entry_configuration : 1;
        uint64_t operation_failed                            : 1;
        uint64_t erase_success                               : 1;
        uint64_t erase_error                                 : 1;
        uint64_t erase_abort_success                         : 1;
        uint64_t erase_invalid_image                         : 1;
        uint64_t invalid_sm_backup_table_entry_configuration : 1;
        uint64_t lps_tps_present                             : 1;
        uint64_t lps_thermal_threshold                       : 1;
        uint64_t lps_tps_failed                              : 1;
        uint64_t lps_wear_threshold_exceeded                 : 1;
        uint64_t lps_tps_assessment_error                    : 1;
        uint64_t insufficient_lps_tps_power                  : 1;
        uint64_t lps_tps_charged                             : 1;
        uint64_t rsvdz                                       : 12;
        uint64_t padding                                     : 18;
    };
};


union component_backup_fault_injection_2 {
    uint64_t val;
    struct {
        uint64_t rsvdz                       : 60;
        uint64_t inject_vendor_defined_event : 4;
//uint64_t padding                     : 0;
    };
};


union pm_backup_status0 {
    uint64_t val;
    struct {
        uint64_t backup_success                              : 1;
        uint64_t emergency_backup_initiated                  : 1;
        uint64_t emergency_backup_main_power_problem         : 1;
        uint64_t emergency_backup_signal_received            : 1;
        uint64_t emergency_backup_c_down                     : 1;
        uint64_t emergency_backup_path_lost                  : 1;
        uint64_t emergency_backup_management_initiated       : 1;
        uint64_t planned_backup_initiated                    : 1;
        uint64_t backup_error                                : 1;
        uint64_t backup_rejected_not_armed                   : 1;
        uint64_t backup_abort_success                        : 1;
        uint64_t backup_abort_error                          : 1;
        uint64_t partial_backup_saved                        : 1;
        uint64_t backup_in_progress                          : 1;
        uint64_t restore_success                             : 1;
        uint64_t restore_error                               : 1;
        uint64_t restore_abort_success                       : 1;
        uint64_t restore_abort_error                         : 1;
        uint64_t restore_in_progress                         : 1;
        uint64_t restore_invalid_image                       : 1;
        uint64_t restore_volatile_invalid_state              : 1;
        uint64_t pm_backup_status0_arm_status                : 1;
        uint64_t abort_current_op_failed                     : 1;
        uint64_t backup_permanent_hw_failure                 : 1;
        uint64_t invalid_pm_backup_table_entry_configuration : 1;
        uint64_t operation_failed                            : 1;
        uint64_t rsvdz                                       : 31;
        uint64_t padding                                     : 7;
    };
};


union pm_backup_control0 {
    uint32_t val;
    struct {
        uint32_t allocate_pm_backup_table_entry    : 1;
        uint32_t pm_backup_control0_discrete_valid : 2;
        uint32_t backup_hash_enable                : 1;
        uint32_t backup_enc_enable                 : 1;
        uint32_t arm_emergency_backup              : 1;
        uint32_t disable_emergency_backup          : 1;
        uint32_t initiate_emergency_backup         : 1;
        uint32_t initiate_planned_backup           : 1;
        uint32_t initiate_restore                  : 1;
        uint32_t abort_current_op                  : 1;
        uint32_t rsvdp                             : 21;
//uint64_t padding                           : 0;
    };
};


union sm_backup_status0 {
    uint64_t val;
    struct {
        uint64_t erase_success                               : 1;
        uint64_t erase_error                                 : 1;
        uint64_t erase_abort_success                         : 1;
        uint64_t erase_abort_error                           : 1;
        uint64_t erase_in_progress                           : 1;
        uint64_t erase_invalid_image                         : 1;
        uint64_t invalid_sm_backup_table_entry_configuration : 1;
        uint64_t backup_permanent_hw_failure                 : 1;
        uint64_t operation_failed                            : 1;
        uint64_t rsvdz                                       : 52;
        uint64_t padding                                     : 3;
    };
};


union sm_backup_control0 {
    uint32_t val;
    struct {
        uint32_t allocate_sm_backup_table_entry    : 1;
        uint32_t sm_backup_control0_discrete_valid : 2;
        uint32_t initiate_erase                    : 1;
        uint32_t abort_current_op                  : 1;
        uint32_t rsvdp                             : 11;
        uint64_t padding                           : 16;
    };
};

struct core_structure {
    uint64_t type                                 : 12;
    uint64_t vers                                 : 4;
    uint64_t size                                 : 16;
    uint64_t r0                                   : 32;
    uint64_t c_status                             : 64;
    uint64_t c_control                            : 64;
    uint64_t base_c_class                         : 16;
    uint64_t max_interface                        : 12;
    uint64_t r_bist                               : 4;
    uint64_t rdlat                                : 16;
    uint64_t wrlat                                : 16;
    uint64_t max_rsp_supported_requests           : 20;
    uint64_t max_req_supported_requests           : 20;
    uint64_t c_op_clock                           : 24;
    uint64_t max_data                             : 64;
    uint64_t max_ctl                              : 52;
    uint64_t max_rnr                              : 3;
    uint64_t r1                                   : 9;
    uint64_t c_state_transition_latency           : 32;
    uint64_t c_idle_times                         : 16;
    uint64_t r2                                   : 16;
    uint64_t lpwr                                 : 10;
    uint64_t npwr                                 : 10;
    uint64_t hpwr                                 : 10;
    uint64_t epwr                                 : 10;
    uint64_t apwr                                 : 10;
    uint64_t r3                                   : 14;
    uint64_t control_structure_ptr_0              : 32;
    uint64_t control_structure_ptr_1              : 32;
    uint64_t control_structure_ptr_2              : 32;
    uint64_t control_structure_ptr_3              : 32;
    uint64_t control_structure_ptr_4              : 32;
    uint64_t control_structure_ptr_5              : 32;
    uint64_t control_structure_ptr_6              : 32;
    uint64_t control_structure_ptr_7              : 32;
    uint64_t control_structure_ptr_8              : 32;
    uint64_t core_lpd_bdf_table_ptr               : 32;
    uint64_t opcode_set_structure_ptr             : 32;
    uint64_t component_c_access_ptr               : 32;
    uint64_t component_destination_table_ptr      : 32;
    uint64_t interface_0_ptr                      : 32;
    uint64_t component_extension_ptr              : 32;
    uint64_t component_error_and_signal_event_ptr : 32;
    uint64_t muto                                 : 16;
    uint64_t crpto                                : 16;
    uint64_t ccto                                 : 16;
    uint64_t failto                               : 16;
    uint64_t sveto                                : 16;
    uint64_t lveto                                : 32;
    uint64_t unrsp                                : 16;
    uint64_t uert                                 : 16;
    uint64_t nirt                                 : 16;
    uint64_t atsto                                : 16;
    uint64_t unreq                                : 16;
    uint64_t ll_request_deadline                  : 10;
    uint64_t nll_request_deadline                 : 10;
    uint64_t deadline_tick                        : 12;
    uint64_t fpst                                 : 16;
    uint64_t pco_fpst                             : 16;
    uint64_t ll_response_deadline                 : 10;
    uint64_t nll_response_deadline                : 10;
    uint64_t responder_deadline                   : 10;
    uint64_t r4                                   : 2;
    uint64_t enirt                                : 16;
    uint64_t sfmsid                               : 16;
    uint64_t pmcid                                : 12;
    uint64_t pwr_mgr_cid                          : 12;
    uint64_t pfmcid                               : 12;
    uint64_t pfmsid                               : 16;
    uint64_t sfmcid                               : 12;
    uint64_t sid_0                                : 16;
    uint64_t dr_request_deadline                  : 10;
    uint64_t r5                                   : 38;
    uint64_t cv                                   : 8;
    uint64_t cid_0                                : 12;
    uint64_t cid_1                                : 12;
    uint64_t cid_2                                : 12;
    uint64_t cid_3                                : 12;
    uint64_t r6                                   : 4;
    uint64_t buffer_tc                            : 4;
    uint64_t max_requests                         : 20;
    uint64_t min_tag_cycle                        : 12;
    uint64_t r7                                   : 2;
    uint64_t pwr_mgr_sid                          : 16;
    uint64_t mi_lsb                               : 7;
    uint64_t mi_msb                               : 7;
    uint64_t to0                                  : 16;
    uint64_t to1                                  : 16;
    uint64_t to2                                  : 16;
    uint64_t to3                                  : 16;
    uint64_t to4                                  : 16;
    uint64_t to5                                  : 16;
    uint64_t to6                                  : 16;
    uint64_t to7                                  : 16;
    uint64_t to8                                  : 16;
    uint64_t to9                                  : 16;
    uint64_t to10                                 : 16;
    uint64_t to11                                 : 16;
    uint64_t to12                                 : 16;
    uint64_t to13                                 : 16;
    uint64_t to14                                 : 16;
    uint64_t to15                                 : 16;
    uint64_t to16                                 : 16;
    uint64_t to17                                 : 16;
    uint64_t to18                                 : 16;
    uint64_t to19                                 : 16;
    uint64_t to20                                 : 16;
    uint64_t to21                                 : 16;
    uint64_t to22                                 : 16;
    uint64_t to23                                 : 16;
    uint64_t to24                                 : 16;
    uint64_t to25                                 : 16;
    uint64_t to26                                 : 16;
    uint64_t to27                                 : 16;
    uint64_t to28                                 : 16;
    uint64_t to29                                 : 16;
    uint64_t to30                                 : 16;
    uint64_t to31                                 : 16;
    uint64_t lto0                                 : 16;
    uint64_t lto1                                 : 16;
    uint64_t lto2                                 : 16;
    uint64_t lto3                                 : 16;
    uint64_t lto4                                 : 16;
    uint64_t lto5                                 : 16;
    uint64_t lto6                                 : 16;
    uint64_t lto7                                 : 16;
    uint64_t lto8                                 : 16;
    uint64_t lto9                                 : 16;
    uint64_t lto10                                : 16;
    uint64_t lto11                                : 16;
    uint64_t lto12                                : 16;
    uint64_t lto13                                : 16;
    uint64_t lto14                                : 16;
    uint64_t lto15                                : 16;
    uint64_t lto16                                : 16;
    uint64_t lto17                                : 16;
    uint64_t lto18                                : 16;
    uint64_t lto19                                : 16;
    uint64_t lto20                                : 16;
    uint64_t lto21                                : 16;
    uint64_t lto22                                : 16;
    uint64_t lto23                                : 16;
    uint64_t lto24                                : 16;
    uint64_t lto25                                : 16;
    uint64_t lto26                                : 16;
    uint64_t lto27                                : 16;
    uint64_t lto28                                : 16;
    uint64_t lto29                                : 16;
    uint64_t lto30                                : 16;
    uint64_t lto31                                : 16;
    uint64_t component_cap_1                      : 64;
    uint64_t component_cap_1_control              : 64;
    uint64_t component_cap_2                      : 64;
    uint64_t component_cap_2_control              : 64;
    uint64_t component_cap_3                      : 64;
    uint64_t component_cap_3_control              : 64;
    uint64_t component_cap_4                      : 64;
    uint64_t component_cap_4_control              : 64;
    uint64_t r8_1                                 : 64; //NOTE: splitted bit
    uint64_t r8_2                                 : 31; //NOTE: splitted bit
    uint64_t wmsgsz                               : 11;
    uint64_t cwmsgsz                              : 11;
    uint64_t ucwmsgsz                             : 11;
    uint64_t cohlat                               : 16;
    uint64_t oooto                                : 16;
    uint64_t r9                                   : 32;
    uint64_t component_nonce                      : 64;
    uuid_t mgr_uuid_1;
    uuid_t mgr_uuid_2;
    uint64_t serial_number                        : 64;
    uint64_t thermal_attributes                   : 16;
    uint64_t upper_thermal_limit                  : 10;
    uint64_t caution_thermal_limit                : 10;
    uint64_t lowest_thermal_limit                 : 11;
    uint64_t current_thermal                      : 11;
    uint64_t r10                                  : 6;
    uuid_t z_uuid_1;
    uuid_t z_uuid_2;
    uuid_t c_uuid_1;
    uuid_t c_uuid_2;
    uuid_t fru_uuid_1;
    uuid_t fru_uuid_2;
};

struct opcode_set_structure {
    uint64_t type                       : 12;
    uint64_t vers                       : 4;
    uint64_t size                       : 16;
    uint64_t opcode_set_cap_1_control   : 32;
    uint64_t opcode_set_cap_1           : 64;
    uint64_t cache_sizes                : 4;
    uint64_t r0                         : 4;
    uint64_t write_poison_sizes         : 8;
    uint64_t arithmetic_atomic_sizes    : 8;
    uint64_t logical_fetch_atomic_sizes : 8;
    uint64_t floating_atomic_sizes      : 8;
    uint64_t swap_compare_atomic_sizes  : 8;
    uint64_t atomic_lat                 : 16;
    uuid_t opcode_set_uuid_ptr;
    uint64_t opcode_set_ptr             : 32;
    uint64_t r1                         : 24;
    uint64_t vocl_1                     : 5;
    uint64_t vocl_2                     : 5;
    uint64_t vocl_3                     : 5;
    uint64_t vocl_4                     : 5;
    uint64_t vocl_5                     : 5;
    uint64_t vocl_6                     : 5;
    uint64_t vocl_7                     : 5;
    uint64_t vocl_8                     : 5;
    uint64_t r2                         : 64;
};

struct interface_structure {
    uint64_t type                    : 12;
    uint64_t vers                    : 4;
    uint64_t size                    : 16;
    uint64_t interface_id            : 12;
    uint64_t hvs                     : 5;
    uint64_t r0                      : 7;
    uint64_t peer_daisy_interface_id : 8;
    uint64_t i_status                : 32;
    uint64_t i_control               : 32;
    uint64_t i_cap_1                 : 32;
    uint64_t i_cap_1_control         : 32;
    uint64_t i_cap_2                 : 32;
    uint64_t i_cap_2_control         : 32;
    uint64_t i_error_status          : 16;
    uint64_t i_error_detect          : 16;
    uint64_t i_error_fault_injection : 16;
    uint64_t i_error_trigger         : 16;
    uint64_t i_signal_target         : 48;
    uint64_t teth                    : 4;
    uint64_t tete                    : 4;
    uint64_t fc_fwd_progress         : 8;
    uint64_t ll_tx_packet_alignment  : 8;
    uint64_t ll_rx_packet_alignment  : 8;
    uint64_t max_implicit_fc_credits : 16;
    uint64_t peer_interface_id       : 12;
    uint64_t r1                      : 4;
    uint64_t peer_base_c_class       : 16;
    uint64_t peer_cid                : 12;
    uint64_t r2                      : 4;
    uint64_t peer_sid                : 16;
    uint64_t peer_state              : 32;
    uint64_t path_propagation_time   : 16;
    uint64_t tr_index                : 4;
    uint64_t tr_cid                  : 12;
    uint64_t vc_pco_enabled          : 32;
    uint64_t ee_tx_packet_alignment  : 8;
    uint64_t ee_rx_packet_alignment  : 8;
    uint64_t ee_tx_min_packet_start  : 8;
    uint64_t ee_rx_min_packet_start  : 8;
    uint64_t hve                     : 5;
    uint64_t r3                      : 4;
    uint64_t lsrint                  : 5;
    uint64_t ttc_unit                : 2;
    uint64_t peer_component_ttc      : 16;
    uint64_t peer_nonce              : 64;
    uint64_t aggregation_support     : 8;
    uint64_t r4                      : 8;
    uint64_t max_phy_retrain_events  : 8;
    uint64_t tx_llrt_ack             : 20;
    uint64_t rx_llrt_ack             : 20;
    uint64_t te_history_threshold    : 12;
    uint64_t r5                      : 20;
    uint64_t link_ctl_control        : 32;
    uint64_t r6                      : 64;
    uint64_t next_i_ptr              : 32;
    uint64_t r7                      : 32;
    uint64_t next_ai_ptr             : 32;
    uint64_t next_ig_ptr             : 32;
    uint64_t i_phy_ptr               : 32;
    uint64_t i_stats_ptr             : 32;
    uint64_t mechanical_ptr          : 32;
    uint64_t vd_ptr                  : 32;
};

struct interface_phy_structure {
    uint64_t type                             : 12;
    uint64_t vers                             : 4;
    uint64_t size                             : 16;
    uint64_t phy_type                         : 8;
    uint64_t txdly                            : 4;
    uint64_t r0                               : 20;
    uint64_t next_interface_phy_ptr           : 32;
    uint64_t vd_ptr                           : 32;
    uint64_t phy_status                       : 32;
    uint64_t phy_control                      : 32;
    uint64_t phy_cap_1                        : 32;
    uint64_t phy_cap_1_control                : 32;
    uint64_t phy_events                       : 32;
    uint64_t r1                               : 32;
    uint64_t r2                               : 64;
    uint64_t phy_lane_status                  : 32;
    uint64_t phy_lane_control                 : 32;
    uint64_t phy_lane_cap                     : 32;
    uint64_t phy_remote_lane_cap              : 32;
    uint64_t phy_lp_control                   : 32;
    uint64_t phy_lp_timing_cap                : 32;
    uint64_t phy_lp_cap                       : 32;
    uint64_t phy_remote_lp_cap                : 32;
    uint64_t phy_up_lp_control                : 32;
    uint64_t phy_up_lp_timing_cap             : 32;
    uint64_t phy_up_lp_cap                    : 32;
    uint64_t phy_remote_up_lp_cap             : 32;
    uint64_t phy_extended_status              : 32;
    uint64_t phy_extended_control             : 32;
    uint64_t phy_extended_cap                 : 32;
    uint64_t phy_remote_extended_cap          : 32;
    uint64_t phy_specific_configuration_space : 64;
};

struct interface_statistics_structure {
    uint64_t type                             : 12;
    uint64_t vers                             : 4;
    uint64_t size                             : 16;
    uint64_t i_stat_cap_1                     : 16;
    uint64_t i_stat_control                   : 8;
    uint64_t i_stat_status                    : 8;
    uint64_t vendor_defined_ptr               : 32;
    uint64_t i_snapshot_ptr                   : 32;
    uint64_t i_snapshot_interval              : 64;
    uint64_t pcrc_errors                      : 32;
    uint64_t ecrc_errors                      : 32;
    uint64_t tx_stomped_ecrc                  : 32;
    uint64_t rx_stomped_ecrc                  : 32;
    uint64_t non_crc_transient_errors         : 32;
    uint64_t llr_recovery                     : 32;
    uint64_t packet_deadline_discards         : 32;
    uint64_t marked_ecn                       : 32;
    uint64_t received_ecn                     : 32;
    uint64_t link_nte                         : 16;
    uint64_t akey_violations                  : 16;
    uint64_t r0                               : 64;
    uint64_t r1                               : 64;
    uint64_t total_transmitted_requests       : 64;
    uint64_t total_transmitted_request_bytes  : 64;
    uint64_t total_received_requests          : 64;
    uint64_t total_received_request_bytes     : 64;
    uint64_t total_transmitted_responses      : 64;
    uint64_t total_transmitted_response_bytes : 64;
    uint64_t total_received_responses         : 64;
    uint64_t total_received_response_bytes    : 64;
    uint64_t occupancy_vcn                    : 64;
    uint64_t total_transmitted_packets_vc0    : 64;
    uint64_t total_transmitted_bytes_vc0      : 64;
    uint64_t total_received_packets_vc0       : 64;
    uint64_t total_received_bytes_vc0         : 64;
    uint64_t occupancy_vc0                    : 64;
};

struct component_error_and_signal_event_structure {
    uint64_t type                          : 12;
    uint64_t vers                          : 4;
    uint64_t size                          : 16;
    uint64_t e_control                     : 16;
    uint64_t e_status                      : 16;
    uint64_t error_mgr_cid                 : 12;
    uint64_t error_mgr_sid                 : 16;
    uint64_t r0                            : 4;
    uint64_t error_signal_cap_1            : 16;
    uint64_t error_signal_cap_1_control    : 16;
    uint64_t event_mgr_cid                 : 12;
    uint64_t event_mgr_sid                 : 16;
    uint64_t r1                            : 4;
    uint64_t elog_ptr                      : 32;
    uint64_t signal_interrupt_address_0    : 64;
    uint64_t signal_interrupt_address_1    : 64;
    uint64_t signal_interrupt_data_0       : 32;
    uint64_t signal_interrupt_data_1       : 32;
    uint64_t c_error_status                : 64;
    uint64_t c_error_detect                : 64;
    uint64_t c_error_signal                : 64;
    uint64_t c_error_trigger               : 64;
    uint64_t c_error_fault_injection       : 64;
    uint64_t c_error_signal_target_63_0    : 64;
    uint64_t c_error_signal_target_127_64  : 64;
    uint64_t c_error_signal_target_191_128 : 64;
    uint64_t c_event_detect                : 64;
    uint64_t c_event_injection             : 64;
    uint64_t c_event_signal_target_63_0    : 64;
    uint64_t c_event_signal_target_127_64  : 64;
    uint64_t c_event_signal_target_191_128 : 64;
    uint64_t i_event_detect                : 64;
    uint64_t i_event_injection             : 64;
    uint64_t i_event_signal_target_63_0    : 64;
    uint64_t i_event_signal_target_127_64  : 64;
    uint64_t i_event_signal_target_191_128 : 64;
    uint64_t mv0                           : 1;
    uint64_t mgmt_vc_0                     : 5;
    uint64_t mgmt_interface_id_0           : 12;
    uint64_t mv1                           : 1;
    uint64_t mgmt_vc_1                     : 5;
    uint64_t mgmt_interface_id_1           : 12;
    uint64_t mv2                           : 1;
    uint64_t mgmt_vc_2                     : 5;
    uint64_t mgmt_interface_id_2           : 12;
    uint64_t r2                            : 10;
    uint64_t mv3                           : 1;
    uint64_t mgmt_vc_3                     : 5;
    uint64_t mgmt_interface_id_3           : 12;
    uint64_t mv4                           : 1;
    uint64_t mgmt_vc_4                     : 5;
    uint64_t mgmt_interface_id_4           : 12;
    uint64_t mv5                           : 1;
    uint64_t mgmt_vc_5                     : 5;
    uint64_t mgmt_interface_id_5           : 12;
    uint64_t r3                            : 10;
    uint64_t mv6                           : 1;
    uint64_t mgmt_vc_6                     : 5;
    uint64_t mgmt_interface_id_6           : 12;
    uint64_t mv7                           : 1;
    uint64_t mgmt_vc_7                     : 5;
    uint64_t mgmt_interface_id_7           : 12;
    uint64_t r4                            : 28;
    uint64_t pm_uep_mask                   : 8;
    uint64_t pfm_uep_mask                  : 8;
    uint64_t sfm_uep_mask                  : 8;
    uint64_t error_uep_mask                : 8;
    uint64_t event_uep_mask                : 8;
    uint64_t media_uep_mask                : 8;
    uint64_t pwr_mgr_uep_mask              : 8;
    uint64_t mech_mgr_uep_mask             : 8;
    uint64_t mech_mgr_cid                  : 12;
    uint64_t mech_mgr_sid                  : 16;
    uint64_t r5                            : 4;
    uint64_t media_mgr_cid                 : 12;
    uint64_t media_mgr_sid                 : 16;
    uint64_t r6                            : 4;
    uint64_t r7                            : 64;
    uint64_t r8                            : 64;
};

struct component_media_structure {
    uint64_t type                                                   : 12;
    uint64_t vers                                                   : 4;
    uint64_t size                                                   : 16;
    uint64_t vendor_defined_ptr                                     : 32;
    uint64_t component_media_control                                : 32;
    uint64_t next_media_structure_ptr                               : 32;
    uint64_t primary_media_status                                   : 64;
    uint64_t secondary_media_status                                 : 64;
        uint64_t primary_media_cap_1_63_0_primary_byte_block_addressing : 1; //FIXME: name too long.
    uint64_t primary_media_cap_1_127_64                             : 64;
    uint64_t secondary_media_cap_1_63_0                             : 64;
    uint64_t secondary_media_cap_1_127_64                           : 64;
    uint64_t primary_media_cap_1_control                            : 64;
    uint64_t secondary_media_cap_1_control                          : 64;
    uint64_t primary_media_fault_injection                          : 64;
    uint64_t secondary_media_fault_injection                        : 64;
    uint64_t pri_mlen                                               : 8;
    uint64_t plog_size                                              : 4;
    uint64_t primary_media_base_address                             : 52;
    uint64_t sec_mlen                                               : 8;
    uint64_t slog_size                                              : 4;
    uint64_t secondary_media_base_address                           : 52;
    uint64_t interface_id_mask                                      : 16;
    uint64_t c_media_id                                             : 4;
    uint64_t r0                                                     : 12;
    uint64_t backup_mgmt_ptr                                        : 32;
    uint64_t primary_namespace_ptr                                  : 32;
    uint64_t primary_sit_ptr                                        : 32;
    uint64_t secondary_namespace_ptr                                : 32;
    uint64_t secondary_sit_ptr                                      : 32;
    uint64_t primary_log_ptr                                        : 32;
    uint64_t secondary_log_ptr                                      : 32;
    uint64_t oem_data_ptr                                           : 32;
    uint64_t se_vendor_defined_ptr                                  : 32;
    uint64_t primary_label_data_ptr                                 : 32;
    uint64_t secondary_label_data_ptr                               : 32;
    uint64_t primary_correctable_error_count                        : 24;
    uint64_t primary_uncorrectable_error_count                      : 24;
    uint64_t power_status                                           : 16;
    uint64_t secondary_correctable_error_count                      : 24;
    uint64_t secondary_uncorrectable_error_count                    : 24;
    uint64_t pflat                                                  : 16;
    uint64_t pri_r_wear_percentage                                  : 7;
    uint64_t pri_w_wear_percentage                                  : 7;
    uint64_t pri_notify_percentage                                  : 7;
    uint64_t sec_r_wear_percentage                                  : 7;
    uint64_t sec_w_wear_percentage                                  : 7;
    uint64_t sec_notify_percentage                                  : 7;
    uint64_t se_percentage                                          : 7;
    uint64_t r1                                                     : 15;
    uint64_t min_pri_maintenance_time                               : 16;
    uint64_t min_sec_maintenance_time                               : 16;
    uint64_t max_pri_maintenance_time                               : 16;
    uint64_t max_sec_maintenance_time                               : 16;
    uint64_t inform_pri_maintenance_time                            : 16;
    uint64_t inform_sec_maintenance_time                            : 16;
    uint64_t se_overwrite_pattern                                   : 32;
    uint64_t max_factory_default_time                               : 16;
    uint64_t factory_default_duration                               : 16;
    uint64_t factory_default_success_count                          : 16;
    uint64_t factory_default_failure_count                          : 16;
    uint64_t primary_region_address                                 : 64;
    uint64_t primary_region_length                                  : 64;
    uint64_t secondary_region_address                               : 64;
    uint64_t secondary_region_length                                : 64;
    uuid_t primary_media_uuid_63_0;
    uuid_t primary_media_uuid_127_64;
    uuid_t secondary_media_uuid_63_0;
    uuid_t secondary_media_uuid_127_64;
    uint64_t r2                                                     : 64;
    uint64_t r3                                                     : 64;
};

struct component_switch_structure {
    uint32_t type                                : 12;
    uint32_t vers                                : 4;
    uint32_t size                                : 16;
    uint32_t switch_cap_1                        : 32;
    uint32_t switch_cap_1_control                : 32;
    uint32_t switch_status                       : 16;
    uint32_t switch_op_ctl                       : 16;
    uint32_t lprt_size                           : 12;
    uint32_t hc_size                             : 4;
    uint32_t mhc_size                            : 4;
    uint32_t max_routes                          : 12;
    uint32_t uvcatsz                             : 5;
    uint32_t mvcatsz                             : 5;
    uint32_t mcprt_msmcprt_pad_size              : 5;
    uint32_t r0                                  : 17;
    uint32_t lprt_mprt_row_size                  : 16;
    uint32_t mcprt_msmcprt_row_size              : 12;
    uint32_t r1                                  : 4;
    uint32_t default_multicast_egress_interface  : 12;
    uint32_t default_collective_egress_interface : 12;
    uint32_t r2                                  : 8;
    uint32_t max_ulat                            : 16;
    uint32_t max_mlat                            : 16;
    uint32_t mcprt_size                          : 12;
    uint32_t r3                                  : 20;
    uint32_t mprt_size                           : 16;
    uint32_t r4                                  : 16;
    uint32_t msmcprt_size                        : 28;
    uint32_t r5                                  : 4;
    uint32_t r6                                  : 32;
    uint32_t route_control_ptr                   : 32;
    uint32_t mcprt_ptr                           : 32;
    uint32_t msmcprt_ptr                         : 32;
    uuid_t mce_uuid_31_0;
    uuid_t mce_uuid_63_32;
    uuid_t mce_uuid_95_64;
    uuid_t mce_uuid_127_96;
};

struct component_statistics_structure {
    uint64_t type                     : 12;
    uint64_t vers                     : 4;
    uint64_t size                     : 16;
    uint64_t cstat_cap_1              : 8;
    uint64_t cstat_control            : 8;
    uint64_t cstat_status             : 8;
    uint64_t st_type                  : 8;
    uint64_t next_statistics_ptr      : 32;
    uint64_t c_snapshot_ptr           : 32;
    uint64_t ee_retry_exceeded        : 16;
    uint64_t r0                       : 48;
    uint64_t r1                       : 64;
    uint64_t opcode_vendor_defined_0  : 32;
    uint64_t opcode_vendor_defined_1  : 32;
    uint64_t opcode_vendor_defined_2  : 32;
    uint64_t opcode_vendor_defined_3  : 32;
    uint64_t opcode_vendor_defined_4  : 32;
    uint64_t opcode_vendor_defined_5  : 32;
    uint64_t opcode_vendor_defined_6  : 32;
    uint64_t opcode_vendor_defined_7  : 32;
    uint64_t opcode_vendor_defined_8  : 32;
    uint64_t opcode_vendor_defined_9  : 32;
    uint64_t opcode_vendor_defined_10 : 32;
    uint64_t opcode_vendor_defined_11 : 32;
    uint64_t opcode_vendor_defined_12 : 32;
    uint64_t opcode_vendor_defined_13 : 32;
    uint64_t opcode_vendor_defined_14 : 32;
    uint64_t opcode_vendor_defined_15 : 32;
    uint64_t opcode_vendor_defined_16 : 32;
    uint64_t opcode_vendor_defined_17 : 32;
    uint64_t opcode_vendor_defined_18 : 32;
    uint64_t opcode_vendor_defined_19 : 32;
    uint64_t opcode_vendor_defined_20 : 32;
    uint64_t opcode_vendor_defined_21 : 32;
    uint64_t opcode_vendor_defined_22 : 32;
    uint64_t opcode_vendor_defined_23 : 32;
    uint64_t opcode_vendor_defined_24 : 32;
    uint64_t opcode_vendor_defined_25 : 32;
    uint64_t opcode_vendor_defined_26 : 32;
    uint64_t opcode_vendor_defined_27 : 32;
    uint64_t opcode_vendor_defined_28 : 32;
    uint64_t opcode_vendor_defined_29 : 32;
    uint64_t opcode_vendor_defined_30 : 32;
    uint64_t opcode_vendor_defined_31 : 32;
};

struct component_extension_structure {
    uint64_t type                         : 12;
    uint64_t vers                         : 4;
    uint64_t size                         : 16;
    uint64_t next_component_extension_ptr : 32;
    uint64_t control_structure_ptr_0      : 32;
    uint64_t control_structure_ptr_1      : 32;
    uint64_t control_structure_ptr_2      : 32;
    uint64_t control_structure_ptr_3      : 32;
    uint64_t control_structure_ptr_4      : 32;
    uint64_t control_structure_ptr_5      : 32;
    uint64_t control_structure_ptr_6      : 32;
    uint64_t control_structure_ptr_7      : 32;
    uint64_t control_structure_ptr_8      : 32;
    uint64_t control_structure_ptr_9      : 32;
    uint64_t control_structure_ptr_10     : 48;
    uint64_t r0                           : 16;
    uint64_t control_structure_ptr_11     : 48;
    uint64_t r1                           : 16;
};

struct component_multicast_structure {
    uint64_t type                : 12;
    uint64_t vers                : 4;
    uint64_t size                : 16;
    uint64_t mcast_cap_1         : 16;
    uint64_t mcast_cap_1_control : 16;
    uint64_t cmt_size            : 12;
    uint64_t r0                  : 8;
    uint64_t rcmt_size           : 12;
    uint64_t minte0              : 16;
    uint64_t minte1              : 16;
    uint64_t minte2              : 16;
    uint64_t minte3              : 16;
    uint64_t minte4              : 16;
    uint64_t minte5              : 16;
    uint64_t minte6              : 16;
    uint64_t minte7              : 16;
    uint64_t cmt_ptr             : 32;
    uint64_t mscmt_ptr           : 32;
    uint64_t rcmt_ptr            : 32;
    uint64_t msrcmt_ptr          : 32;
    uint64_t mscmt_size          : 28;
    uint64_t r1                  : 4;
    uint64_t msrcmt_size         : 28;
    uint64_t u_pad_size          : 5;
    uint64_t r_pad_size          : 5;
    uint64_t max_rsp             : 4;
    uint64_t r2                  : 22;
    uint64_t mcgpt               : 16;
    uint64_t r3                  : 48;
    uuid_t mce_uuid_63_0;
    uuid_t mce_uuid_127_64;
};

struct component_security_structure {
    uint64_t type                                 : 12;
    uint64_t vers                                 : 4;
    uint64_t size                                 : 16;
    uint64_t security_supported_hash              : 32;
    uint64_t security_cap_1                       : 32;
    uint64_t security_control                     : 32;
    uint64_t tik_table_size                       : 28;
    uint64_t c_cert_table_size                    : 8;
    uint64_t r0                                   : 28;
    uint64_t c_cert_table_ptr                     : 32;
    uint64_t certificate_table_ptr                : 32;
    uint64_t tik_table_ptr                        : 32;
    uint64_t certificate_table_size               : 32;
    uint64_t security_supported_encrypt           : 32;
    uint64_t buffer_supported_hash                : 32;
    uuid_t security_supported_hash_uuid_63_0;
    uuid_t security_supported_hash_uuid_127_63;
    uuid_t security_supported_encrypt_uuid_63_0;
    uuid_t security_supported_encrypt_uuid_127_63;
};

struct component_tr_structure {
    uint64_t type         : 12;
    uint64_t vers         : 4;
    uint64_t size         : 16;
    uint64_t tr_status    : 32;
    uint64_t tr_table_ptr : 32;
    uint64_t r0           : 32;
    uint64_t r1           : 64;
    uint64_t r2           : 64;
};

struct component_image_structure {
    uint64_t type                     : 12;
    uint64_t vers                     : 4;
    uint64_t size                     : 16;
    uint64_t image_table_size         : 32;
    uint64_t image_cap_1              : 16;
    uint64_t image_cap_1_control      : 16;
    uint64_t image_table_control      : 16;
    uint64_t image_fault_injection    : 16;
    uint64_t image_table_ptr          : 48;
    uint64_t image_uep                : 3;
    uint64_t r0                       : 13;
    uint64_t next_image_structure_ptr : 48;
    uint64_t r1                       : 16;
    uint64_t image_detect             : 16;
    uint64_t image_signal_target      : 48;
    uint64_t r2                       : 64;
};

struct component_precision_time_structure {
    uint64_t type                     : 12;
    uint64_t vers                     : 4;
    uint64_t size                     : 16;
    uint64_t pt_cap_1                 : 16;
    uint64_t pt_ctl                   : 16;
    uint64_t gtc_cid                  : 12;
    uint64_t r0                       : 4;
    uint64_t gtc_sid                  : 16;
    uint64_t pt_rsp_cid               : 12;
    uint64_t r1                       : 4;
    uint64_t pt_rsp_sid               : 16;
    uint64_t alt_pt_rsp_cid           : 12;
    uint64_t tc                       : 4;
    uint64_t alt_pt_rsp_sid           : 16;
    uint64_t component_pt_granularity : 10;
    uint64_t ptd_granularity          : 10;
    uint64_t ptd_interface            : 12;
    uint64_t alt_ptd_interface        : 12;
    uint64_t r2                       : 20;
    uint64_t next_pt_ptr              : 32;
};

struct component_mechanical_structure {
    uint64_t type                           : 12;
    uint64_t vers                           : 4;
    uint64_t size                           : 16;
    uint64_t mechanical_status              : 32;
    uint64_t mechanical_cap_1               : 64;
    uint64_t mechanical_control             : 64;
    uint64_t mechanical_module_id           : 12;
    uint64_t enclosure_id                   : 20;
    uint64_t mech_vendor_def_ptr            : 32;
    uint64_t mechanical_event_detect        : 32;
    uint64_t mechanical_event_injection     : 32;
    uint64_t mechanical_signal_target_63_0  : 64;
    uint64_t mechanical_signal_target_95_64 : 32;
    uint64_t r0                             : 32;
    uint64_t r1                             : 64;
};

struct component_destination_table_structure {
    uint64_t type                      : 12;
    uint64_t vers                      : 4;
    uint64_t size                      : 16;
    uint64_t destination_table_cap_1   : 32;
    uint64_t destination_table_control : 32;
    uint64_t ssdt_size                 : 12;
    uint64_t hc_size                   : 4;
    uint64_t mhc_size                  : 4;
    uint64_t max_routes                : 12;
    uint64_t req_vcatsz                : 5;
    uint64_t rsp_vcatsz                : 5;
    uint64_t rit_pad_size              : 5;
    uint64_t r0                        : 17;
    uint64_t ssdt_msdt_row_size        : 16;
    uint64_t msdt_size                 : 16;
    uint64_t rit_size                  : 12;
    uint64_t r1                        : 20;
    uint64_t route_control_ptr         : 32;
    uint64_t ssdt_ptr                  : 32;
    uint64_t msdt_ptr                  : 32;
    uint64_t req_vcat_ptr              : 32;
    uint64_t rit_ptr                   : 32;
    uint64_t rsp_vcat_ptr              : 32;
    uint64_t r2                        : 32;
    uint64_t r3                        : 64;
};

struct service_uuid_structure {
    uint64_t type          : 12;
    uint64_t vers          : 4;
    uint64_t size          : 16;
    uuid_t s_uuid_table_sz;
    uint64_t r0            : 16;
    uuid_t s_uuid_ptr;
    uint64_t r1            : 32;
    uint64_t class_0       : 16;
    uint64_t max_si_0      : 16;
    uint64_t class_1       : 16;
    uint64_t max_si_1      : 16;
//    uint64_t ...       : 64; //FIXME: name "..." entry
};

struct component_c_access_structure {
    uint64_t type                : 12;
    uint64_t vers                : 4;
    uint64_t size                : 16;
    uint64_t next_c_access_ptr   : 32;
    uint64_t c_page_size         : 4;
    uint64_t r0                  : 8;
    uint64_t base_address        : 40;
    uint64_t c_access_cap        : 4;
    uint64_t c_access_ctl        : 8;
    uint64_t c_access_table_size : 40;
    uint64_t r1                  : 24;
    uint64_t c_access_r_key_ptr  : 32;
    uint64_t c_access_l_p2p_ptr  : 32;
};

struct responder_bank_structure {
    uint64_t type               : 12;
    uint64_t vers               : 4;
    uint64_t size               : 16;
    uint64_t rspb_cap_1         : 4;
    uint64_t rspb_cap_1_control : 4;
    uint64_t pri_max_banks      : 4;
    uint64_t sec_max_banks      : 4;
    uint64_t max_btags          : 4;
    uint64_t pri_lrsz           : 4;
    uint64_t sec_lrsz           : 4;
    uint64_t ctag_mask          : 4;
    uint64_t pri_blen           : 6;
    uint64_t sec_blen           : 6;
    uint64_t pri_sec_id         : 12;
    uint64_t sec_sec_id         : 12;
    uint64_t dclate             : 16;
    uint64_t ctag_id            : 12;
};

struct requester_bank_structure {
    uint64_t type                              : 12;
    uint64_t vers                              : 4;
    uint64_t size                              : 16;
    uint64_t req_bank_cap_1                    : 8;
    uint64_t req_bank_cap_1_control            : 8;
    uint64_t req_bank_control                  : 16;
    uint64_t pri_max_banks                     : 4;
    uint64_t sec_max_banks                     : 4;
    uint64_t max_btags                         : 4;
    uint64_t pri_lrsz                          : 4;
    uint64_t sec_lrsz                          : 4;
    uint64_t pri_mlen                          : 8;
    uint64_t sec_mlen                          : 8;
    uint64_t pri_blen                          : 6;
    uint64_t sec_blen                          : 6;
    uint64_t ctag_mask                         : 4;
    uint64_t ctag_id                           : 12;
    uint64_t r0                                : 12;
    uint64_t pri_reqla                         : 52;
    uint64_t max_interface                     : 4;
    uint64_t r1                                : 8;
    uint64_t sec_reqla                         : 52;
    uint64_t interface_id_0                    : 8;
    uint64_t interface_id_1                    : 8;
    uint64_t interface_id_2                    : 8;
    uint64_t interface_id_3                    : 8;
    uint64_t interface_id_4                    : 8;
    uint64_t interface_id_5                    : 8;
    uint64_t interface_id_6                    : 8;
    uint64_t interface_id_7                    : 8;
    uint64_t interface_id_8                    : 8;
    uint64_t interface_id_9                    : 8;
    uint64_t interface_id_10                   : 8;
    uint64_t interface_id_11                   : 8;
    uint64_t interface_id_12                   : 8;
    uint64_t interface_id_13                   : 8;
    uint64_t interface_id_14                   : 8;
    uint64_t interface_id_15                   : 8;
    uint64_t valid_interface_id                : 16;
    uint64_t r2                                : 16;
    uint64_t pri_sec_id                        : 16;
    uint64_t sec_sec_id                        : 16;
    uint64_t ctl_reqla                         : 64;
    uint64_t ctl_len                           : 52;
    uint64_t r3                                : 12;
    uint64_t next_requester_bank_structure_ptr : 32;
    uint64_t vendor_defined_ptr                : 32;
};

struct component_pa_structure {
    uint64_t type                     : 12;
    uint64_t vers                     : 4;
    uint64_t size                     : 16;
    uint64_t pa_cap_1                 : 32;
    uint64_t pa_cap_1_control         : 32;
    uint64_t ssap_size                : 12;
    uint64_t mcap_size                : 12;
    uint64_t r0                       : 3;
    uint64_t pad_size                 : 5;
    uint64_t pa_size                  : 16;
    uint64_t r1                       : 16;
    uint64_t msap_size                : 28;
    uint64_t r2                       : 4;
    uint64_t msmcap_size              : 28;
    uint64_t r3                       : 4;
    uint64_t pa_ptr                   : 32;
    uint64_t ssap_ptr                 : 32;
    uint64_t msap_ptr                 : 32;
    uint64_t mcap_ptr                 : 32;
    uint64_t msmcap_ptr               : 32;
    uint64_t sec_size                 : 28;
    uint64_t sec_entry_size           : 4;
    uint64_t sec_ptr                  : 32;
    uint64_t r4                       : 64;
    uint64_t r5                       : 32;
    uint64_t wildcard_peer_attr       : 16;
    uint64_t wildcard_access_key      : 6;
    uint64_t w_acreq                  : 2;
    uint64_t w_acrsp                  : 2;
    uint64_t r6                       : 6;
    uint64_t wildcard_certificate_ptr : 32;
    uint64_t wildcard_tik_ptr         : 32;
    uuid_t mse_uuid_63_0;
    uuid_t mse_uuid_127_64;
};

struct component_event_structure {
    uint64_t type                        : 12;
    uint64_t vers                        : 4;
    uint64_t size                        : 16;
    uint64_t c_event_cap_1               : 16;
    uint64_t c_event_control             : 16;
    uint64_t c_event_interrupt_address_0 : 64;
    uint64_t c_event_interrupt_address_1 : 64;
    uint64_t c_event_interrupt_address_2 : 64;
    uint64_t c_event_interrupt_data_0    : 32;
    uint64_t c_event_interrupt_data_1    : 32;
    uint64_t c_event_interrupt_data_2    : 32;
    uint64_t max_event_records           : 16;
    uint64_t r0                          : 16;
    uint64_t event_record_address_0      : 64;
    uint64_t event_record_address_1      : 64;
    uint64_t event_record_address_2      : 64;
    uint64_t last_event_record_0         : 16;
    uint64_t last_event_record_1         : 16;
    uint64_t last_event_record_2         : 16;
    uint64_t r1                          : 16;
    uint64_t event_signal_63_0           : 64;
    uint64_t event_signal_511_448        : 64;
};

struct component_lpd_structure {
    uint64_t type                             : 12;
    uint64_t vers                             : 4;
    uint64_t size                             : 16;
    uint64_t next_component_lpd_structure_ptr : 32;
    uint64_t lpd_cap_1                        : 32;
    uint64_t lpd_cap_1_control                : 32;
    uint64_t default_hcid                     : 12;
    uint64_t default_hsid                     : 16;
    uint64_t r0                               : 20;
    uint64_t lpd_bus_number                   : 8;
    uint64_t function_table_size              : 8;
    uint64_t mmiol_gz_ds_base                 : 64;
    uint64_t mmiol_size                       : 32;
    uint64_t mmiol_pci_ms_base                : 32;
    uint64_t mmioh_gz_ds_base                 : 64;
    uint64_t mmioh_size                       : 64;
    uint64_t mmioh_pci_ms_base                : 64;
    uint64_t mmio_r_key                       : 32;
    uint64_t r1                               : 32;
    uint64_t r2                               : 64;
    uint64_t f_ctl0                           : 16;
    uint64_t bdf_table_index0                 : 8;
    uint64_t lpd_df_number0                   : 8;
    uint64_t function_ptr0                    : 32;
    uint64_t function_ro_r_key0               : 32;
    uint64_t function_rw_r_key0               : 32;
    uint64_t function_ro_r_keyn               : 32;
    uint64_t function_rw_r_keyn               : 32;
};

struct component_sod_structure {
    uint64_t type              : 12;
    uint64_t vers              : 4;
    uint64_t size              : 16;
    uint64_t sod_cap_1         : 32;
    uint64_t sod_cap_1_control : 32;
    uint64_t ssod_size         : 12;
    uint64_t sode              : 6;
    uint64_t r0                : 14;
    uint64_t msod_size         : 28;
    uint64_t r1                : 4;
    uint64_t ssod_ptr          : 32;
    uint64_t msod_ptr          : 32;
    uint64_t r2                : 32;
    uint64_t r3                : 64;
    uint64_t r4                : 64;
};

struct congestion_management_structure {
    uint64_t type                       : 12;
    uint64_t vers                       : 4;
    uint64_t size                       : 16;
    uint64_t congestion_cap_1           : 16;
    uint64_t congestion_cap_1_control   : 16;
    uint64_t vendor_defined_ptr         : 32;
    uint64_t resource_array_ptr         : 32;
    uint64_t congestion_sampling_window : 32;
    uint64_t packet_generation_delay    : 16;
    uint64_t resource_array_size        : 16;
    uint64_t r0                         : 51;
    uint64_t c_min_index                : 5;
    uint64_t resource_type              : 8;
    uint64_t pidt0                      : 32;
    uint64_t pidt1                      : 32;
    uint64_t pidt2                      : 32;
    uint64_t pidt3                      : 32;
    uint64_t pidt4                      : 32;
    uint64_t pidt5                      : 32;
    uint64_t pidt6                      : 32;
    uint64_t pidt7                      : 32;
    uint64_t pidt8                      : 32;
    uint64_t pidt9                      : 32;
    uint64_t pidt10                     : 32;
    uint64_t pidt11                     : 32;
    uint64_t pidt12                     : 32;
    uint64_t pidt13                     : 32;
    uint64_t pidt14                     : 32;
    uint64_t pidt15                     : 32;
    uint64_t pidt16                     : 32;
    uint64_t pidt17                     : 32;
    uint64_t pidt18                     : 32;
    uint64_t pidt19                     : 32;
    uint64_t pidt20                     : 32;
    uint64_t pidt21                     : 32;
    uint64_t pidt22                     : 32;
    uint64_t pidt23                     : 32;
    uint64_t pidt24                     : 32;
    uint64_t pidt25                     : 32;
    uint64_t pidt26                     : 32;
    uint64_t pidt27                     : 32;
    uint64_t pidt28                     : 32;
    uint64_t pidt29                     : 32;
    uint64_t pidt30                     : 32;
    uint64_t pidt31                     : 32;
};

struct component_rkd_structure {
    uint64_t type                        : 12;
    uint64_t vers                        : 4;
    uint64_t size                        : 16;
    uint64_t rkd_cap_1                   : 16;
    uint64_t rkd_control_1               : 16;
    uint64_t r0                          : 64;
    uint64_t rkd_authorization_63_0      : 64;
    uint64_t rkd_authorization_4095_4032 : 64;
};

struct component_pm_structure {
    uint64_t type                : 12;
    uint64_t vers                : 4;
    uint64_t size                : 16;
    uint64_t pm_cap_1            : 16;
    uint64_t pm_control          : 16;
    uint64_t performance_log_ptr : 32;
    uint64_t r0                  : 32;
};

struct component_atp_structure {
    uint64_t type                             : 12;
    uint64_t vers                             : 4;
    uint64_t size                             : 16;
    uint64_t atp_cap_1                        : 32;
    uint64_t atp_cap_1_control                : 32;
    uint64_t atp_status                       : 32;
    uint64_t stue                             : 5;
    uint64_t r0                               : 35;
    uint64_t failed_reqctxid                  : 24;
    uint64_t outstanding_prg_capacity         : 32;
    uint64_t outstanding_prg_allocation       : 32;
    uint64_t outstanding_prg_request_capacity : 52;
    uint64_t r1                               : 12;
    uint64_t r2                               : 64;
};

struct component_re_table_structure {
    uint64_t type                        : 12;
    uint64_t vers                        : 4;
    uint64_t size                        : 16;
    uint64_t re_table_size               : 32;
    uint64_t re_table_cap_1              : 16;
    uint64_t re_table_cap_1_control      : 16;
    uint64_t re_table_control            : 16;
    uint64_t r0                          : 16;
    uint64_t re_table_ptr                : 48;
    uint64_t re_table_entry_size         : 16;
    uint64_t next_re_table_structure_ptr : 48;
    uint64_t re_table_id                 : 7;
    uint64_t r1                          : 9;
    uuid_t re_uuid_63_0;
    uuid_t re_uuid_127_64;
};

struct component_lph_structure {
    uint64_t type                             : 12;
    uint64_t vers                             : 4;
    uint64_t size                             : 16;
    uint64_t next_component_lph_structure_ptr : 32;
    uint64_t lph_cap_1                        : 32;
    uint64_t lph_cap_1_control                : 32;
    uint64_t default_hcid                     : 12;
    uint64_t default_hsid                     : 16;
    uint64_t r0                               : 20;
    uint64_t lph_pio_rtrs                     : 8;
    uint64_t lph_dma_rtrs                     : 8;
    uint64_t mmiol_gz_ds_base                 : 64;
    uint64_t mmiol_size                       : 32;
    uint64_t mmiol_pci_ms_base                : 32;
    uint64_t mmioh_gz_ds_base                 : 64;
    uint64_t mmioh_size                       : 64;
    uint64_t mmioh_pci_ms_base                : 64;
    uint64_t mmio_r_key                       : 32;
    uint64_t r1                               : 32;
    uint64_t r2                               : 64;
    uint64_t lph_ctl                          : 16;
    uint64_t lph_ecam_size                    : 8;
    uint64_t lph_ecam_bn_offset               : 8;
    uint64_t lph_ecam_ptr                     : 32;
    uint64_t lph_ro_r_key                     : 32;
    uint64_t lph_rw_r_key                     : 32;
    uint64_t lph_rcrb_ptr                     : 32;
    uint64_t r3                               : 32;
    uint64_t r4                               : 64;
};

struct component_page_grid_structure {
    uint64_t type                         : 12;
    uint64_t vers                         : 4;
    uint64_t size                         : 16;
    uint64_t pte_table_sz                 : 32;
    uint64_t pg_zmmu_cap_1                : 32;
    uint64_t pg_zmmu_cap_1_control        : 32;
    uint64_t pg_table_sz                  : 8;
    uint64_t pte_sz                       : 10;
    uint64_t r0                           : 46;
    uint64_t pg_base_ptr                  : 32;
    uint64_t pte_base_ptr                 : 32;
    uint64_t vendor_defined_ptr           : 32;
    uint64_t next_component_page_grid_ptr : 32;
    uint64_t restricted_pg_base_ptr       : 32;
    uint64_t restricted_pte_base_ptr      : 32;
    uint64_t pte_attr_63_0                : 64;
    uint64_t pte_attr_127_64              : 64;
    uint64_t r1                           : 64;
    uint64_t zmmu_supported_page_sizes    : 37;
    uint64_t r2                           : 27;
    uuid_t pg_pte_uuid_63_0;
    uuid_t pg_pte_uuid_127_64;
};

struct component_page_table_structure {
    uint64_t type                          : 12;
    uint64_t vers                          : 4;
    uint64_t size                          : 16;
    uint64_t vendor_defined_ptr            : 32;
    uint64_t pt_zmmu_cap_1                 : 32;
    uint64_t pt_zmmu_cap_1_control         : 32;
    uint64_t pt_length                     : 32;
    uint64_t pte_cache_length              : 32;
    uint64_t pt_ptr                        : 32;
    uint64_t pte_cache_ptr                 : 32;
    uint64_t pte_attr_63_0                 : 64;
    uint64_t pte_attr_127_64               : 64;
    uint64_t r0                            : 32;
    uint64_t next_component_page_table_ptr : 32;
    uint64_t zmmu_supported_page_sizes     : 37;
    uint64_t pte_sz                        : 10;
    uint64_t r1                            : 17;
    uuid_t pt_pte_uuid_63_0;
    uuid_t pt_pte_uuid_127_64;
};

struct component_interleave_structure {
    uint64_t type                          : 12;
    uint64_t vers                          : 4;
    uint64_t size                          : 16;
    uint64_t next_component_interleave_ptr : 32;
    uint64_t r0                            : 64;
    uuid_t interleave_uuid_63_0;
    uuid_t interleave_uuid_127_64;
    uint64_t interleave_specific_data      : 64;
};

struct component_firmware_structure {
    uint64_t type               : 12;
    uint64_t vers               : 4;
    uint64_t size               : 16;
    uint64_t fw_table_sz        : 8;
    uint64_t fw_uep             : 3;
    uint64_t r0                 : 5;
    uint64_t max_fw_update_time : 16;
    uint64_t fw_table_ptr       : 32;
    uint64_t fw_table_cap_1     : 16;
    uint64_t fw_table_control   : 16;
    uint64_t fw_detect          : 16;
    uint64_t fw_signal_target   : 48;
    uint64_t fw_fault_injection : 16;
    uint64_t r1                 : 48;
};

struct component_sw_management_structure {
    uint64_t type                  : 12;
    uint64_t vers                  : 4;
    uint64_t size                  : 16;
    uint64_t swm_cap_1             : 16;
    uint64_t swm_control_1         : 16;
    uint64_t swm_optype            : 8;
    uint64_t swm_error             : 8;
    uint64_t swm_max_size          : 16;
    uint64_t swm_max_read_size     : 16;
    uint64_t swm_max_write_size    : 16;
    uint64_t swm_read_offset       : 16;
    uint64_t swm_read_len          : 16;
    uint64_t swm_write_offset      : 16;
    uint64_t swm_write_len         : 16;
    uint64_t swm_ptr               : 32;
    uint64_t swm_time              : 16;
    uint64_t swm_status            : 16;
    uint64_t swm_interrupt_address : 64;
    uint64_t swm_interrupt_data    : 32;
    uint64_t swm_cid               : 12;
    uint64_t swm_sid               : 16;
    uint64_t swm_cs                : 2;
    uint64_t r0                    : 2;
    uint64_t r1                    : 64;
    uint64_t r2                    : 64;
};

struct fw_table {
    uuid_t fw_uuid0_63_0;
    uuid_t fw_uuid0_127_64;
    uint64_t fw_ctl0                        : 16;
    uint64_t fw_status0                     : 16;
    uint64_t fw_update_success_count0       : 16;
    uint64_t fw_update_failure_count0       : 16;
    uint64_t fw_immutable_address0          : 52;
    uint64_t r0                             : 12;
    uint64_t fw_immutable_length0           : 32;
    uint64_t fw_mutable_length0             : 32;
    uint64_t fw_mutable_address0            : 52;
    uint64_t r1                             : 12;
    uint64_t im_fw_certificate_table_index0 : 8;
    uint64_t im_fw_certificate_id0          : 16;
    uint64_t mu_fw_certificate_table_index0 : 8;
    uint64_t mu_fw_certificate_id0          : 16;
    uint64_t r2                             : 16;
    uint64_t im_fw_certificate_table_indexn : 8;
    uint64_t im_fw_certificate_idn          : 16;
    uint64_t mu_fw_certificate_table_indexn : 8;
    uint64_t mu_fw_certificate_idn          : 16;
};

struct pg_table_and_pte_table {
    uint64_t pg_base_address_0 : 64;
    uint64_t pte_table         : 64;
    uint64_t page_size_0       : 6;
    uint64_t res               : 1;
    uint64_t r0                : 1;
    uint64_t page_count_0      : 24;
    uint64_t base_pte_index_0  : 32;
    uint64_t page_size_n       : 6;
    uint64_t page_count_n      : 24;
    uint64_t base_pte_index_n  : 32;
};

struct restricted_pg_table_and_restricted_pte_table {
    uint64_t pg_base_address_0 : 64;
    uint64_t pte_table         : 64;
};

struct performance_log_record_0 {
    uint32_t dcid                    : 12;
    uint32_t scid                    : 12;
    uint32_t ocl                     : 5;
    uint32_t opcode_0_2              : 3;
    uint32_t opcode_4_3              : 2;
    uint32_t length                  : 7;
    uint32_t rk                      : 1;
    uint32_t gc                      : 1;
    uint32_t nh                      : 1;
    uint32_t lp                      : 1;
    uint32_t ingress_vc              : 5;
    uint32_t ei                      : 1;
    uint32_t eo                      : 1;
    uint32_t tag                     : 12;
    uint32_t ingress_timestamp_31_0  : 32;
    uint32_t ingress_timestamp_63_32 : 32;
    uint32_t egress_delta_timestamp  : 32;
    uint32_t ingress_interface       : 12;
    uint32_t egress_interface        : 12;
    uint32_t vendor_defined_0        : 8;
};

struct performance_log_record_1 {
    uint32_t dcid                    : 12;
    uint32_t scid                    : 12;
    uint32_t ocl                     : 5;
    uint32_t opcode_2_0              : 3;
    uint32_t opcode_4_3              : 2;
    uint32_t length                  : 7;
    uint32_t rk                      : 1;
    uint32_t gc                      : 1;
    uint32_t nh                      : 1;
    uint32_t lp                      : 1;
    uint32_t ingress_vc              : 5;
    uint32_t ei                      : 1;
    uint32_t eo                      : 1;
    uint32_t tag                     : 12;
    uint32_t timestamp_31_0          : 32;
    uint32_t timestamp_63_32         : 32;
    uint32_t egress_delta_timestamp  : 32;
    uint32_t ingress_interface       : 12;
    uint32_t egress_interface        : 12;
    uint32_t vendor_defined_0        : 8;
    uint32_t ingress_packet_deadline : 10;
    uint32_t vendor_defined_1        : 22;
    uint32_t dsid                    : 16;
    uint32_t ssid                    : 16;
};

struct event_record_layout {
    uint32_t a            : 1;
    uint32_t vers         : 2;
    uint32_t cv           : 1;
    uint32_t sv           : 1;
    uint32_t gc           : 1;
    uint32_t iv           : 1;
    uint32_t r0           : 1;
    uint32_t event        : 8;
    uint32_t r1           : 4;
    uint32_t interface_id : 12;
    uint32_t scid         : 12;
    uint32_t ssid         : 16;
    uint32_t r2           : 4;
    uint32_t rc_cid       : 12;
    uint32_t rc_sid       : 16;
    uint32_t r3           : 4;
    uint32_t es           : 32;
};

struct resource_table_layout {
    uint32_t r_min_index0 : 5;
//    uint32_t ...       : 27; //FIXME: name "..." entry
    uint32_t r_min_indexn : 5;
};

struct vendor_defined_structure {
    uint32_t type                : 12;
    uint32_t vers                : 4;
    uint32_t size                : 16;
    uint32_t vendor_defined_data : 32;
};

struct vendor_defined_with_uuid_structure {
    uint64_t type                : 12;
    uint64_t vers                : 4;
    uint64_t size                : 16;
    uint64_t r0                  : 32;
    uuid_t vd_uuid_63_0;
    uuid_t vd_uuid_127_64;
    uint64_t vendor_defined_data : 64;
};

struct image_header_format_0xc86ed8c24bed49bda5143dd11950de9d { //FIXME: name too long.
    uuid_t header_format_uuid_63_0;
    uuid_t header_format_uuid_127_64;
    uuid_t c_uuid_63_0;
    uuid_t c_uuid_127_64;
    uuid_t image_uuid_63_0;
    uuid_t image_uuid_127_64;
    uuid_t authentication_uuid_63_0;
    uuid_t authentication_uuid_127_64;
    uint64_t image_length             : 64;
    uint64_t image_version            : 16;
    uint64_t image_sub_version        : 16;
    uint64_t hd_sz                    : 16;
    uint64_t ek_sz                    : 16;
    uint64_t vdef_sz                  : 16;
    uint64_t name_sz                  : 16;
    uint64_t r0                       : 16;
    uint64_t checksum                 : 16;
    uint64_t hash_digest              : 64;
    uint64_t name                     : 64;
    uint64_t vdef                     : 64;
    uint64_t encryption_key           : 64;
};

struct image_table {
    uuid_t image_uuid0_63_0;
    uuid_t image_uuid0_127_64;
    uint64_t image_ctl0                     : 16;
    uint64_t image_status0                  : 16;
    uint64_t r0                             : 32;
    uint64_t image_address0                 : 64;
    uint64_t image_size0                    : 64;
    uint64_t image_certificate_table_index0 : 8;
    uint64_t image_certificate_id0          : 16;
    uint64_t r1                             : 40;
    uint64_t image_certificate_table_indexn : 8;
    uint64_t image_certificate_idn          : 16;
};

struct service_uuid_table {
    uuid_t service_uuid_0_63_0;
    uuid_t service_uuid_0_127_64;
    uint64_t si_ds_base0         : 52;
    uint64_t r0                  : 12;
    uint64_t si_ds_length0       : 52;
    uint64_t r1                  : 12;
    uint64_t si_cs_base0         : 40;
    uint64_t r2                  : 24;
    uint64_t si_cs_length0       : 40;
    uint64_t r3                  : 24;
//    uint64_t ...       : 64; //FIXME: name "..." entry
};

struct tr_table {
    uint64_t tr_zmmu0_ptr_51_20 : 32;
    uint64_t tr_rtr0_ptr_51_20  : 32;
    uint64_t tr_dt0_ptr         : 32;
    uint64_t tr_pa0_ptr         : 32;
    uint64_t tr_opcode_set0_ptr : 32;
    uint64_t r0                 : 32;
    uint64_t tr_ctl0            : 16;
    uint64_t r1                 : 48;
    uint64_t tr_max_data0       : 64;
    uint64_t tr_rdlat0          : 16;
    uint64_t tr_wrlat0          : 16;
    uint64_t tr_wrplat0         : 16;
    uint64_t tr_rtrft0          : 16;
    uint64_t tr_rdlatn          : 16;
    uint64_t tr_wrlatn          : 16;
    uint64_t tr_wrplatn         : 16;
    uint64_t tr_rtrftn          : 16;
};

struct c_cert_table {
    uint64_t component_certificate_ptr0   : 32;
    uint64_t component_certificate_ptr1   : 32;
    uint64_t component_certificate_ptrm_1 : 32;
    uint64_t component_certificate_ptrm   : 32;
};

struct certificate_table {
    uint64_t certificate_size0             : 16;
    uint64_t max_certificates0             : 16;
    uint64_t r0                            : 28;
    uint64_t max_srsz                      : 4;
    uuid_t certificate_uuid0_63_0;
    uuid_t certificate_uuid0_127_64;
    uint64_t certificate0_0                : 64;
    uint64_t certificaten_max_certificates : 64;
};

struct tik_table {
    uint64_t tik_hash_id0      : 6;
    uint64_t tik_size0         : 4;
    uint64_t r0                : 22;
    uint64_t sequence_number_0 : 32;
    uint64_t tik_0             : 64;
    uint64_t tik_n             : 64;
};

struct lpd_bdf_table {
    uint64_t bdf0   : 16;
    uint64_t bdf1   : 16;
    uint64_t bdf2   : 16;
    uint64_t bdf3   : 16;
    uint64_t bdf124 : 16;
    uint64_t bdf125 : 16;
    uint64_t bdf126 : 16;
    uint64_t bdf127 : 16;
};

struct opcode_set_table {
    uint64_t set_id                                : 3;
    uint64_t r0                                    : 13;
    uint64_t opcode_set_id_control_1               : 16;
    uint64_t next_opcode_set_ptr                   : 32;
    uint64_t r1                                    : 64;
    uint64_t supported_core_64_opcode_set          : 64;
    uint64_t enabled_core_64_opcode_set            : 64;
    uint64_t supported_control_opcode_set          : 64;
    uint64_t enabled_control_opcode_set            : 64;
    uint64_t supported_p2p_core_opcode_set         : 64;
    uint64_t enabled_p2p_core_opcode_set           : 64;
    uint64_t supported_p2p_coherency_opcode_set    : 64;
    uint64_t enabled_p2p_coherency_opcode_set      : 64;
    uint64_t supported_atomic_1_opcode_set         : 64;
    uint64_t enabled_atomic_1_opcode_set           : 64;
    uint64_t supported_ldm_1_opcode_set            : 64;
    uint64_t enabled_ldm_1_opcode_set              : 64;
    uint64_t supported_advanced_1_opcode_set       : 64;
    uint64_t enabled_advanced_1_opcode_set         : 64;
    uint64_t supported_opclass_0x5_opcode_set      : 64;
    uint64_t enabled_opclass_0x5_opcode_set        : 64;
    uint64_t supported_opclass_0x14_opcode_set     : 64;
    uint64_t enabled_opclass_0x14_opcode_set       : 64;
    uint64_t supported_context_id_opcode_set       : 64;
    uint64_t enabled_context_id_opcode_set         : 64;
    uint64_t supported_multicast_opcode_set        : 64;
    uint64_t enabled_multicast_opcode_set          : 64;
    uint64_t supported_sod_opcode_set              : 64;
    uint64_t enabled_sod_opcode_set                : 64;
    uint64_t supported_multi_op_request_sub_op_set : 64;
    uint64_t enabled_multi_op_request_sub_op_set   : 64;
    uint64_t supported_read_multi_op_set           : 32;
    uint64_t enabled_read_multi_op_set             : 32;
    uint64_t r2                                    : 64;
};

struct opcode_set_uuid_table {
    uint64_t supported_p2p_vendor_defined_set             : 64;
    uint64_t enabled_p2p_vendor_defined_set               : 64;
    uint64_t supported_vdo_opcode_set_1                   : 64;
    uint64_t enabled_vdo_opcode_set_1                     : 64;
    uint64_t supported_vdo_opcode_set_8                   : 64;
    uint64_t enabled_vdo_opcode_set_8                     : 64;
    uint64_t supported_p2p_core_subop_request_set_1       : 64; //NOTE: splitted bit
    uint64_t supported_p2p_core_subop_request_set_2       : 64; //NOTE: splitted bit
    uint64_t enabled_p2p_core_subop_request_set_1         : 64; //NOTE: splitted bit
    uint64_t enabled_p2p_core_subop_request_set_2         : 64; //NOTE: splitted bit
    uint64_t supported_p2p_core_subop_response_set_1      : 64; //NOTE: splitted bit
    uint64_t supported_p2p_core_subop_response_set_2      : 64; //NOTE: splitted bit
    uint64_t enabled_p2p_core_subop_response_set_1        : 64; //NOTE: splitted bit
    uint64_t enabled_p2p_core_subop_response_set_2        : 64; //NOTE: splitted bit
    uint64_t supported_p2p_coherency_subop_request_set_1  : 64; //NOTE: splitted bit
    uint64_t supported_p2p_coherency_subop_request_set_2  : 64; //NOTE: splitted bit
    uint64_t enabled_p2p_coherency_subop_request_set_1    : 64; //NOTE: splitted bit
    uint64_t enabled_p2p_coherency_subop_request_set_2    : 64; //NOTE: splitted bit
    uint64_t supported_p2p_coherency_subop_response_set_1 : 64; //NOTE: splitted bit
    uint64_t supported_p2p_coherency_subop_response_set_2 : 64; //NOTE: splitted bit
    uint64_t enabled_p2p_coherency_subop_response_set_1   : 64; //NOTE: splitted bit
    uint64_t enabled_p2p_coherency_subop_response_set_2   : 64; //NOTE: splitted bit
    uuid_t pm_uuid_1;
    uuid_t pm_uuid_2;
    uuid_t vdo_uuid_1_1;
    uuid_t vdo_uuid_1_2;
    uuid_t vdo_uuid_8_1;
    uuid_t vdo_uuid_8_2;
};

struct component_error_elog_entry_format {
    uint64_t vers                 : 2;
    uint64_t error_code           : 7;
    uint64_t log_type             : 4;
    uint64_t r0                   : 19;
    uint64_t error_specific_3_0   : 32;
    uint64_t error_specific_11_4  : 64;
    uint64_t error_specific_19_12 : 64;
    uint64_t error_specific_27_20 : 64;
};

struct interface_error_elog_entry_format {
    uint64_t vers                 : 2;
    uint64_t error_code           : 7;
    uint64_t log_type             : 4;
    uint64_t root_cause           : 7;
    uint64_t interface_id         : 12;
    uint64_t error_specific_3_0   : 32;
    uint64_t error_specific_11_4  : 64;
    uint64_t error_specific_19_12 : 64;
    uint64_t error_specific_27_20 : 64;
};

struct elog_table {
    uint64_t elog_size     : 16;
    uint64_t r0            : 16;
    uint64_t next_elog_ptr : 32;
    uint64_t elog0         : 64;
    uint64_t elogn         : 64;
};

struct packet_relay_access_key_interface_structure_fields_optional { //FIXME: name too long.
    uint64_t vcat_ptr                          : 32;
    uint64_t lprt_ptr                          : 32;
    uint64_t mprt_ptr                          : 32;
    uint64_t r0                                : 32;
    uint64_t interface_ingress_access_key_mask : 64;
    uint64_t interface_egress_access_key_mask  : 64;
};

struct unreliable_multicast_table {
    uint32_t v0    : 1;
    uint32_t vc0   : 5;
    uint32_t em0   : 16;
    uint32_t u_pad : 10;
};

struct reliable_multicast_table {
    uint32_t v0       : 1;
    uint32_t vc0      : 5;
    uint32_t mti0     : 3;
    uint32_t role     : 1;
    uint32_t em0      : 8;
    uint32_t r_pad    : 14;
    uint32_t rsp_ptr0 : 32;
};

struct reliable_multicast_responder_table {
    uint32_t scv0     : 2;
    uint32_t r0       : 2;
    uint32_t rsp_cid0 : 12;
    uint32_t rsp_sid0 : 16;
    uint32_t scvn     : 2;
    uint32_t rsp_cidn : 12;
    uint32_t rsp_sidn : 16;
};

struct unreliable_multicast_table_layout { //FIXME: empty struct.
//    uint0_t mgid_0_f_gmigd_0       : 1; //FIXME: 0 bits.
//    uint0_t u_pad_em_vc_v       : 1; //FIXME: 0 bits.
};

struct reliable_multicast_table_layout { //FIXME: empty struct.
//    uint0_t mgid_0_f_gmigd_0       : 1; //FIXME: 0 bits.
//    uint0_t rsp_ptr_r_pad_em_mti_role_vc_v       : 1; //FIXME: 0 bits.
};

struct ssdt_msdt_table_entry_row_layout { //FIXME: empty struct.

};

struct response_interface_table { //FIXME: empty struct.
//    uint0_t eimn       : 1; //FIXME: 0 bits.
//    uint0_t ...       : 1; //FIXME: 0 bits.
//    uint0_t eim1       : 1; //FIXME: 0 bits.
//    uint0_t eim0       : 1; //FIXME: 0 bits.
};

struct ssdt_msdt_table_layout { //FIXME: empty struct.

};

struct requester_vcat_table { //FIXME: empty struct.
//    uint0_t vc_0       : 1; //FIXME: 0 bits.
//    uint0_t th_vcm       : 1; //FIXME: 0 bits.
//    uint0_t ...       : 1; //FIXME: 0 bits.
};

struct responder_vcat_table { //FIXME: empty struct.
//    uint0_t vc_0       : 1; //FIXME: 0 bits.
//    uint0_t th_vcm       : 1; //FIXME: 0 bits.
//    uint0_t ...       : 1; //FIXME: 0 bits.
};

struct lprt_mprt_table_format { //FIXME: empty struct.
//    uint0_t dcid_0_dsid_0       : 1; //FIXME: 0 bits.
//    uint0_t ei_vca_hc_v       : 1; //FIXME: 0 bits.
//    uint0_t ...       : 1; //FIXME: 0 bits.
//    uint0_t mhc       : 1; //FIXME: 0 bits.
};

struct lprt_route_entry_row_layout { //FIXME: empty struct.

};

struct mcprt_msmcptr_row_format { //FIXME: empty struct.

};

struct mvcat_table {
    uint32_t mvcm0 : 32;
    uint32_t mvcmk : 32;
};

struct route_control_field {
    uint32_t rc_cap_1                         : 16;
    uint32_t r0                               : 9;
    uint32_t dhc                              : 7;
    uint32_t requester_simultaneous_tables_st : 16;
    uint32_t r1                               : 16;
    uint32_t requester_local_table_first_ltf  : 16;
    uint32_t r2                               : 16;
    uint32_t requester_threshold_enable_te    : 16;
    uint32_t r3                               : 16;
    uint32_t responder_simultaneous_tables_st : 32;
    uint32_t responder_local_table_first_ltf  : 32;
    uint32_t responder_threshold_enable_te    : 32;
    uint32_t relay_simultaneous_tables_st     : 32;
    uint32_t relay_local_table_first_ltf      : 32;
    uint32_t relay_threshold_enable_te        : 32;
    uint32_t r4                               : 32;
    uint32_t r5                               : 32;
};

struct mcprt_msmcprt_table_format { //FIXME: empty struct.
//    uint0_t mgid_0_f_gmgid_0       : 1; //FIXME: 0 bits.
//    uint0_t mvca_v       : 1; //FIXME: 0 bits.
//    uint0_t ...       : 1; //FIXME: 0 bits.
};

struct peer_attr_table_format {
    uint16_t peer_attr0 : 16;
};

struct sec_table_format {
    uint32_t certificate_ptr0 : 32;
};

struct ssap_mcap_msap_msmcap_table_formats { //FIXME: empty struct.
//    uint0_t pad       : 1; //FIXME: 0 bits.
//    uint0_t acrsp       : 1; //FIXME: 0 bits.
//    uint0_t acreq       : 1; //FIXME: 0 bits.
//    uint0_t sec_index       : 1; //FIXME: 0 bits.
//    uint0_t akey       : 1; //FIXME: 0 bits.
//    uint0_t pa_index       : 1; //FIXME: 0 bits.
//    uint0_t cid_0       : 1; //FIXME: 0 bits.
//    uint0_t mgid_0       : 1; //FIXME: 0 bits.
//    uint0_t f_cidk_sidk       : 1; //FIXME: 0 bits.
//    uint0_t f_gmgidk       : 1; //FIXME: 0 bits.
};

struct component_c_access_r_key_table {
    uint64_t c_access_ro_r_key0 : 32;
    uint64_t c_access_rw_r_key0 : 32;
    uint64_t c_access_ro_r_keyn : 32;
    uint64_t c_access_rw_r_keyn : 32;
};

struct component_c_access_l_p2p_table {
    uint64_t l_ac0   : 3;
    uint64_t p2p_ac0 : 3;
    uint64_t r0      : 2;
    uint64_t l_ac1   : 3;
    uint64_t p2p_ac1 : 3;
//    uint64_t ...       : 48; //FIXME: name "..." entry
    uint64_t l_acn   : 3;
    uint64_t p2p_acn : 3;
};

struct backup_mgmt_table {
    uint64_t component_backup_cap_1                : 64;
    uint64_t component_backup_cap_1_control        : 64;
    uint64_t component_backup_status_1             : 32;
    uint64_t component_backup_control_1            : 32;
    uint64_t component_backup_fault_injection_1    : 64;
    uint64_t primary_media_backup_control          : 64;
    uint64_t component_backup_fault_injection_2    : 64;
    uint64_t min_lps_wear_threshold                : 7;
    uint64_t lps_wear_threshold                    : 7;
    uint64_t lps_low_thermal_threshold             : 11;
    uint64_t lps_upper_thermal_threshold           : 11;
    uint64_t lps_temp                              : 11;
    uint64_t auto_lps_tps_assessment               : 8;
    uint64_t r0                                    : 9;
    uint64_t lps_operational_time                  : 16;
    uint64_t power_cycle_count                     : 16;
    uint64_t lps_tps_backup_power                  : 16;
    uint64_t max_lps_charge_power                  : 16;
    uint64_t max_lps_charge_time                   : 16;
    uint64_t post_backup_idle_power                : 16;
    uint64_t min_lps_tps_voltage                   : 16;
    uint64_t max_lps_tps_voltage                   : 16;
    uint64_t max_backup_time                       : 16;
    uint64_t max_erase_time                        : 16;
    uint64_t max_restore_time                      : 16;
    uint64_t max_arm_time                          : 16;
    uint64_t max_backup_nvm_init_time              : 16;
    uint64_t max_abort_time                        : 16;
    uint64_t backup_duration                       : 16;
    uint64_t restore_duration                      : 16;
    uint64_t erase_duration                        : 16;
    uint64_t arm_duration                          : 16;
    uint64_t backup_success_count                  : 16;
    uint64_t backup_failure_count                  : 16;
    uint64_t restore_success_count                 : 16;
    uint64_t restore_failure_count                 : 16;
    uint64_t erase_success_count                   : 16;
    uint64_t erase_failure_count                   : 16;
    uint64_t arm_success_count                     : 16;
    uint64_t arm_failure_count                     : 16;
    uint64_t r1                                    : 22;
    uint64_t da_range                              : 6;
    uint64_t da_sz                                 : 4;
    uint64_t pm_backup_ptr                         : 32;
    uint64_t sm_backup_ptr                         : 32;
    uint64_t component_backup_supported_hash       : 32;
    uint64_t component_backup_supported_encryption : 32;
    uint64_t r2                                    : 64;
};

struct pm_backup_table {
    uint64_t pm_backup_table_sz            : 16;
    uint64_t vers                          : 4;
    uint64_t r0                            : 44;
    uint64_t pm_backup_status0             : 64;
    uint64_t pm_backup_control0            : 32;
    uint64_t sm_r_key0                     : 32;
    uint64_t pm_image_address0             : 64;
    uint64_t pm_image_length0              : 64;
    uint64_t sm_image_address0             : 64;
    uint64_t sm_image_length0              : 64;
    uint64_t p2p_iface                     : 4;
    uint64_t sm_cid0                       : 12;
    uint64_t sm_sid0                       : 16;
    uint64_t tc0                           : 5;
    uint64_t r1                            : 27;
    uint64_t hash_certificate_table_index0 : 8;
    uint64_t hash_certificate_id0          : 16;
    uint64_t pm_hash_id0                   : 6;
    uint64_t r2                            : 4;
    uint64_t enc_certificate_table_index0  : 8;
    uint64_t enc_certificate_id0           : 16;
    uint64_t pm_enc_id0                    : 6;
    uint64_t hash_certificate_table_indexn : 8;
    uint64_t hash_certificate_idn          : 16;
    uint64_t pm_hash_idn                   : 6;
    uint64_t enc_certificate_table_indexn  : 8;
    uint64_t enc_certificate_idn           : 16;
    uint64_t pm_enc_idn                    : 6;
};

struct sm_backup_table {
    uint64_t sm_backup_table_sz : 16;
    uint64_t vers               : 4;
    uint64_t r0                 : 44;
    uint64_t sm_backup_status0  : 64;
    uint64_t sm_backup_control0 : 32;
    uint64_t sm_r_key0          : 32;
    uint64_t pm_image_address0  : 64;
    uint64_t sm_image_address0  : 64;
    uint64_t sm_image_length0   : 64;
    uint64_t p2p_iface          : 4;
    uint64_t pm_cid0            : 12;
    uint64_t pm_sid0            : 16;
    uint64_t r1                 : 32;
    uint64_t p2p_ifacen         : 4;
    uint64_t pm_cidn            : 12;
    uint64_t pm_sidn            : 16;
};

struct media_log_entry {
    uint32_t log_type  : 4;
    uint32_t r0        : 4;
    uint32_t log_event : 8;
    uint32_t ri        : 16;
    uint32_t ls_31_0   : 32;
    uint32_t ls_63_32  : 32;
    uint32_t ls_95_64  : 32;
};

struct oem_data_field {
    uint64_t oem_data_size                       : 16;
    uint64_t aggregate_uncorrectable_error_count : 24;
    uint64_t aggregate_correctable_error_count   : 24;
    uint64_t oem_status                          : 32;
    uint64_t backup_fail_count                   : 16;
    uint64_t r0                                  : 16;
    uuid_t oem_data_uuid_63_0;
    uuid_t oem_data_uuid_127_64;
    uint64_t oem_data                            : 64;
};

struct label_data_field {
    uint64_t label_data_size : 24;
    uint64_t label_data      : 64;
};

struct ssod_table_layout { //FIXME: empty struct.
//    uint0_t arm0       : 1; //FIXME: 0 bits.
//    uint0_t arm1       : 1; //FIXME: 0 bits.
//    uint0_t v1       : 1; //FIXME: 0 bits.
//    uint0_t ...       : 1; //FIXME: 0 bits.
//    uint0_t pri_ei1       : 1; //FIXME: 0 bits.
//    uint0_t sec_ei0       : 1; //FIXME: 0 bits.
//    uint0_t v0       : 1; //FIXME: 0 bits.
//    uint0_t dsodid0       : 1; //FIXME: 0 bits.
//    uint0_t pri_ei0       : 1; //FIXME: 0 bits.
//    uint0_t dcid_0       : 1; //FIXME: 0 bits.
};

struct msod_table_layout { //FIXME: empty struct.
//    uint0_t arm0       : 1; //FIXME: 0 bits.
//    uint0_t arm1       : 1; //FIXME: 0 bits.
//    uint0_t v1       : 1; //FIXME: 0 bits.
//    uint0_t ...       : 1; //FIXME: 0 bits.
//    uint0_t pri_ei1       : 1; //FIXME: 0 bits.
//    uint0_t sec_ei0       : 1; //FIXME: 0 bits.
//    uint0_t v0       : 1; //FIXME: 0 bits.
//    uint0_t dsodid0       : 1; //FIXME: 0 bits.
//    uint0_t pri_ei0       : 1; //FIXME: 0 bits.
//    uint0_t f_cidk_sidk       : 1; //FIXME: 0 bits.
};

struct re_table_layout {
    uint64_t re_size : 16;
    uint64_t re_0    : 48;
    uint64_t re_n    : 48;
};

/* Revisit: Make these defines an enum */
#define GENZ_MIN_STRUCTURE					(0x0)
#define GENZ_CORE_STRUCTURE					(0x0)
#define GENZ_OPCODE_SET_STRUCTURE				(0x1)
#define GENZ_INTERFACE_STRUCTURE				(0x2)
#define GENZ_INTERFACE_PHY_STRUCTURE				(0x3)
#define GENZ_INTERFACE_STATISTICS_STRUCTURE			(0x4)
#define GENZ_COMPONENT_ERROR_AND_SIGNAL_STRUCTURE		(0x5)
#define GENZ_COMPONENT_MEDIA_STRUCTURE				(0x6)
#define GENZ_COMPONENT_SWITCH_STRUCTURE				(0x7)
#define GENZ_COMPONENT_STATISTICS_STRUCTURE			(0x8)
#define GENZ_COMPONENT_EXTENSION_STRUCTURE			(0x9)
#define GENZ_VENDOR_DEFINED_STRUCTURE				(0xa)
#define GENZ_VENDOR_DEFINED_WITH_UUID_STRUCTURE			(0xb)
#define GENZ_COMPONENT_MULTICAST_STRUCTURE			(0xc)
#define GENZ_COMPONENT_SECURITY_STRUCTURE			(0xd)
#define GENZ_COMPONENT_TR_STRUCTURE				(0xe)
#define GENZ_COMPONENT_IMAGE_STRUCTURE				(0xf)
#define GENZ_COMPONENT_PRECISION_TIME_STRUCTURE			(0x10)
#define GENZ_COMPONENT_MECHANICAL_STRUCTURE			(0x11)
#define GENZ_COMPONENT_DESTINATION_TABLE_STRUCTURE		(0x12)
#define GENZ_SERVICE_UUID_STRUCTURE				(0x13)
#define GENZ_COMPONENT_CACCESS_STRUCTURE			(0x14)
#define GENZ_RESPONDER_BANK_STRUCTURE				(0x15)
#define GENZ_REQUESTER_BANK_STRUCTURE				(0x16)
#define GENZ_COMPONENT_PA_STRUCTURE				(0x17)
#define GENZ_COMPONENT_EVENT_STRUCTURE				(0x18)
#define GENZ_COMPONENT_LPD_STRUCTURE				(0x19)
#define GENZ_COMPONENT_SOD_STRUCTURE				(0x1a)
#define GENZ_CONGESTIION_MANAGEMENT_STRUCTURE			(0x1b)
#define GENZ_COMPONENT_RKD_STRUCTURE				(0x1c)
#define GENZ_COMPONENT_PM_STRUCTURE				(0x1d)
#define GENZ_COMPONENT_ATP_STRUCTURE				(0x1e)
#define GENZ_COMPONENT_RE_TABLE_STRUCTURE			(0x1f)
#define GENZ_COMPONENT_LPH_STRUCTURE				(0x20)
#define GENZ_COMPONENT_PAGE_GRID_STRUCTURE			(0x21)
#define GENZ_COMPONENT_PAGE_TABLE_STRUCTURE			(0x22)
#define GENZ_COMPONENT_INTERLEAVE_STRUCTURE			(0x23)
#define GENZ_COMPONENT_FIRMWARE_STRUCTURE			(0x24)
#define GENZ_COMPONENT_SW_MANAGEMENT_STRUCTURE			(0x25)
#define GENZ_MAX_STRUCTURE					(0xfff)
#define GENZ_MIN_TABLE						(0x1000)
#define GENZ_MAX_TABLE						(0x7fffffff)

#define GENERIC_STRUCT_TYPE					(-1U) /* some value outside of structure and table types */

/* Make this an array of pointers indexed by the type of the structure and separate one for tables. */
/* for  type, read the header and make a file based on the type number and stop there. */

struct genz_structure_name {
	int struct_type;
	char *struct_name;
};

struct control_structure_header {
	uint64_t type			: 12;
	uint64_t vers			: 4;
	uint64_t size			: 16;
};

/* The field containing a pointer can either be 4 bytes or 6 bytes long in the Core Spec. */
enum genz_pointer_size {
	GENZ_4_BYTE_POINTER = 4,
	GENZ_6_BYTE_POINTER = 6,
};

/*
 * A Chained pointer is a linked list of pointers terminating in a NULL. A chain field points to a
 * different type of structure, e.g. the Core Structure interface0 field points to a chain of
 * Interface Structures. The genz_pointer_info field chain_field is the offset from the start of the
 * chained Structure to the "next" field, e.g. the offset from the start of the Interface Structure
 * to the next_i_ptr field.
 *
 * A Control Pointer Array is a list of a structures 
 */
enum genz_control_pointer_flags {
	GENZ_CONTROL_POINTER_NONE = 0,
	GENZ_CONTROL_POINTER_CHAINED = 1,
	GENZ_CONTROL_POINTER_ARRAY = 2,
};

/*
 * Revisit: add a enum for all Gen-Z class types and a structure to map
 * the enum value to a character string. 
 */
#endif
